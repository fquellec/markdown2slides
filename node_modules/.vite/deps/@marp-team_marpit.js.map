{
  "version": 3,
  "sources": ["../../@marp-team/marpit/lib/element.js", "../../entities/lib/maps/entities.json", "../../markdown-it/lib/common/entities.js", "../../uc.micro/categories/P/regex.js", "../../mdurl/encode.js", "../../mdurl/decode.js", "../../mdurl/format.js", "../../mdurl/parse.js", "../../mdurl/index.js", "../../uc.micro/properties/Any/regex.js", "../../uc.micro/categories/Cc/regex.js", "../../uc.micro/categories/Cf/regex.js", "../../uc.micro/categories/Z/regex.js", "../../uc.micro/index.js", "../../markdown-it/lib/common/utils.js", "../../markdown-it/lib/helpers/parse_link_label.js", "../../markdown-it/lib/helpers/parse_link_destination.js", "../../markdown-it/lib/helpers/parse_link_title.js", "../../markdown-it/lib/helpers/index.js", "../../markdown-it/lib/renderer.js", "../../markdown-it/lib/ruler.js", "../../markdown-it/lib/rules_core/normalize.js", "../../markdown-it/lib/rules_core/block.js", "../../markdown-it/lib/rules_core/inline.js", "../../markdown-it/lib/rules_core/linkify.js", "../../markdown-it/lib/rules_core/replacements.js", "../../markdown-it/lib/rules_core/smartquotes.js", "../../markdown-it/lib/rules_core/text_join.js", "../../markdown-it/lib/token.js", "../../markdown-it/lib/rules_core/state_core.js", "../../markdown-it/lib/parser_core.js", "../../markdown-it/lib/rules_block/table.js", "../../markdown-it/lib/rules_block/code.js", "../../markdown-it/lib/rules_block/fence.js", "../../markdown-it/lib/rules_block/blockquote.js", "../../markdown-it/lib/rules_block/hr.js", "../../markdown-it/lib/rules_block/list.js", "../../markdown-it/lib/rules_block/reference.js", "../../markdown-it/lib/common/html_blocks.js", "../../markdown-it/lib/common/html_re.js", "../../markdown-it/lib/rules_block/html_block.js", "../../markdown-it/lib/rules_block/heading.js", "../../markdown-it/lib/rules_block/lheading.js", "../../markdown-it/lib/rules_block/paragraph.js", "../../markdown-it/lib/rules_block/state_block.js", "../../markdown-it/lib/parser_block.js", "../../markdown-it/lib/rules_inline/text.js", "../../markdown-it/lib/rules_inline/linkify.js", "../../markdown-it/lib/rules_inline/newline.js", "../../markdown-it/lib/rules_inline/escape.js", "../../markdown-it/lib/rules_inline/backticks.js", "../../markdown-it/lib/rules_inline/strikethrough.js", "../../markdown-it/lib/rules_inline/emphasis.js", "../../markdown-it/lib/rules_inline/link.js", "../../markdown-it/lib/rules_inline/image.js", "../../markdown-it/lib/rules_inline/autolink.js", "../../markdown-it/lib/rules_inline/html_inline.js", "../../markdown-it/lib/rules_inline/entity.js", "../../markdown-it/lib/rules_inline/balance_pairs.js", "../../markdown-it/lib/rules_inline/fragments_join.js", "../../markdown-it/lib/rules_inline/state_inline.js", "../../markdown-it/lib/parser_inline.js", "../../linkify-it/lib/re.js", "../../linkify-it/index.js", "../../punycode/punycode.es6.js", "../../markdown-it/lib/presets/default.js", "../../markdown-it/lib/presets/zero.js", "../../markdown-it/lib/presets/commonmark.js", "../../markdown-it/lib/index.js", "../../markdown-it/index.js", "../../@marp-team/marpit/lib/helpers/wrap_array.js", "../../@marp-team/marpit/lib/plugin.js", "../../picocolors/picocolors.browser.js", "../../postcss/lib/css-syntax-error.js", "../../postcss/lib/symbols.js", "../../postcss/lib/stringifier.js", "../../postcss/lib/stringify.js", "../../postcss/lib/node.js", "../../postcss/lib/declaration.js", "browser-external:source-map-js", "browser-external:path", "browser-external:url", "../../nanoid/non-secure/index.cjs", "browser-external:fs", "../../postcss/lib/previous-map.js", "../../postcss/lib/input.js", "../../postcss/lib/map-generator.js", "../../postcss/lib/comment.js", "../../postcss/lib/container.js", "../../postcss/lib/document.js", "../../postcss/lib/warn-once.js", "../../postcss/lib/warning.js", "../../postcss/lib/result.js", "../../postcss/lib/tokenize.js", "../../postcss/lib/at-rule.js", "../../postcss/lib/root.js", "../../postcss/lib/list.js", "../../postcss/lib/rule.js", "../../postcss/lib/parser.js", "../../postcss/lib/parse.js", "../../postcss/lib/lazy-result.js", "../../postcss/lib/no-work-result.js", "../../postcss/lib/processor.js", "../../postcss/lib/fromJSON.js", "../../postcss/lib/postcss.js", "../../@marp-team/marpit/lib/helpers/inline_style.js", "../../@marp-team/marpit/lib/helpers/wrap_tokens.js", "../../@marp-team/marpit/lib/markdown/background_image/advanced.js", "../../@marp-team/marpit/lib/markdown/background_image/apply.js", "../../@marp-team/marpit/lib/markdown/background_image/parse.js", "../../@marp-team/marpit/lib/markdown/background_image.js", "../../@marp-team/marpit/lib/markdown/collect.js", "../../js-yaml/lib/common.js", "../../js-yaml/lib/exception.js", "../../js-yaml/lib/snippet.js", "../../js-yaml/lib/type.js", "../../js-yaml/lib/schema.js", "../../js-yaml/lib/type/str.js", "../../js-yaml/lib/type/seq.js", "../../js-yaml/lib/type/map.js", "../../js-yaml/lib/schema/failsafe.js", "../../js-yaml/lib/type/null.js", "../../js-yaml/lib/type/bool.js", "../../js-yaml/lib/type/int.js", "../../js-yaml/lib/type/float.js", "../../js-yaml/lib/schema/json.js", "../../js-yaml/lib/schema/core.js", "../../js-yaml/lib/type/timestamp.js", "../../js-yaml/lib/type/merge.js", "../../js-yaml/lib/type/binary.js", "../../js-yaml/lib/type/omap.js", "../../js-yaml/lib/type/pairs.js", "../../js-yaml/lib/type/set.js", "../../js-yaml/lib/schema/default.js", "../../js-yaml/lib/loader.js", "../../js-yaml/lib/dumper.js", "../../js-yaml/index.js", "../../@marp-team/marpit/lib/markdown/directives/directives.js", "../../@marp-team/marpit/lib/markdown/directives/yaml.js", "../../@marp-team/marpit/lib/markdown/comment.js", "../../@marp-team/marpit/lib/markdown/container.js", "../../lodash.kebabcase/index.js", "../../@marp-team/marpit/lib/markdown/directives/apply.js", "../../markdown-it-front-matter/index.js", "../../@marp-team/marpit/lib/markdown/directives/parse.js", "../../@marp-team/marpit/lib/markdown/fragment.js", "../../@marp-team/marpit/lib/markdown/header_and_footer.js", "../../@marp-team/marpit/lib/helpers/split.js", "../../@marp-team/marpit/lib/markdown/heading_divider.js", "../../@marp-team/marpit/lib/markdown/image/apply.js", "../../color-name/index.js", "../../is-arrayish/index.js", "../../simple-swizzle/index.js", "../../color-string/index.js", "../../@marp-team/marpit/lib/markdown/image/parse.js", "../../@marp-team/marpit/lib/markdown/image.js", "../../@marp-team/marpit/lib/markdown/inline_svg.js", "../../@marp-team/marpit/lib/markdown/slide.js", "../../@marp-team/marpit/lib/markdown/slide_container.js", "../../@marp-team/marpit/lib/helpers/postcss_plugin.js", "../../@marp-team/marpit/lib/markdown/style/assign.js", "../../@marp-team/marpit/lib/markdown/style/parse.js", "../../@marp-team/marpit/lib/markdown/sweep.js", "../../@marp-team/marpit/lib/postcss/advanced_background.js", "../../@marp-team/marpit/lib/postcss/import/hoisting.js", "../../@marp-team/marpit/lib/postcss/import/parse.js", "../../@marp-team/marpit/lib/postcss/import/replace.js", "../../@marp-team/marpit/lib/postcss/import/suppress.js", "../../@marp-team/marpit/lib/postcss/pagination.js", "../../@marp-team/marpit/lib/postcss/printable.js", "../../@marp-team/marpit/lib/postcss/pseudo_selector/prepend.js", "../../cssesc/cssesc.js", "../../@marp-team/marpit/lib/postcss/pseudo_selector/replace.js", "../../@marp-team/marpit/lib/postcss/root/font_size.js", "../../@marp-team/marpit/lib/postcss/root/increasing_specificity.js", "../../@marp-team/marpit/lib/postcss/root/rem.js", "../../@marp-team/marpit/lib/postcss/root/replace.js", "../../@marp-team/marpit/lib/postcss/svg_backdrop.js", "../../@marp-team/marpit/lib/postcss/meta.js", "../../@marp-team/marpit/lib/postcss/section_size.js", "../../@marp-team/marpit/lib/theme/symbol.js", "../../@marp-team/marpit/lib/theme.js", "../../@marp-team/marpit/lib/theme/scaffold.js", "../../@marp-team/marpit/lib/theme_set.js", "../../@marp-team/marpit/lib/marpit.js", "../../@marp-team/marpit/lib/index.js"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.marpitContainer = exports.default = void 0;\n/** @module */\n/**\n * Marpit element class.\n *\n * @alias Element\n */\nclass Element {\n  /**\n   * Create a Element instance.\n   *\n   * Element instance has compatibility with a plain object that is consists by\n   * `tag` key and pairs of attribute names and values. A difference is whether\n   * object has been frozen.\n   *\n   * ```js\n   * import assert from 'assert'\n   * import { Element } from 'marpit'\n   *\n   * const obj = { tag: 'div', class: 'marpit' }\n   * const elm = new Element('div', { class: 'marpit' })\n   *\n   * // This assertion would pass.\n   * assert.deepStrictEqual(obj, { ...elm })\n   * ```\n   *\n   * @param {string} tag Tag name\n   * @param {Object} [attributes={}] Tag attributes\n   */\n  constructor(tag, attributes = {}) {\n    Object.defineProperties(this, {\n      attributes: {\n        value: attributes\n      },\n      tag: {\n        enumerable: true,\n        value: tag\n      }\n    });\n    for (const attr of Object.keys(attributes)) {\n      Object.defineProperty(this, attr, {\n        enumerable: true,\n        value: attributes[attr]\n      });\n    }\n    Object.freeze(this);\n  }\n}\n\n/**\n * Marpit's default container.\n *\n * It would output `<div class=\"marpit\"></div>`.\n *\n * @alias module:element.marpitContainer\n * @type {Element}\n */\nconst marpitContainer = new Element('div', {\n  class: 'marpit'\n});\nexports.marpitContainer = marpitContainer;\nvar _default = Element;\nexports.default = _default;", "{\"Aacute\":\"√Å\",\"aacute\":\"√°\",\"Abreve\":\"ƒÇ\",\"abreve\":\"ƒÉ\",\"ac\":\"‚àæ\",\"acd\":\"‚àø\",\"acE\":\"‚àæÃ≥\",\"Acirc\":\"√Ç\",\"acirc\":\"√¢\",\"acute\":\"¬¥\",\"Acy\":\"–ê\",\"acy\":\"–∞\",\"AElig\":\"√Ü\",\"aelig\":\"√¶\",\"af\":\"‚Å°\",\"Afr\":\"ùîÑ\",\"afr\":\"ùîû\",\"Agrave\":\"√Ä\",\"agrave\":\"√†\",\"alefsym\":\"‚Ñµ\",\"aleph\":\"‚Ñµ\",\"Alpha\":\"Œë\",\"alpha\":\"Œ±\",\"Amacr\":\"ƒÄ\",\"amacr\":\"ƒÅ\",\"amalg\":\"‚®ø\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"‚©ï\",\"And\":\"‚©ì\",\"and\":\"‚àß\",\"andd\":\"‚©ú\",\"andslope\":\"‚©ò\",\"andv\":\"‚©ö\",\"ang\":\"‚à†\",\"ange\":\"‚¶§\",\"angle\":\"‚à†\",\"angmsdaa\":\"‚¶®\",\"angmsdab\":\"‚¶©\",\"angmsdac\":\"‚¶™\",\"angmsdad\":\"‚¶´\",\"angmsdae\":\"‚¶¨\",\"angmsdaf\":\"‚¶≠\",\"angmsdag\":\"‚¶Æ\",\"angmsdah\":\"‚¶Ø\",\"angmsd\":\"‚à°\",\"angrt\":\"‚àü\",\"angrtvb\":\"‚äæ\",\"angrtvbd\":\"‚¶ù\",\"angsph\":\"‚à¢\",\"angst\":\"√Ö\",\"angzarr\":\"‚çº\",\"Aogon\":\"ƒÑ\",\"aogon\":\"ƒÖ\",\"Aopf\":\"ùî∏\",\"aopf\":\"ùïí\",\"apacir\":\"‚©Ø\",\"ap\":\"‚âà\",\"apE\":\"‚©∞\",\"ape\":\"‚âä\",\"apid\":\"‚âã\",\"apos\":\"'\",\"ApplyFunction\":\"‚Å°\",\"approx\":\"‚âà\",\"approxeq\":\"‚âä\",\"Aring\":\"√Ö\",\"aring\":\"√•\",\"Ascr\":\"ùíú\",\"ascr\":\"ùí∂\",\"Assign\":\"‚âî\",\"ast\":\"*\",\"asymp\":\"‚âà\",\"asympeq\":\"‚âç\",\"Atilde\":\"√É\",\"atilde\":\"√£\",\"Auml\":\"√Ñ\",\"auml\":\"√§\",\"awconint\":\"‚à≥\",\"awint\":\"‚®ë\",\"backcong\":\"‚âå\",\"backepsilon\":\"œ∂\",\"backprime\":\"‚Äµ\",\"backsim\":\"‚àΩ\",\"backsimeq\":\"‚ãç\",\"Backslash\":\"‚àñ\",\"Barv\":\"‚´ß\",\"barvee\":\"‚äΩ\",\"barwed\":\"‚åÖ\",\"Barwed\":\"‚åÜ\",\"barwedge\":\"‚åÖ\",\"bbrk\":\"‚éµ\",\"bbrktbrk\":\"‚é∂\",\"bcong\":\"‚âå\",\"Bcy\":\"–ë\",\"bcy\":\"–±\",\"bdquo\":\"‚Äû\",\"becaus\":\"‚àµ\",\"because\":\"‚àµ\",\"Because\":\"‚àµ\",\"bemptyv\":\"‚¶∞\",\"bepsi\":\"œ∂\",\"bernou\":\"‚Ñ¨\",\"Bernoullis\":\"‚Ñ¨\",\"Beta\":\"Œí\",\"beta\":\"Œ≤\",\"beth\":\"‚Ñ∂\",\"between\":\"‚â¨\",\"Bfr\":\"ùîÖ\",\"bfr\":\"ùîü\",\"bigcap\":\"‚ãÇ\",\"bigcirc\":\"‚óØ\",\"bigcup\":\"‚ãÉ\",\"bigodot\":\"‚®Ä\",\"bigoplus\":\"‚®Å\",\"bigotimes\":\"‚®Ç\",\"bigsqcup\":\"‚®Ü\",\"bigstar\":\"‚òÖ\",\"bigtriangledown\":\"‚ñΩ\",\"bigtriangleup\":\"‚ñ≥\",\"biguplus\":\"‚®Ñ\",\"bigvee\":\"‚ãÅ\",\"bigwedge\":\"‚ãÄ\",\"bkarow\":\"‚§ç\",\"blacklozenge\":\"‚ß´\",\"blacksquare\":\"‚ñ™\",\"blacktriangle\":\"‚ñ¥\",\"blacktriangledown\":\"‚ñæ\",\"blacktriangleleft\":\"‚óÇ\",\"blacktriangleright\":\"‚ñ∏\",\"blank\":\"‚ê£\",\"blk12\":\"‚ñí\",\"blk14\":\"‚ñë\",\"blk34\":\"‚ñì\",\"block\":\"‚ñà\",\"bne\":\"=‚É•\",\"bnequiv\":\"‚â°‚É•\",\"bNot\":\"‚´≠\",\"bnot\":\"‚åê\",\"Bopf\":\"ùîπ\",\"bopf\":\"ùïì\",\"bot\":\"‚ä•\",\"bottom\":\"‚ä•\",\"bowtie\":\"‚ãà\",\"boxbox\":\"‚ßâ\",\"boxdl\":\"‚îê\",\"boxdL\":\"‚ïï\",\"boxDl\":\"‚ïñ\",\"boxDL\":\"‚ïó\",\"boxdr\":\"‚îå\",\"boxdR\":\"‚ïí\",\"boxDr\":\"‚ïì\",\"boxDR\":\"‚ïî\",\"boxh\":\"‚îÄ\",\"boxH\":\"‚ïê\",\"boxhd\":\"‚î¨\",\"boxHd\":\"‚ï§\",\"boxhD\":\"‚ï•\",\"boxHD\":\"‚ï¶\",\"boxhu\":\"‚î¥\",\"boxHu\":\"‚ïß\",\"boxhU\":\"‚ï®\",\"boxHU\":\"‚ï©\",\"boxminus\":\"‚äü\",\"boxplus\":\"‚äû\",\"boxtimes\":\"‚ä†\",\"boxul\":\"‚îò\",\"boxuL\":\"‚ïõ\",\"boxUl\":\"‚ïú\",\"boxUL\":\"‚ïù\",\"boxur\":\"‚îî\",\"boxuR\":\"‚ïò\",\"boxUr\":\"‚ïô\",\"boxUR\":\"‚ïö\",\"boxv\":\"‚îÇ\",\"boxV\":\"‚ïë\",\"boxvh\":\"‚îº\",\"boxvH\":\"‚ï™\",\"boxVh\":\"‚ï´\",\"boxVH\":\"‚ï¨\",\"boxvl\":\"‚î§\",\"boxvL\":\"‚ï°\",\"boxVl\":\"‚ï¢\",\"boxVL\":\"‚ï£\",\"boxvr\":\"‚îú\",\"boxvR\":\"‚ïû\",\"boxVr\":\"‚ïü\",\"boxVR\":\"‚ï†\",\"bprime\":\"‚Äµ\",\"breve\":\"Àò\",\"Breve\":\"Àò\",\"brvbar\":\"¬¶\",\"bscr\":\"ùí∑\",\"Bscr\":\"‚Ñ¨\",\"bsemi\":\"‚Åè\",\"bsim\":\"‚àΩ\",\"bsime\":\"‚ãç\",\"bsolb\":\"‚ßÖ\",\"bsol\":\"\\\\\",\"bsolhsub\":\"‚üà\",\"bull\":\"‚Ä¢\",\"bullet\":\"‚Ä¢\",\"bump\":\"‚âé\",\"bumpE\":\"‚™Æ\",\"bumpe\":\"‚âè\",\"Bumpeq\":\"‚âé\",\"bumpeq\":\"‚âè\",\"Cacute\":\"ƒÜ\",\"cacute\":\"ƒá\",\"capand\":\"‚©Ñ\",\"capbrcup\":\"‚©â\",\"capcap\":\"‚©ã\",\"cap\":\"‚à©\",\"Cap\":\"‚ãí\",\"capcup\":\"‚©á\",\"capdot\":\"‚©Ä\",\"CapitalDifferentialD\":\"‚ÖÖ\",\"caps\":\"‚à©Ô∏Ä\",\"caret\":\"‚ÅÅ\",\"caron\":\"Àá\",\"Cayleys\":\"‚Ñ≠\",\"ccaps\":\"‚©ç\",\"Ccaron\":\"ƒå\",\"ccaron\":\"ƒç\",\"Ccedil\":\"√á\",\"ccedil\":\"√ß\",\"Ccirc\":\"ƒà\",\"ccirc\":\"ƒâ\",\"Cconint\":\"‚à∞\",\"ccups\":\"‚©å\",\"ccupssm\":\"‚©ê\",\"Cdot\":\"ƒä\",\"cdot\":\"ƒã\",\"cedil\":\"¬∏\",\"Cedilla\":\"¬∏\",\"cemptyv\":\"‚¶≤\",\"cent\":\"¬¢\",\"centerdot\":\"¬∑\",\"CenterDot\":\"¬∑\",\"cfr\":\"ùî†\",\"Cfr\":\"‚Ñ≠\",\"CHcy\":\"–ß\",\"chcy\":\"—á\",\"check\":\"‚úì\",\"checkmark\":\"‚úì\",\"Chi\":\"Œß\",\"chi\":\"œá\",\"circ\":\"ÀÜ\",\"circeq\":\"‚âó\",\"circlearrowleft\":\"‚Ü∫\",\"circlearrowright\":\"‚Üª\",\"circledast\":\"‚äõ\",\"circledcirc\":\"‚äö\",\"circleddash\":\"‚äù\",\"CircleDot\":\"‚äô\",\"circledR\":\"¬Æ\",\"circledS\":\"‚ìà\",\"CircleMinus\":\"‚äñ\",\"CirclePlus\":\"‚äï\",\"CircleTimes\":\"‚äó\",\"cir\":\"‚óã\",\"cirE\":\"‚ßÉ\",\"cire\":\"‚âó\",\"cirfnint\":\"‚®ê\",\"cirmid\":\"‚´Ø\",\"cirscir\":\"‚ßÇ\",\"ClockwiseContourIntegral\":\"‚à≤\",\"CloseCurlyDoubleQuote\":\"‚Äù\",\"CloseCurlyQuote\":\"‚Äô\",\"clubs\":\"‚ô£\",\"clubsuit\":\"‚ô£\",\"colon\":\":\",\"Colon\":\"‚à∑\",\"Colone\":\"‚©¥\",\"colone\":\"‚âî\",\"coloneq\":\"‚âî\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"‚àÅ\",\"compfn\":\"‚àò\",\"complement\":\"‚àÅ\",\"complexes\":\"‚ÑÇ\",\"cong\":\"‚âÖ\",\"congdot\":\"‚©≠\",\"Congruent\":\"‚â°\",\"conint\":\"‚àÆ\",\"Conint\":\"‚àØ\",\"ContourIntegral\":\"‚àÆ\",\"copf\":\"ùïî\",\"Copf\":\"‚ÑÇ\",\"coprod\":\"‚àê\",\"Coproduct\":\"‚àê\",\"copy\":\"¬©\",\"COPY\":\"¬©\",\"copysr\":\"‚Ñó\",\"CounterClockwiseContourIntegral\":\"‚à≥\",\"crarr\":\"‚Üµ\",\"cross\":\"‚úó\",\"Cross\":\"‚®Ø\",\"Cscr\":\"ùíû\",\"cscr\":\"ùí∏\",\"csub\":\"‚´è\",\"csube\":\"‚´ë\",\"csup\":\"‚´ê\",\"csupe\":\"‚´í\",\"ctdot\":\"‚ãØ\",\"cudarrl\":\"‚§∏\",\"cudarrr\":\"‚§µ\",\"cuepr\":\"‚ãû\",\"cuesc\":\"‚ãü\",\"cularr\":\"‚Ü∂\",\"cularrp\":\"‚§Ω\",\"cupbrcap\":\"‚©à\",\"cupcap\":\"‚©Ü\",\"CupCap\":\"‚âç\",\"cup\":\"‚à™\",\"Cup\":\"‚ãì\",\"cupcup\":\"‚©ä\",\"cupdot\":\"‚äç\",\"cupor\":\"‚©Ö\",\"cups\":\"‚à™Ô∏Ä\",\"curarr\":\"‚Ü∑\",\"curarrm\":\"‚§º\",\"curlyeqprec\":\"‚ãû\",\"curlyeqsucc\":\"‚ãü\",\"curlyvee\":\"‚ãé\",\"curlywedge\":\"‚ãè\",\"curren\":\"¬§\",\"curvearrowleft\":\"‚Ü∂\",\"curvearrowright\":\"‚Ü∑\",\"cuvee\":\"‚ãé\",\"cuwed\":\"‚ãè\",\"cwconint\":\"‚à≤\",\"cwint\":\"‚à±\",\"cylcty\":\"‚å≠\",\"dagger\":\"‚Ä†\",\"Dagger\":\"‚Ä°\",\"daleth\":\"‚Ñ∏\",\"darr\":\"‚Üì\",\"Darr\":\"‚Ü°\",\"dArr\":\"‚áì\",\"dash\":\"‚Äê\",\"Dashv\":\"‚´§\",\"dashv\":\"‚ä£\",\"dbkarow\":\"‚§è\",\"dblac\":\"Àù\",\"Dcaron\":\"ƒé\",\"dcaron\":\"ƒè\",\"Dcy\":\"–î\",\"dcy\":\"–¥\",\"ddagger\":\"‚Ä°\",\"ddarr\":\"‚áä\",\"DD\":\"‚ÖÖ\",\"dd\":\"‚ÖÜ\",\"DDotrahd\":\"‚§ë\",\"ddotseq\":\"‚©∑\",\"deg\":\"¬∞\",\"Del\":\"‚àá\",\"Delta\":\"Œî\",\"delta\":\"Œ¥\",\"demptyv\":\"‚¶±\",\"dfisht\":\"‚•ø\",\"Dfr\":\"ùîá\",\"dfr\":\"ùî°\",\"dHar\":\"‚••\",\"dharl\":\"‚áÉ\",\"dharr\":\"‚áÇ\",\"DiacriticalAcute\":\"¬¥\",\"DiacriticalDot\":\"Àô\",\"DiacriticalDoubleAcute\":\"Àù\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"Àú\",\"diam\":\"‚ãÑ\",\"diamond\":\"‚ãÑ\",\"Diamond\":\"‚ãÑ\",\"diamondsuit\":\"‚ô¶\",\"diams\":\"‚ô¶\",\"die\":\"¬®\",\"DifferentialD\":\"‚ÖÜ\",\"digamma\":\"œù\",\"disin\":\"‚ã≤\",\"div\":\"√∑\",\"divide\":\"√∑\",\"divideontimes\":\"‚ãá\",\"divonx\":\"‚ãá\",\"DJcy\":\"–Ç\",\"djcy\":\"—í\",\"dlcorn\":\"‚åû\",\"dlcrop\":\"‚åç\",\"dollar\":\"$\",\"Dopf\":\"ùîª\",\"dopf\":\"ùïï\",\"Dot\":\"¬®\",\"dot\":\"Àô\",\"DotDot\":\"‚Éú\",\"doteq\":\"‚âê\",\"doteqdot\":\"‚âë\",\"DotEqual\":\"‚âê\",\"dotminus\":\"‚à∏\",\"dotplus\":\"‚àî\",\"dotsquare\":\"‚ä°\",\"doublebarwedge\":\"‚åÜ\",\"DoubleContourIntegral\":\"‚àØ\",\"DoubleDot\":\"¬®\",\"DoubleDownArrow\":\"‚áì\",\"DoubleLeftArrow\":\"‚áê\",\"DoubleLeftRightArrow\":\"‚áî\",\"DoubleLeftTee\":\"‚´§\",\"DoubleLongLeftArrow\":\"‚ü∏\",\"DoubleLongLeftRightArrow\":\"‚ü∫\",\"DoubleLongRightArrow\":\"‚üπ\",\"DoubleRightArrow\":\"‚áí\",\"DoubleRightTee\":\"‚ä®\",\"DoubleUpArrow\":\"‚áë\",\"DoubleUpDownArrow\":\"‚áï\",\"DoubleVerticalBar\":\"‚à•\",\"DownArrowBar\":\"‚§ì\",\"downarrow\":\"‚Üì\",\"DownArrow\":\"‚Üì\",\"Downarrow\":\"‚áì\",\"DownArrowUpArrow\":\"‚áµ\",\"DownBreve\":\"Ãë\",\"downdownarrows\":\"‚áä\",\"downharpoonleft\":\"‚áÉ\",\"downharpoonright\":\"‚áÇ\",\"DownLeftRightVector\":\"‚•ê\",\"DownLeftTeeVector\":\"‚•û\",\"DownLeftVectorBar\":\"‚•ñ\",\"DownLeftVector\":\"‚ÜΩ\",\"DownRightTeeVector\":\"‚•ü\",\"DownRightVectorBar\":\"‚•ó\",\"DownRightVector\":\"‚áÅ\",\"DownTeeArrow\":\"‚Üß\",\"DownTee\":\"‚ä§\",\"drbkarow\":\"‚§ê\",\"drcorn\":\"‚åü\",\"drcrop\":\"‚åå\",\"Dscr\":\"ùíü\",\"dscr\":\"ùíπ\",\"DScy\":\"–Ö\",\"dscy\":\"—ï\",\"dsol\":\"‚ß∂\",\"Dstrok\":\"ƒê\",\"dstrok\":\"ƒë\",\"dtdot\":\"‚ã±\",\"dtri\":\"‚ñø\",\"dtrif\":\"‚ñæ\",\"duarr\":\"‚áµ\",\"duhar\":\"‚•Ø\",\"dwangle\":\"‚¶¶\",\"DZcy\":\"–è\",\"dzcy\":\"—ü\",\"dzigrarr\":\"‚üø\",\"Eacute\":\"√â\",\"eacute\":\"√©\",\"easter\":\"‚©Æ\",\"Ecaron\":\"ƒö\",\"ecaron\":\"ƒõ\",\"Ecirc\":\"√ä\",\"ecirc\":\"√™\",\"ecir\":\"‚âñ\",\"ecolon\":\"‚âï\",\"Ecy\":\"–≠\",\"ecy\":\"—ç\",\"eDDot\":\"‚©∑\",\"Edot\":\"ƒñ\",\"edot\":\"ƒó\",\"eDot\":\"‚âë\",\"ee\":\"‚Öá\",\"efDot\":\"‚âí\",\"Efr\":\"ùîà\",\"efr\":\"ùî¢\",\"eg\":\"‚™ö\",\"Egrave\":\"√à\",\"egrave\":\"√®\",\"egs\":\"‚™ñ\",\"egsdot\":\"‚™ò\",\"el\":\"‚™ô\",\"Element\":\"‚àà\",\"elinters\":\"‚èß\",\"ell\":\"‚Ñì\",\"els\":\"‚™ï\",\"elsdot\":\"‚™ó\",\"Emacr\":\"ƒí\",\"emacr\":\"ƒì\",\"empty\":\"‚àÖ\",\"emptyset\":\"‚àÖ\",\"EmptySmallSquare\":\"‚óª\",\"emptyv\":\"‚àÖ\",\"EmptyVerySmallSquare\":\"‚ñ´\",\"emsp13\":\"‚ÄÑ\",\"emsp14\":\"‚ÄÖ\",\"emsp\":\"‚ÄÉ\",\"ENG\":\"≈ä\",\"eng\":\"≈ã\",\"ensp\":\"‚ÄÇ\",\"Eogon\":\"ƒò\",\"eogon\":\"ƒô\",\"Eopf\":\"ùîº\",\"eopf\":\"ùïñ\",\"epar\":\"‚ãï\",\"eparsl\":\"‚ß£\",\"eplus\":\"‚©±\",\"epsi\":\"Œµ\",\"Epsilon\":\"Œï\",\"epsilon\":\"Œµ\",\"epsiv\":\"œµ\",\"eqcirc\":\"‚âñ\",\"eqcolon\":\"‚âï\",\"eqsim\":\"‚âÇ\",\"eqslantgtr\":\"‚™ñ\",\"eqslantless\":\"‚™ï\",\"Equal\":\"‚©µ\",\"equals\":\"=\",\"EqualTilde\":\"‚âÇ\",\"equest\":\"‚âü\",\"Equilibrium\":\"‚áå\",\"equiv\":\"‚â°\",\"equivDD\":\"‚©∏\",\"eqvparsl\":\"‚ß•\",\"erarr\":\"‚•±\",\"erDot\":\"‚âì\",\"escr\":\"‚ÑØ\",\"Escr\":\"‚Ñ∞\",\"esdot\":\"‚âê\",\"Esim\":\"‚©≥\",\"esim\":\"‚âÇ\",\"Eta\":\"Œó\",\"eta\":\"Œ∑\",\"ETH\":\"√ê\",\"eth\":\"√∞\",\"Euml\":\"√ã\",\"euml\":\"√´\",\"euro\":\"‚Ç¨\",\"excl\":\"!\",\"exist\":\"‚àÉ\",\"Exists\":\"‚àÉ\",\"expectation\":\"‚Ñ∞\",\"exponentiale\":\"‚Öá\",\"ExponentialE\":\"‚Öá\",\"fallingdotseq\":\"‚âí\",\"Fcy\":\"–§\",\"fcy\":\"—Ñ\",\"female\":\"‚ôÄ\",\"ffilig\":\"Ô¨É\",\"fflig\":\"Ô¨Ä\",\"ffllig\":\"Ô¨Ñ\",\"Ffr\":\"ùîâ\",\"ffr\":\"ùî£\",\"filig\":\"Ô¨Å\",\"FilledSmallSquare\":\"‚óº\",\"FilledVerySmallSquare\":\"‚ñ™\",\"fjlig\":\"fj\",\"flat\":\"‚ô≠\",\"fllig\":\"Ô¨Ç\",\"fltns\":\"‚ñ±\",\"fnof\":\"∆í\",\"Fopf\":\"ùîΩ\",\"fopf\":\"ùïó\",\"forall\":\"‚àÄ\",\"ForAll\":\"‚àÄ\",\"fork\":\"‚ãî\",\"forkv\":\"‚´ô\",\"Fouriertrf\":\"‚Ñ±\",\"fpartint\":\"‚®ç\",\"frac12\":\"¬Ω\",\"frac13\":\"‚Öì\",\"frac14\":\"¬º\",\"frac15\":\"‚Öï\",\"frac16\":\"‚Öô\",\"frac18\":\"‚Öõ\",\"frac23\":\"‚Öî\",\"frac25\":\"‚Öñ\",\"frac34\":\"¬æ\",\"frac35\":\"‚Öó\",\"frac38\":\"‚Öú\",\"frac45\":\"‚Öò\",\"frac56\":\"‚Öö\",\"frac58\":\"‚Öù\",\"frac78\":\"‚Öû\",\"frasl\":\"‚ÅÑ\",\"frown\":\"‚å¢\",\"fscr\":\"ùíª\",\"Fscr\":\"‚Ñ±\",\"gacute\":\"«µ\",\"Gamma\":\"Œì\",\"gamma\":\"Œ≥\",\"Gammad\":\"œú\",\"gammad\":\"œù\",\"gap\":\"‚™Ü\",\"Gbreve\":\"ƒû\",\"gbreve\":\"ƒü\",\"Gcedil\":\"ƒ¢\",\"Gcirc\":\"ƒú\",\"gcirc\":\"ƒù\",\"Gcy\":\"–ì\",\"gcy\":\"–≥\",\"Gdot\":\"ƒ†\",\"gdot\":\"ƒ°\",\"ge\":\"‚â•\",\"gE\":\"‚âß\",\"gEl\":\"‚™å\",\"gel\":\"‚ãõ\",\"geq\":\"‚â•\",\"geqq\":\"‚âß\",\"geqslant\":\"‚©æ\",\"gescc\":\"‚™©\",\"ges\":\"‚©æ\",\"gesdot\":\"‚™Ä\",\"gesdoto\":\"‚™Ç\",\"gesdotol\":\"‚™Ñ\",\"gesl\":\"‚ãõÔ∏Ä\",\"gesles\":\"‚™î\",\"Gfr\":\"ùîä\",\"gfr\":\"ùî§\",\"gg\":\"‚â´\",\"Gg\":\"‚ãô\",\"ggg\":\"‚ãô\",\"gimel\":\"‚Ñ∑\",\"GJcy\":\"–É\",\"gjcy\":\"—ì\",\"gla\":\"‚™•\",\"gl\":\"‚â∑\",\"glE\":\"‚™í\",\"glj\":\"‚™§\",\"gnap\":\"‚™ä\",\"gnapprox\":\"‚™ä\",\"gne\":\"‚™à\",\"gnE\":\"‚â©\",\"gneq\":\"‚™à\",\"gneqq\":\"‚â©\",\"gnsim\":\"‚ãß\",\"Gopf\":\"ùîæ\",\"gopf\":\"ùïò\",\"grave\":\"`\",\"GreaterEqual\":\"‚â•\",\"GreaterEqualLess\":\"‚ãõ\",\"GreaterFullEqual\":\"‚âß\",\"GreaterGreater\":\"‚™¢\",\"GreaterLess\":\"‚â∑\",\"GreaterSlantEqual\":\"‚©æ\",\"GreaterTilde\":\"‚â≥\",\"Gscr\":\"ùí¢\",\"gscr\":\"‚Ñä\",\"gsim\":\"‚â≥\",\"gsime\":\"‚™é\",\"gsiml\":\"‚™ê\",\"gtcc\":\"‚™ß\",\"gtcir\":\"‚©∫\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"‚â´\",\"gtdot\":\"‚ãó\",\"gtlPar\":\"‚¶ï\",\"gtquest\":\"‚©º\",\"gtrapprox\":\"‚™Ü\",\"gtrarr\":\"‚•∏\",\"gtrdot\":\"‚ãó\",\"gtreqless\":\"‚ãõ\",\"gtreqqless\":\"‚™å\",\"gtrless\":\"‚â∑\",\"gtrsim\":\"‚â≥\",\"gvertneqq\":\"‚â©Ô∏Ä\",\"gvnE\":\"‚â©Ô∏Ä\",\"Hacek\":\"Àá\",\"hairsp\":\"‚Ää\",\"half\":\"¬Ω\",\"hamilt\":\"‚Ñã\",\"HARDcy\":\"–™\",\"hardcy\":\"—ä\",\"harrcir\":\"‚•à\",\"harr\":\"‚Üî\",\"hArr\":\"‚áî\",\"harrw\":\"‚Ü≠\",\"Hat\":\"^\",\"hbar\":\"‚Ñè\",\"Hcirc\":\"ƒ§\",\"hcirc\":\"ƒ•\",\"hearts\":\"‚ô•\",\"heartsuit\":\"‚ô•\",\"hellip\":\"‚Ä¶\",\"hercon\":\"‚äπ\",\"hfr\":\"ùî•\",\"Hfr\":\"‚Ñå\",\"HilbertSpace\":\"‚Ñã\",\"hksearow\":\"‚§•\",\"hkswarow\":\"‚§¶\",\"hoarr\":\"‚áø\",\"homtht\":\"‚àª\",\"hookleftarrow\":\"‚Ü©\",\"hookrightarrow\":\"‚Ü™\",\"hopf\":\"ùïô\",\"Hopf\":\"‚Ñç\",\"horbar\":\"‚Äï\",\"HorizontalLine\":\"‚îÄ\",\"hscr\":\"ùíΩ\",\"Hscr\":\"‚Ñã\",\"hslash\":\"‚Ñè\",\"Hstrok\":\"ƒ¶\",\"hstrok\":\"ƒß\",\"HumpDownHump\":\"‚âé\",\"HumpEqual\":\"‚âè\",\"hybull\":\"‚ÅÉ\",\"hyphen\":\"‚Äê\",\"Iacute\":\"√ç\",\"iacute\":\"√≠\",\"ic\":\"‚Å£\",\"Icirc\":\"√é\",\"icirc\":\"√Æ\",\"Icy\":\"–ò\",\"icy\":\"–∏\",\"Idot\":\"ƒ∞\",\"IEcy\":\"–ï\",\"iecy\":\"–µ\",\"iexcl\":\"¬°\",\"iff\":\"‚áî\",\"ifr\":\"ùî¶\",\"Ifr\":\"‚Ñë\",\"Igrave\":\"√å\",\"igrave\":\"√¨\",\"ii\":\"‚Öà\",\"iiiint\":\"‚®å\",\"iiint\":\"‚à≠\",\"iinfin\":\"‚ßú\",\"iiota\":\"‚Ñ©\",\"IJlig\":\"ƒ≤\",\"ijlig\":\"ƒ≥\",\"Imacr\":\"ƒ™\",\"imacr\":\"ƒ´\",\"image\":\"‚Ñë\",\"ImaginaryI\":\"‚Öà\",\"imagline\":\"‚Ñê\",\"imagpart\":\"‚Ñë\",\"imath\":\"ƒ±\",\"Im\":\"‚Ñë\",\"imof\":\"‚ä∑\",\"imped\":\"∆µ\",\"Implies\":\"‚áí\",\"incare\":\"‚ÑÖ\",\"in\":\"‚àà\",\"infin\":\"‚àû\",\"infintie\":\"‚ßù\",\"inodot\":\"ƒ±\",\"intcal\":\"‚ä∫\",\"int\":\"‚à´\",\"Int\":\"‚à¨\",\"integers\":\"‚Ñ§\",\"Integral\":\"‚à´\",\"intercal\":\"‚ä∫\",\"Intersection\":\"‚ãÇ\",\"intlarhk\":\"‚®ó\",\"intprod\":\"‚®º\",\"InvisibleComma\":\"‚Å£\",\"InvisibleTimes\":\"‚Å¢\",\"IOcy\":\"–Å\",\"iocy\":\"—ë\",\"Iogon\":\"ƒÆ\",\"iogon\":\"ƒØ\",\"Iopf\":\"ùïÄ\",\"iopf\":\"ùïö\",\"Iota\":\"Œô\",\"iota\":\"Œπ\",\"iprod\":\"‚®º\",\"iquest\":\"¬ø\",\"iscr\":\"ùíæ\",\"Iscr\":\"‚Ñê\",\"isin\":\"‚àà\",\"isindot\":\"‚ãµ\",\"isinE\":\"‚ãπ\",\"isins\":\"‚ã¥\",\"isinsv\":\"‚ã≥\",\"isinv\":\"‚àà\",\"it\":\"‚Å¢\",\"Itilde\":\"ƒ®\",\"itilde\":\"ƒ©\",\"Iukcy\":\"–Ü\",\"iukcy\":\"—ñ\",\"Iuml\":\"√è\",\"iuml\":\"√Ø\",\"Jcirc\":\"ƒ¥\",\"jcirc\":\"ƒµ\",\"Jcy\":\"–ô\",\"jcy\":\"–π\",\"Jfr\":\"ùîç\",\"jfr\":\"ùîß\",\"jmath\":\"»∑\",\"Jopf\":\"ùïÅ\",\"jopf\":\"ùïõ\",\"Jscr\":\"ùí•\",\"jscr\":\"ùíø\",\"Jsercy\":\"–à\",\"jsercy\":\"—ò\",\"Jukcy\":\"–Ñ\",\"jukcy\":\"—î\",\"Kappa\":\"Œö\",\"kappa\":\"Œ∫\",\"kappav\":\"œ∞\",\"Kcedil\":\"ƒ∂\",\"kcedil\":\"ƒ∑\",\"Kcy\":\"–ö\",\"kcy\":\"–∫\",\"Kfr\":\"ùîé\",\"kfr\":\"ùî®\",\"kgreen\":\"ƒ∏\",\"KHcy\":\"–•\",\"khcy\":\"—Ö\",\"KJcy\":\"–å\",\"kjcy\":\"—ú\",\"Kopf\":\"ùïÇ\",\"kopf\":\"ùïú\",\"Kscr\":\"ùí¶\",\"kscr\":\"ùìÄ\",\"lAarr\":\"‚áö\",\"Lacute\":\"ƒπ\",\"lacute\":\"ƒ∫\",\"laemptyv\":\"‚¶¥\",\"lagran\":\"‚Ñí\",\"Lambda\":\"Œõ\",\"lambda\":\"Œª\",\"lang\":\"‚ü®\",\"Lang\":\"‚ü™\",\"langd\":\"‚¶ë\",\"langle\":\"‚ü®\",\"lap\":\"‚™Ö\",\"Laplacetrf\":\"‚Ñí\",\"laquo\":\"¬´\",\"larrb\":\"‚á§\",\"larrbfs\":\"‚§ü\",\"larr\":\"‚Üê\",\"Larr\":\"‚Üû\",\"lArr\":\"‚áê\",\"larrfs\":\"‚§ù\",\"larrhk\":\"‚Ü©\",\"larrlp\":\"‚Ü´\",\"larrpl\":\"‚§π\",\"larrsim\":\"‚•≥\",\"larrtl\":\"‚Ü¢\",\"latail\":\"‚§ô\",\"lAtail\":\"‚§õ\",\"lat\":\"‚™´\",\"late\":\"‚™≠\",\"lates\":\"‚™≠Ô∏Ä\",\"lbarr\":\"‚§å\",\"lBarr\":\"‚§é\",\"lbbrk\":\"‚ù≤\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"‚¶ã\",\"lbrksld\":\"‚¶è\",\"lbrkslu\":\"‚¶ç\",\"Lcaron\":\"ƒΩ\",\"lcaron\":\"ƒæ\",\"Lcedil\":\"ƒª\",\"lcedil\":\"ƒº\",\"lceil\":\"‚åà\",\"lcub\":\"{\",\"Lcy\":\"–õ\",\"lcy\":\"–ª\",\"ldca\":\"‚§∂\",\"ldquo\":\"‚Äú\",\"ldquor\":\"‚Äû\",\"ldrdhar\":\"‚•ß\",\"ldrushar\":\"‚•ã\",\"ldsh\":\"‚Ü≤\",\"le\":\"‚â§\",\"lE\":\"‚â¶\",\"LeftAngleBracket\":\"‚ü®\",\"LeftArrowBar\":\"‚á§\",\"leftarrow\":\"‚Üê\",\"LeftArrow\":\"‚Üê\",\"Leftarrow\":\"‚áê\",\"LeftArrowRightArrow\":\"‚áÜ\",\"leftarrowtail\":\"‚Ü¢\",\"LeftCeiling\":\"‚åà\",\"LeftDoubleBracket\":\"‚ü¶\",\"LeftDownTeeVector\":\"‚•°\",\"LeftDownVectorBar\":\"‚•ô\",\"LeftDownVector\":\"‚áÉ\",\"LeftFloor\":\"‚åä\",\"leftharpoondown\":\"‚ÜΩ\",\"leftharpoonup\":\"‚Üº\",\"leftleftarrows\":\"‚áá\",\"leftrightarrow\":\"‚Üî\",\"LeftRightArrow\":\"‚Üî\",\"Leftrightarrow\":\"‚áî\",\"leftrightarrows\":\"‚áÜ\",\"leftrightharpoons\":\"‚áã\",\"leftrightsquigarrow\":\"‚Ü≠\",\"LeftRightVector\":\"‚•é\",\"LeftTeeArrow\":\"‚Ü§\",\"LeftTee\":\"‚ä£\",\"LeftTeeVector\":\"‚•ö\",\"leftthreetimes\":\"‚ãã\",\"LeftTriangleBar\":\"‚ßè\",\"LeftTriangle\":\"‚ä≤\",\"LeftTriangleEqual\":\"‚ä¥\",\"LeftUpDownVector\":\"‚•ë\",\"LeftUpTeeVector\":\"‚•†\",\"LeftUpVectorBar\":\"‚•ò\",\"LeftUpVector\":\"‚Üø\",\"LeftVectorBar\":\"‚•í\",\"LeftVector\":\"‚Üº\",\"lEg\":\"‚™ã\",\"leg\":\"‚ãö\",\"leq\":\"‚â§\",\"leqq\":\"‚â¶\",\"leqslant\":\"‚©Ω\",\"lescc\":\"‚™®\",\"les\":\"‚©Ω\",\"lesdot\":\"‚©ø\",\"lesdoto\":\"‚™Å\",\"lesdotor\":\"‚™É\",\"lesg\":\"‚ãöÔ∏Ä\",\"lesges\":\"‚™ì\",\"lessapprox\":\"‚™Ö\",\"lessdot\":\"‚ãñ\",\"lesseqgtr\":\"‚ãö\",\"lesseqqgtr\":\"‚™ã\",\"LessEqualGreater\":\"‚ãö\",\"LessFullEqual\":\"‚â¶\",\"LessGreater\":\"‚â∂\",\"lessgtr\":\"‚â∂\",\"LessLess\":\"‚™°\",\"lesssim\":\"‚â≤\",\"LessSlantEqual\":\"‚©Ω\",\"LessTilde\":\"‚â≤\",\"lfisht\":\"‚•º\",\"lfloor\":\"‚åä\",\"Lfr\":\"ùîè\",\"lfr\":\"ùî©\",\"lg\":\"‚â∂\",\"lgE\":\"‚™ë\",\"lHar\":\"‚•¢\",\"lhard\":\"‚ÜΩ\",\"lharu\":\"‚Üº\",\"lharul\":\"‚•™\",\"lhblk\":\"‚ñÑ\",\"LJcy\":\"–â\",\"ljcy\":\"—ô\",\"llarr\":\"‚áá\",\"ll\":\"‚â™\",\"Ll\":\"‚ãò\",\"llcorner\":\"‚åû\",\"Lleftarrow\":\"‚áö\",\"llhard\":\"‚•´\",\"lltri\":\"‚ó∫\",\"Lmidot\":\"ƒø\",\"lmidot\":\"≈Ä\",\"lmoustache\":\"‚é∞\",\"lmoust\":\"‚é∞\",\"lnap\":\"‚™â\",\"lnapprox\":\"‚™â\",\"lne\":\"‚™á\",\"lnE\":\"‚â®\",\"lneq\":\"‚™á\",\"lneqq\":\"‚â®\",\"lnsim\":\"‚ã¶\",\"loang\":\"‚ü¨\",\"loarr\":\"‚áΩ\",\"lobrk\":\"‚ü¶\",\"longleftarrow\":\"‚üµ\",\"LongLeftArrow\":\"‚üµ\",\"Longleftarrow\":\"‚ü∏\",\"longleftrightarrow\":\"‚ü∑\",\"LongLeftRightArrow\":\"‚ü∑\",\"Longleftrightarrow\":\"‚ü∫\",\"longmapsto\":\"‚üº\",\"longrightarrow\":\"‚ü∂\",\"LongRightArrow\":\"‚ü∂\",\"Longrightarrow\":\"‚üπ\",\"looparrowleft\":\"‚Ü´\",\"looparrowright\":\"‚Ü¨\",\"lopar\":\"‚¶Ö\",\"Lopf\":\"ùïÉ\",\"lopf\":\"ùïù\",\"loplus\":\"‚®≠\",\"lotimes\":\"‚®¥\",\"lowast\":\"‚àó\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"‚Üô\",\"LowerRightArrow\":\"‚Üò\",\"loz\":\"‚óä\",\"lozenge\":\"‚óä\",\"lozf\":\"‚ß´\",\"lpar\":\"(\",\"lparlt\":\"‚¶ì\",\"lrarr\":\"‚áÜ\",\"lrcorner\":\"‚åü\",\"lrhar\":\"‚áã\",\"lrhard\":\"‚•≠\",\"lrm\":\"‚Äé\",\"lrtri\":\"‚äø\",\"lsaquo\":\"‚Äπ\",\"lscr\":\"ùìÅ\",\"Lscr\":\"‚Ñí\",\"lsh\":\"‚Ü∞\",\"Lsh\":\"‚Ü∞\",\"lsim\":\"‚â≤\",\"lsime\":\"‚™ç\",\"lsimg\":\"‚™è\",\"lsqb\":\"[\",\"lsquo\":\"‚Äò\",\"lsquor\":\"‚Äö\",\"Lstrok\":\"≈Å\",\"lstrok\":\"≈Ç\",\"ltcc\":\"‚™¶\",\"ltcir\":\"‚©π\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"‚â™\",\"ltdot\":\"‚ãñ\",\"lthree\":\"‚ãã\",\"ltimes\":\"‚ãâ\",\"ltlarr\":\"‚•∂\",\"ltquest\":\"‚©ª\",\"ltri\":\"‚óÉ\",\"ltrie\":\"‚ä¥\",\"ltrif\":\"‚óÇ\",\"ltrPar\":\"‚¶ñ\",\"lurdshar\":\"‚•ä\",\"luruhar\":\"‚•¶\",\"lvertneqq\":\"‚â®Ô∏Ä\",\"lvnE\":\"‚â®Ô∏Ä\",\"macr\":\"¬Ø\",\"male\":\"‚ôÇ\",\"malt\":\"‚ú†\",\"maltese\":\"‚ú†\",\"Map\":\"‚§Ö\",\"map\":\"‚Ü¶\",\"mapsto\":\"‚Ü¶\",\"mapstodown\":\"‚Üß\",\"mapstoleft\":\"‚Ü§\",\"mapstoup\":\"‚Ü•\",\"marker\":\"‚ñÆ\",\"mcomma\":\"‚®©\",\"Mcy\":\"–ú\",\"mcy\":\"–º\",\"mdash\":\"‚Äî\",\"mDDot\":\"‚à∫\",\"measuredangle\":\"‚à°\",\"MediumSpace\":\"‚Åü\",\"Mellintrf\":\"‚Ñ≥\",\"Mfr\":\"ùîê\",\"mfr\":\"ùî™\",\"mho\":\"‚Ñß\",\"micro\":\"¬µ\",\"midast\":\"*\",\"midcir\":\"‚´∞\",\"mid\":\"‚à£\",\"middot\":\"¬∑\",\"minusb\":\"‚äü\",\"minus\":\"‚àí\",\"minusd\":\"‚à∏\",\"minusdu\":\"‚®™\",\"MinusPlus\":\"‚àì\",\"mlcp\":\"‚´õ\",\"mldr\":\"‚Ä¶\",\"mnplus\":\"‚àì\",\"models\":\"‚äß\",\"Mopf\":\"ùïÑ\",\"mopf\":\"ùïû\",\"mp\":\"‚àì\",\"mscr\":\"ùìÇ\",\"Mscr\":\"‚Ñ≥\",\"mstpos\":\"‚àæ\",\"Mu\":\"Œú\",\"mu\":\"Œº\",\"multimap\":\"‚ä∏\",\"mumap\":\"‚ä∏\",\"nabla\":\"‚àá\",\"Nacute\":\"≈É\",\"nacute\":\"≈Ñ\",\"nang\":\"‚à†‚Éí\",\"nap\":\"‚ââ\",\"napE\":\"‚©∞Ã∏\",\"napid\":\"‚âãÃ∏\",\"napos\":\"≈â\",\"napprox\":\"‚ââ\",\"natural\":\"‚ôÆ\",\"naturals\":\"‚Ñï\",\"natur\":\"‚ôÆ\",\"nbsp\":\"¬†\",\"nbump\":\"‚âéÃ∏\",\"nbumpe\":\"‚âèÃ∏\",\"ncap\":\"‚©É\",\"Ncaron\":\"≈á\",\"ncaron\":\"≈à\",\"Ncedil\":\"≈Ö\",\"ncedil\":\"≈Ü\",\"ncong\":\"‚âá\",\"ncongdot\":\"‚©≠Ã∏\",\"ncup\":\"‚©Ç\",\"Ncy\":\"–ù\",\"ncy\":\"–Ω\",\"ndash\":\"‚Äì\",\"nearhk\":\"‚§§\",\"nearr\":\"‚Üó\",\"neArr\":\"‚áó\",\"nearrow\":\"‚Üó\",\"ne\":\"‚â†\",\"nedot\":\"‚âêÃ∏\",\"NegativeMediumSpace\":\"‚Äã\",\"NegativeThickSpace\":\"‚Äã\",\"NegativeThinSpace\":\"‚Äã\",\"NegativeVeryThinSpace\":\"‚Äã\",\"nequiv\":\"‚â¢\",\"nesear\":\"‚§®\",\"nesim\":\"‚âÇÃ∏\",\"NestedGreaterGreater\":\"‚â´\",\"NestedLessLess\":\"‚â™\",\"NewLine\":\"\\n\",\"nexist\":\"‚àÑ\",\"nexists\":\"‚àÑ\",\"Nfr\":\"ùîë\",\"nfr\":\"ùî´\",\"ngE\":\"‚âßÃ∏\",\"nge\":\"‚â±\",\"ngeq\":\"‚â±\",\"ngeqq\":\"‚âßÃ∏\",\"ngeqslant\":\"‚©æÃ∏\",\"nges\":\"‚©æÃ∏\",\"nGg\":\"‚ãôÃ∏\",\"ngsim\":\"‚âµ\",\"nGt\":\"‚â´‚Éí\",\"ngt\":\"‚âØ\",\"ngtr\":\"‚âØ\",\"nGtv\":\"‚â´Ã∏\",\"nharr\":\"‚ÜÆ\",\"nhArr\":\"‚áé\",\"nhpar\":\"‚´≤\",\"ni\":\"‚àã\",\"nis\":\"‚ãº\",\"nisd\":\"‚ã∫\",\"niv\":\"‚àã\",\"NJcy\":\"–ä\",\"njcy\":\"—ö\",\"nlarr\":\"‚Üö\",\"nlArr\":\"‚áç\",\"nldr\":\"‚Ä•\",\"nlE\":\"‚â¶Ã∏\",\"nle\":\"‚â∞\",\"nleftarrow\":\"‚Üö\",\"nLeftarrow\":\"‚áç\",\"nleftrightarrow\":\"‚ÜÆ\",\"nLeftrightarrow\":\"‚áé\",\"nleq\":\"‚â∞\",\"nleqq\":\"‚â¶Ã∏\",\"nleqslant\":\"‚©ΩÃ∏\",\"nles\":\"‚©ΩÃ∏\",\"nless\":\"‚âÆ\",\"nLl\":\"‚ãòÃ∏\",\"nlsim\":\"‚â¥\",\"nLt\":\"‚â™‚Éí\",\"nlt\":\"‚âÆ\",\"nltri\":\"‚ã™\",\"nltrie\":\"‚ã¨\",\"nLtv\":\"‚â™Ã∏\",\"nmid\":\"‚à§\",\"NoBreak\":\"‚Å†\",\"NonBreakingSpace\":\"¬†\",\"nopf\":\"ùïü\",\"Nopf\":\"‚Ñï\",\"Not\":\"‚´¨\",\"not\":\"¬¨\",\"NotCongruent\":\"‚â¢\",\"NotCupCap\":\"‚â≠\",\"NotDoubleVerticalBar\":\"‚à¶\",\"NotElement\":\"‚àâ\",\"NotEqual\":\"‚â†\",\"NotEqualTilde\":\"‚âÇÃ∏\",\"NotExists\":\"‚àÑ\",\"NotGreater\":\"‚âØ\",\"NotGreaterEqual\":\"‚â±\",\"NotGreaterFullEqual\":\"‚âßÃ∏\",\"NotGreaterGreater\":\"‚â´Ã∏\",\"NotGreaterLess\":\"‚âπ\",\"NotGreaterSlantEqual\":\"‚©æÃ∏\",\"NotGreaterTilde\":\"‚âµ\",\"NotHumpDownHump\":\"‚âéÃ∏\",\"NotHumpEqual\":\"‚âèÃ∏\",\"notin\":\"‚àâ\",\"notindot\":\"‚ãµÃ∏\",\"notinE\":\"‚ãπÃ∏\",\"notinva\":\"‚àâ\",\"notinvb\":\"‚ã∑\",\"notinvc\":\"‚ã∂\",\"NotLeftTriangleBar\":\"‚ßèÃ∏\",\"NotLeftTriangle\":\"‚ã™\",\"NotLeftTriangleEqual\":\"‚ã¨\",\"NotLess\":\"‚âÆ\",\"NotLessEqual\":\"‚â∞\",\"NotLessGreater\":\"‚â∏\",\"NotLessLess\":\"‚â™Ã∏\",\"NotLessSlantEqual\":\"‚©ΩÃ∏\",\"NotLessTilde\":\"‚â¥\",\"NotNestedGreaterGreater\":\"‚™¢Ã∏\",\"NotNestedLessLess\":\"‚™°Ã∏\",\"notni\":\"‚àå\",\"notniva\":\"‚àå\",\"notnivb\":\"‚ãæ\",\"notnivc\":\"‚ãΩ\",\"NotPrecedes\":\"‚äÄ\",\"NotPrecedesEqual\":\"‚™ØÃ∏\",\"NotPrecedesSlantEqual\":\"‚ã†\",\"NotReverseElement\":\"‚àå\",\"NotRightTriangleBar\":\"‚ßêÃ∏\",\"NotRightTriangle\":\"‚ã´\",\"NotRightTriangleEqual\":\"‚ã≠\",\"NotSquareSubset\":\"‚äèÃ∏\",\"NotSquareSubsetEqual\":\"‚ã¢\",\"NotSquareSuperset\":\"‚äêÃ∏\",\"NotSquareSupersetEqual\":\"‚ã£\",\"NotSubset\":\"‚äÇ‚Éí\",\"NotSubsetEqual\":\"‚äà\",\"NotSucceeds\":\"‚äÅ\",\"NotSucceedsEqual\":\"‚™∞Ã∏\",\"NotSucceedsSlantEqual\":\"‚ã°\",\"NotSucceedsTilde\":\"‚âøÃ∏\",\"NotSuperset\":\"‚äÉ‚Éí\",\"NotSupersetEqual\":\"‚äâ\",\"NotTilde\":\"‚âÅ\",\"NotTildeEqual\":\"‚âÑ\",\"NotTildeFullEqual\":\"‚âá\",\"NotTildeTilde\":\"‚ââ\",\"NotVerticalBar\":\"‚à§\",\"nparallel\":\"‚à¶\",\"npar\":\"‚à¶\",\"nparsl\":\"‚´Ω‚É•\",\"npart\":\"‚àÇÃ∏\",\"npolint\":\"‚®î\",\"npr\":\"‚äÄ\",\"nprcue\":\"‚ã†\",\"nprec\":\"‚äÄ\",\"npreceq\":\"‚™ØÃ∏\",\"npre\":\"‚™ØÃ∏\",\"nrarrc\":\"‚§≥Ã∏\",\"nrarr\":\"‚Üõ\",\"nrArr\":\"‚áè\",\"nrarrw\":\"‚ÜùÃ∏\",\"nrightarrow\":\"‚Üõ\",\"nRightarrow\":\"‚áè\",\"nrtri\":\"‚ã´\",\"nrtrie\":\"‚ã≠\",\"nsc\":\"‚äÅ\",\"nsccue\":\"‚ã°\",\"nsce\":\"‚™∞Ã∏\",\"Nscr\":\"ùí©\",\"nscr\":\"ùìÉ\",\"nshortmid\":\"‚à§\",\"nshortparallel\":\"‚à¶\",\"nsim\":\"‚âÅ\",\"nsime\":\"‚âÑ\",\"nsimeq\":\"‚âÑ\",\"nsmid\":\"‚à§\",\"nspar\":\"‚à¶\",\"nsqsube\":\"‚ã¢\",\"nsqsupe\":\"‚ã£\",\"nsub\":\"‚äÑ\",\"nsubE\":\"‚´ÖÃ∏\",\"nsube\":\"‚äà\",\"nsubset\":\"‚äÇ‚Éí\",\"nsubseteq\":\"‚äà\",\"nsubseteqq\":\"‚´ÖÃ∏\",\"nsucc\":\"‚äÅ\",\"nsucceq\":\"‚™∞Ã∏\",\"nsup\":\"‚äÖ\",\"nsupE\":\"‚´ÜÃ∏\",\"nsupe\":\"‚äâ\",\"nsupset\":\"‚äÉ‚Éí\",\"nsupseteq\":\"‚äâ\",\"nsupseteqq\":\"‚´ÜÃ∏\",\"ntgl\":\"‚âπ\",\"Ntilde\":\"√ë\",\"ntilde\":\"√±\",\"ntlg\":\"‚â∏\",\"ntriangleleft\":\"‚ã™\",\"ntrianglelefteq\":\"‚ã¨\",\"ntriangleright\":\"‚ã´\",\"ntrianglerighteq\":\"‚ã≠\",\"Nu\":\"Œù\",\"nu\":\"ŒΩ\",\"num\":\"#\",\"numero\":\"‚Ññ\",\"numsp\":\"‚Äá\",\"nvap\":\"‚âç‚Éí\",\"nvdash\":\"‚ä¨\",\"nvDash\":\"‚ä≠\",\"nVdash\":\"‚äÆ\",\"nVDash\":\"‚äØ\",\"nvge\":\"‚â•‚Éí\",\"nvgt\":\">‚Éí\",\"nvHarr\":\"‚§Ñ\",\"nvinfin\":\"‚ßû\",\"nvlArr\":\"‚§Ç\",\"nvle\":\"‚â§‚Éí\",\"nvlt\":\"<‚Éí\",\"nvltrie\":\"‚ä¥‚Éí\",\"nvrArr\":\"‚§É\",\"nvrtrie\":\"‚äµ‚Éí\",\"nvsim\":\"‚àº‚Éí\",\"nwarhk\":\"‚§£\",\"nwarr\":\"‚Üñ\",\"nwArr\":\"‚áñ\",\"nwarrow\":\"‚Üñ\",\"nwnear\":\"‚§ß\",\"Oacute\":\"√ì\",\"oacute\":\"√≥\",\"oast\":\"‚äõ\",\"Ocirc\":\"√î\",\"ocirc\":\"√¥\",\"ocir\":\"‚äö\",\"Ocy\":\"–û\",\"ocy\":\"–æ\",\"odash\":\"‚äù\",\"Odblac\":\"≈ê\",\"odblac\":\"≈ë\",\"odiv\":\"‚®∏\",\"odot\":\"‚äô\",\"odsold\":\"‚¶º\",\"OElig\":\"≈í\",\"oelig\":\"≈ì\",\"ofcir\":\"‚¶ø\",\"Ofr\":\"ùîí\",\"ofr\":\"ùî¨\",\"ogon\":\"Àõ\",\"Ograve\":\"√í\",\"ograve\":\"√≤\",\"ogt\":\"‚ßÅ\",\"ohbar\":\"‚¶µ\",\"ohm\":\"Œ©\",\"oint\":\"‚àÆ\",\"olarr\":\"‚Ü∫\",\"olcir\":\"‚¶æ\",\"olcross\":\"‚¶ª\",\"oline\":\"‚Äæ\",\"olt\":\"‚ßÄ\",\"Omacr\":\"≈å\",\"omacr\":\"≈ç\",\"Omega\":\"Œ©\",\"omega\":\"œâ\",\"Omicron\":\"Œü\",\"omicron\":\"Œø\",\"omid\":\"‚¶∂\",\"ominus\":\"‚äñ\",\"Oopf\":\"ùïÜ\",\"oopf\":\"ùï†\",\"opar\":\"‚¶∑\",\"OpenCurlyDoubleQuote\":\"‚Äú\",\"OpenCurlyQuote\":\"‚Äò\",\"operp\":\"‚¶π\",\"oplus\":\"‚äï\",\"orarr\":\"‚Üª\",\"Or\":\"‚©î\",\"or\":\"‚à®\",\"ord\":\"‚©ù\",\"order\":\"‚Ñ¥\",\"orderof\":\"‚Ñ¥\",\"ordf\":\"¬™\",\"ordm\":\"¬∫\",\"origof\":\"‚ä∂\",\"oror\":\"‚©ñ\",\"orslope\":\"‚©ó\",\"orv\":\"‚©õ\",\"oS\":\"‚ìà\",\"Oscr\":\"ùí™\",\"oscr\":\"‚Ñ¥\",\"Oslash\":\"√ò\",\"oslash\":\"√∏\",\"osol\":\"‚äò\",\"Otilde\":\"√ï\",\"otilde\":\"√µ\",\"otimesas\":\"‚®∂\",\"Otimes\":\"‚®∑\",\"otimes\":\"‚äó\",\"Ouml\":\"√ñ\",\"ouml\":\"√∂\",\"ovbar\":\"‚åΩ\",\"OverBar\":\"‚Äæ\",\"OverBrace\":\"‚èû\",\"OverBracket\":\"‚é¥\",\"OverParenthesis\":\"‚èú\",\"para\":\"¬∂\",\"parallel\":\"‚à•\",\"par\":\"‚à•\",\"parsim\":\"‚´≥\",\"parsl\":\"‚´Ω\",\"part\":\"‚àÇ\",\"PartialD\":\"‚àÇ\",\"Pcy\":\"–ü\",\"pcy\":\"–ø\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"‚Ä∞\",\"perp\":\"‚ä•\",\"pertenk\":\"‚Ä±\",\"Pfr\":\"ùîì\",\"pfr\":\"ùî≠\",\"Phi\":\"Œ¶\",\"phi\":\"œÜ\",\"phiv\":\"œï\",\"phmmat\":\"‚Ñ≥\",\"phone\":\"‚òé\",\"Pi\":\"Œ†\",\"pi\":\"œÄ\",\"pitchfork\":\"‚ãî\",\"piv\":\"œñ\",\"planck\":\"‚Ñè\",\"planckh\":\"‚Ñé\",\"plankv\":\"‚Ñè\",\"plusacir\":\"‚®£\",\"plusb\":\"‚äû\",\"pluscir\":\"‚®¢\",\"plus\":\"+\",\"plusdo\":\"‚àî\",\"plusdu\":\"‚®•\",\"pluse\":\"‚©≤\",\"PlusMinus\":\"¬±\",\"plusmn\":\"¬±\",\"plussim\":\"‚®¶\",\"plustwo\":\"‚®ß\",\"pm\":\"¬±\",\"Poincareplane\":\"‚Ñå\",\"pointint\":\"‚®ï\",\"popf\":\"ùï°\",\"Popf\":\"‚Ñô\",\"pound\":\"¬£\",\"prap\":\"‚™∑\",\"Pr\":\"‚™ª\",\"pr\":\"‚â∫\",\"prcue\":\"‚âº\",\"precapprox\":\"‚™∑\",\"prec\":\"‚â∫\",\"preccurlyeq\":\"‚âº\",\"Precedes\":\"‚â∫\",\"PrecedesEqual\":\"‚™Ø\",\"PrecedesSlantEqual\":\"‚âº\",\"PrecedesTilde\":\"‚âæ\",\"preceq\":\"‚™Ø\",\"precnapprox\":\"‚™π\",\"precneqq\":\"‚™µ\",\"precnsim\":\"‚ã®\",\"pre\":\"‚™Ø\",\"prE\":\"‚™≥\",\"precsim\":\"‚âæ\",\"prime\":\"‚Ä≤\",\"Prime\":\"‚Ä≥\",\"primes\":\"‚Ñô\",\"prnap\":\"‚™π\",\"prnE\":\"‚™µ\",\"prnsim\":\"‚ã®\",\"prod\":\"‚àè\",\"Product\":\"‚àè\",\"profalar\":\"‚åÆ\",\"profline\":\"‚åí\",\"profsurf\":\"‚åì\",\"prop\":\"‚àù\",\"Proportional\":\"‚àù\",\"Proportion\":\"‚à∑\",\"propto\":\"‚àù\",\"prsim\":\"‚âæ\",\"prurel\":\"‚ä∞\",\"Pscr\":\"ùí´\",\"pscr\":\"ùìÖ\",\"Psi\":\"Œ®\",\"psi\":\"œà\",\"puncsp\":\"‚Äà\",\"Qfr\":\"ùîî\",\"qfr\":\"ùîÆ\",\"qint\":\"‚®å\",\"qopf\":\"ùï¢\",\"Qopf\":\"‚Ñö\",\"qprime\":\"‚Åó\",\"Qscr\":\"ùí¨\",\"qscr\":\"ùìÜ\",\"quaternions\":\"‚Ñç\",\"quatint\":\"‚®ñ\",\"quest\":\"?\",\"questeq\":\"‚âü\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"‚áõ\",\"race\":\"‚àΩÃ±\",\"Racute\":\"≈î\",\"racute\":\"≈ï\",\"radic\":\"‚àö\",\"raemptyv\":\"‚¶≥\",\"rang\":\"‚ü©\",\"Rang\":\"‚ü´\",\"rangd\":\"‚¶í\",\"range\":\"‚¶•\",\"rangle\":\"‚ü©\",\"raquo\":\"¬ª\",\"rarrap\":\"‚•µ\",\"rarrb\":\"‚á•\",\"rarrbfs\":\"‚§†\",\"rarrc\":\"‚§≥\",\"rarr\":\"‚Üí\",\"Rarr\":\"‚Ü†\",\"rArr\":\"‚áí\",\"rarrfs\":\"‚§û\",\"rarrhk\":\"‚Ü™\",\"rarrlp\":\"‚Ü¨\",\"rarrpl\":\"‚•Ö\",\"rarrsim\":\"‚•¥\",\"Rarrtl\":\"‚§ñ\",\"rarrtl\":\"‚Ü£\",\"rarrw\":\"‚Üù\",\"ratail\":\"‚§ö\",\"rAtail\":\"‚§ú\",\"ratio\":\"‚à∂\",\"rationals\":\"‚Ñö\",\"rbarr\":\"‚§ç\",\"rBarr\":\"‚§è\",\"RBarr\":\"‚§ê\",\"rbbrk\":\"‚ù≥\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"‚¶å\",\"rbrksld\":\"‚¶é\",\"rbrkslu\":\"‚¶ê\",\"Rcaron\":\"≈ò\",\"rcaron\":\"≈ô\",\"Rcedil\":\"≈ñ\",\"rcedil\":\"≈ó\",\"rceil\":\"‚åâ\",\"rcub\":\"}\",\"Rcy\":\"–†\",\"rcy\":\"—Ä\",\"rdca\":\"‚§∑\",\"rdldhar\":\"‚•©\",\"rdquo\":\"‚Äù\",\"rdquor\":\"‚Äù\",\"rdsh\":\"‚Ü≥\",\"real\":\"‚Ñú\",\"realine\":\"‚Ñõ\",\"realpart\":\"‚Ñú\",\"reals\":\"‚Ñù\",\"Re\":\"‚Ñú\",\"rect\":\"‚ñ≠\",\"reg\":\"¬Æ\",\"REG\":\"¬Æ\",\"ReverseElement\":\"‚àã\",\"ReverseEquilibrium\":\"‚áã\",\"ReverseUpEquilibrium\":\"‚•Ø\",\"rfisht\":\"‚•Ω\",\"rfloor\":\"‚åã\",\"rfr\":\"ùîØ\",\"Rfr\":\"‚Ñú\",\"rHar\":\"‚•§\",\"rhard\":\"‚áÅ\",\"rharu\":\"‚áÄ\",\"rharul\":\"‚•¨\",\"Rho\":\"Œ°\",\"rho\":\"œÅ\",\"rhov\":\"œ±\",\"RightAngleBracket\":\"‚ü©\",\"RightArrowBar\":\"‚á•\",\"rightarrow\":\"‚Üí\",\"RightArrow\":\"‚Üí\",\"Rightarrow\":\"‚áí\",\"RightArrowLeftArrow\":\"‚áÑ\",\"rightarrowtail\":\"‚Ü£\",\"RightCeiling\":\"‚åâ\",\"RightDoubleBracket\":\"‚üß\",\"RightDownTeeVector\":\"‚•ù\",\"RightDownVectorBar\":\"‚•ï\",\"RightDownVector\":\"‚áÇ\",\"RightFloor\":\"‚åã\",\"rightharpoondown\":\"‚áÅ\",\"rightharpoonup\":\"‚áÄ\",\"rightleftarrows\":\"‚áÑ\",\"rightleftharpoons\":\"‚áå\",\"rightrightarrows\":\"‚áâ\",\"rightsquigarrow\":\"‚Üù\",\"RightTeeArrow\":\"‚Ü¶\",\"RightTee\":\"‚ä¢\",\"RightTeeVector\":\"‚•õ\",\"rightthreetimes\":\"‚ãå\",\"RightTriangleBar\":\"‚ßê\",\"RightTriangle\":\"‚ä≥\",\"RightTriangleEqual\":\"‚äµ\",\"RightUpDownVector\":\"‚•è\",\"RightUpTeeVector\":\"‚•ú\",\"RightUpVectorBar\":\"‚•î\",\"RightUpVector\":\"‚Üæ\",\"RightVectorBar\":\"‚•ì\",\"RightVector\":\"‚áÄ\",\"ring\":\"Àö\",\"risingdotseq\":\"‚âì\",\"rlarr\":\"‚áÑ\",\"rlhar\":\"‚áå\",\"rlm\":\"‚Äè\",\"rmoustache\":\"‚é±\",\"rmoust\":\"‚é±\",\"rnmid\":\"‚´Æ\",\"roang\":\"‚ü≠\",\"roarr\":\"‚áæ\",\"robrk\":\"‚üß\",\"ropar\":\"‚¶Ü\",\"ropf\":\"ùï£\",\"Ropf\":\"‚Ñù\",\"roplus\":\"‚®Æ\",\"rotimes\":\"‚®µ\",\"RoundImplies\":\"‚•∞\",\"rpar\":\")\",\"rpargt\":\"‚¶î\",\"rppolint\":\"‚®í\",\"rrarr\":\"‚áâ\",\"Rrightarrow\":\"‚áõ\",\"rsaquo\":\"‚Ä∫\",\"rscr\":\"ùìá\",\"Rscr\":\"‚Ñõ\",\"rsh\":\"‚Ü±\",\"Rsh\":\"‚Ü±\",\"rsqb\":\"]\",\"rsquo\":\"‚Äô\",\"rsquor\":\"‚Äô\",\"rthree\":\"‚ãå\",\"rtimes\":\"‚ãä\",\"rtri\":\"‚ñπ\",\"rtrie\":\"‚äµ\",\"rtrif\":\"‚ñ∏\",\"rtriltri\":\"‚ßé\",\"RuleDelayed\":\"‚ß¥\",\"ruluhar\":\"‚•®\",\"rx\":\"‚Ñû\",\"Sacute\":\"≈ö\",\"sacute\":\"≈õ\",\"sbquo\":\"‚Äö\",\"scap\":\"‚™∏\",\"Scaron\":\"≈†\",\"scaron\":\"≈°\",\"Sc\":\"‚™º\",\"sc\":\"‚âª\",\"sccue\":\"‚âΩ\",\"sce\":\"‚™∞\",\"scE\":\"‚™¥\",\"Scedil\":\"≈û\",\"scedil\":\"≈ü\",\"Scirc\":\"≈ú\",\"scirc\":\"≈ù\",\"scnap\":\"‚™∫\",\"scnE\":\"‚™∂\",\"scnsim\":\"‚ã©\",\"scpolint\":\"‚®ì\",\"scsim\":\"‚âø\",\"Scy\":\"–°\",\"scy\":\"—Å\",\"sdotb\":\"‚ä°\",\"sdot\":\"‚ãÖ\",\"sdote\":\"‚©¶\",\"searhk\":\"‚§•\",\"searr\":\"‚Üò\",\"seArr\":\"‚áò\",\"searrow\":\"‚Üò\",\"sect\":\"¬ß\",\"semi\":\";\",\"seswar\":\"‚§©\",\"setminus\":\"‚àñ\",\"setmn\":\"‚àñ\",\"sext\":\"‚ú∂\",\"Sfr\":\"ùîñ\",\"sfr\":\"ùî∞\",\"sfrown\":\"‚å¢\",\"sharp\":\"‚ôØ\",\"SHCHcy\":\"–©\",\"shchcy\":\"—â\",\"SHcy\":\"–®\",\"shcy\":\"—à\",\"ShortDownArrow\":\"‚Üì\",\"ShortLeftArrow\":\"‚Üê\",\"shortmid\":\"‚à£\",\"shortparallel\":\"‚à•\",\"ShortRightArrow\":\"‚Üí\",\"ShortUpArrow\":\"‚Üë\",\"shy\":\"¬≠\",\"Sigma\":\"Œ£\",\"sigma\":\"œÉ\",\"sigmaf\":\"œÇ\",\"sigmav\":\"œÇ\",\"sim\":\"‚àº\",\"simdot\":\"‚©™\",\"sime\":\"‚âÉ\",\"simeq\":\"‚âÉ\",\"simg\":\"‚™û\",\"simgE\":\"‚™†\",\"siml\":\"‚™ù\",\"simlE\":\"‚™ü\",\"simne\":\"‚âÜ\",\"simplus\":\"‚®§\",\"simrarr\":\"‚•≤\",\"slarr\":\"‚Üê\",\"SmallCircle\":\"‚àò\",\"smallsetminus\":\"‚àñ\",\"smashp\":\"‚®≥\",\"smeparsl\":\"‚ß§\",\"smid\":\"‚à£\",\"smile\":\"‚å£\",\"smt\":\"‚™™\",\"smte\":\"‚™¨\",\"smtes\":\"‚™¨Ô∏Ä\",\"SOFTcy\":\"–¨\",\"softcy\":\"—å\",\"solbar\":\"‚åø\",\"solb\":\"‚ßÑ\",\"sol\":\"/\",\"Sopf\":\"ùïä\",\"sopf\":\"ùï§\",\"spades\":\"‚ô†\",\"spadesuit\":\"‚ô†\",\"spar\":\"‚à•\",\"sqcap\":\"‚äì\",\"sqcaps\":\"‚äìÔ∏Ä\",\"sqcup\":\"‚äî\",\"sqcups\":\"‚äîÔ∏Ä\",\"Sqrt\":\"‚àö\",\"sqsub\":\"‚äè\",\"sqsube\":\"‚äë\",\"sqsubset\":\"‚äè\",\"sqsubseteq\":\"‚äë\",\"sqsup\":\"‚äê\",\"sqsupe\":\"‚äí\",\"sqsupset\":\"‚äê\",\"sqsupseteq\":\"‚äí\",\"square\":\"‚ñ°\",\"Square\":\"‚ñ°\",\"SquareIntersection\":\"‚äì\",\"SquareSubset\":\"‚äè\",\"SquareSubsetEqual\":\"‚äë\",\"SquareSuperset\":\"‚äê\",\"SquareSupersetEqual\":\"‚äí\",\"SquareUnion\":\"‚äî\",\"squarf\":\"‚ñ™\",\"squ\":\"‚ñ°\",\"squf\":\"‚ñ™\",\"srarr\":\"‚Üí\",\"Sscr\":\"ùíÆ\",\"sscr\":\"ùìà\",\"ssetmn\":\"‚àñ\",\"ssmile\":\"‚å£\",\"sstarf\":\"‚ãÜ\",\"Star\":\"‚ãÜ\",\"star\":\"‚òÜ\",\"starf\":\"‚òÖ\",\"straightepsilon\":\"œµ\",\"straightphi\":\"œï\",\"strns\":\"¬Ø\",\"sub\":\"‚äÇ\",\"Sub\":\"‚ãê\",\"subdot\":\"‚™Ω\",\"subE\":\"‚´Ö\",\"sube\":\"‚äÜ\",\"subedot\":\"‚´É\",\"submult\":\"‚´Å\",\"subnE\":\"‚´ã\",\"subne\":\"‚ää\",\"subplus\":\"‚™ø\",\"subrarr\":\"‚•π\",\"subset\":\"‚äÇ\",\"Subset\":\"‚ãê\",\"subseteq\":\"‚äÜ\",\"subseteqq\":\"‚´Ö\",\"SubsetEqual\":\"‚äÜ\",\"subsetneq\":\"‚ää\",\"subsetneqq\":\"‚´ã\",\"subsim\":\"‚´á\",\"subsub\":\"‚´ï\",\"subsup\":\"‚´ì\",\"succapprox\":\"‚™∏\",\"succ\":\"‚âª\",\"succcurlyeq\":\"‚âΩ\",\"Succeeds\":\"‚âª\",\"SucceedsEqual\":\"‚™∞\",\"SucceedsSlantEqual\":\"‚âΩ\",\"SucceedsTilde\":\"‚âø\",\"succeq\":\"‚™∞\",\"succnapprox\":\"‚™∫\",\"succneqq\":\"‚™∂\",\"succnsim\":\"‚ã©\",\"succsim\":\"‚âø\",\"SuchThat\":\"‚àã\",\"sum\":\"‚àë\",\"Sum\":\"‚àë\",\"sung\":\"‚ô™\",\"sup1\":\"¬π\",\"sup2\":\"¬≤\",\"sup3\":\"¬≥\",\"sup\":\"‚äÉ\",\"Sup\":\"‚ãë\",\"supdot\":\"‚™æ\",\"supdsub\":\"‚´ò\",\"supE\":\"‚´Ü\",\"supe\":\"‚äá\",\"supedot\":\"‚´Ñ\",\"Superset\":\"‚äÉ\",\"SupersetEqual\":\"‚äá\",\"suphsol\":\"‚üâ\",\"suphsub\":\"‚´ó\",\"suplarr\":\"‚•ª\",\"supmult\":\"‚´Ç\",\"supnE\":\"‚´å\",\"supne\":\"‚äã\",\"supplus\":\"‚´Ä\",\"supset\":\"‚äÉ\",\"Supset\":\"‚ãë\",\"supseteq\":\"‚äá\",\"supseteqq\":\"‚´Ü\",\"supsetneq\":\"‚äã\",\"supsetneqq\":\"‚´å\",\"supsim\":\"‚´à\",\"supsub\":\"‚´î\",\"supsup\":\"‚´ñ\",\"swarhk\":\"‚§¶\",\"swarr\":\"‚Üô\",\"swArr\":\"‚áô\",\"swarrow\":\"‚Üô\",\"swnwar\":\"‚§™\",\"szlig\":\"√ü\",\"Tab\":\"\\t\",\"target\":\"‚åñ\",\"Tau\":\"Œ§\",\"tau\":\"œÑ\",\"tbrk\":\"‚é¥\",\"Tcaron\":\"≈§\",\"tcaron\":\"≈•\",\"Tcedil\":\"≈¢\",\"tcedil\":\"≈£\",\"Tcy\":\"–¢\",\"tcy\":\"—Ç\",\"tdot\":\"‚Éõ\",\"telrec\":\"‚åï\",\"Tfr\":\"ùîó\",\"tfr\":\"ùî±\",\"there4\":\"‚à¥\",\"therefore\":\"‚à¥\",\"Therefore\":\"‚à¥\",\"Theta\":\"Œò\",\"theta\":\"Œ∏\",\"thetasym\":\"œë\",\"thetav\":\"œë\",\"thickapprox\":\"‚âà\",\"thicksim\":\"‚àº\",\"ThickSpace\":\"‚Åü‚Ää\",\"ThinSpace\":\"‚Äâ\",\"thinsp\":\"‚Äâ\",\"thkap\":\"‚âà\",\"thksim\":\"‚àº\",\"THORN\":\"√û\",\"thorn\":\"√æ\",\"tilde\":\"Àú\",\"Tilde\":\"‚àº\",\"TildeEqual\":\"‚âÉ\",\"TildeFullEqual\":\"‚âÖ\",\"TildeTilde\":\"‚âà\",\"timesbar\":\"‚®±\",\"timesb\":\"‚ä†\",\"times\":\"√ó\",\"timesd\":\"‚®∞\",\"tint\":\"‚à≠\",\"toea\":\"‚§®\",\"topbot\":\"‚å∂\",\"topcir\":\"‚´±\",\"top\":\"‚ä§\",\"Topf\":\"ùïã\",\"topf\":\"ùï•\",\"topfork\":\"‚´ö\",\"tosa\":\"‚§©\",\"tprime\":\"‚Ä¥\",\"trade\":\"‚Ñ¢\",\"TRADE\":\"‚Ñ¢\",\"triangle\":\"‚ñµ\",\"triangledown\":\"‚ñø\",\"triangleleft\":\"‚óÉ\",\"trianglelefteq\":\"‚ä¥\",\"triangleq\":\"‚âú\",\"triangleright\":\"‚ñπ\",\"trianglerighteq\":\"‚äµ\",\"tridot\":\"‚ó¨\",\"trie\":\"‚âú\",\"triminus\":\"‚®∫\",\"TripleDot\":\"‚Éõ\",\"triplus\":\"‚®π\",\"trisb\":\"‚ßç\",\"tritime\":\"‚®ª\",\"trpezium\":\"‚è¢\",\"Tscr\":\"ùíØ\",\"tscr\":\"ùìâ\",\"TScy\":\"–¶\",\"tscy\":\"—Ü\",\"TSHcy\":\"–ã\",\"tshcy\":\"—õ\",\"Tstrok\":\"≈¶\",\"tstrok\":\"≈ß\",\"twixt\":\"‚â¨\",\"twoheadleftarrow\":\"‚Üû\",\"twoheadrightarrow\":\"‚Ü†\",\"Uacute\":\"√ö\",\"uacute\":\"√∫\",\"uarr\":\"‚Üë\",\"Uarr\":\"‚Üü\",\"uArr\":\"‚áë\",\"Uarrocir\":\"‚•â\",\"Ubrcy\":\"–é\",\"ubrcy\":\"—û\",\"Ubreve\":\"≈¨\",\"ubreve\":\"≈≠\",\"Ucirc\":\"√õ\",\"ucirc\":\"√ª\",\"Ucy\":\"–£\",\"ucy\":\"—É\",\"udarr\":\"‚áÖ\",\"Udblac\":\"≈∞\",\"udblac\":\"≈±\",\"udhar\":\"‚•Æ\",\"ufisht\":\"‚•æ\",\"Ufr\":\"ùîò\",\"ufr\":\"ùî≤\",\"Ugrave\":\"√ô\",\"ugrave\":\"√π\",\"uHar\":\"‚•£\",\"uharl\":\"‚Üø\",\"uharr\":\"‚Üæ\",\"uhblk\":\"‚ñÄ\",\"ulcorn\":\"‚åú\",\"ulcorner\":\"‚åú\",\"ulcrop\":\"‚åè\",\"ultri\":\"‚ó∏\",\"Umacr\":\"≈™\",\"umacr\":\"≈´\",\"uml\":\"¬®\",\"UnderBar\":\"_\",\"UnderBrace\":\"‚èü\",\"UnderBracket\":\"‚éµ\",\"UnderParenthesis\":\"‚èù\",\"Union\":\"‚ãÉ\",\"UnionPlus\":\"‚äé\",\"Uogon\":\"≈≤\",\"uogon\":\"≈≥\",\"Uopf\":\"ùïå\",\"uopf\":\"ùï¶\",\"UpArrowBar\":\"‚§í\",\"uparrow\":\"‚Üë\",\"UpArrow\":\"‚Üë\",\"Uparrow\":\"‚áë\",\"UpArrowDownArrow\":\"‚áÖ\",\"updownarrow\":\"‚Üï\",\"UpDownArrow\":\"‚Üï\",\"Updownarrow\":\"‚áï\",\"UpEquilibrium\":\"‚•Æ\",\"upharpoonleft\":\"‚Üø\",\"upharpoonright\":\"‚Üæ\",\"uplus\":\"‚äé\",\"UpperLeftArrow\":\"‚Üñ\",\"UpperRightArrow\":\"‚Üó\",\"upsi\":\"œÖ\",\"Upsi\":\"œí\",\"upsih\":\"œí\",\"Upsilon\":\"Œ•\",\"upsilon\":\"œÖ\",\"UpTeeArrow\":\"‚Ü•\",\"UpTee\":\"‚ä•\",\"upuparrows\":\"‚áà\",\"urcorn\":\"‚åù\",\"urcorner\":\"‚åù\",\"urcrop\":\"‚åé\",\"Uring\":\"≈Æ\",\"uring\":\"≈Ø\",\"urtri\":\"‚óπ\",\"Uscr\":\"ùí∞\",\"uscr\":\"ùìä\",\"utdot\":\"‚ã∞\",\"Utilde\":\"≈®\",\"utilde\":\"≈©\",\"utri\":\"‚ñµ\",\"utrif\":\"‚ñ¥\",\"uuarr\":\"‚áà\",\"Uuml\":\"√ú\",\"uuml\":\"√º\",\"uwangle\":\"‚¶ß\",\"vangrt\":\"‚¶ú\",\"varepsilon\":\"œµ\",\"varkappa\":\"œ∞\",\"varnothing\":\"‚àÖ\",\"varphi\":\"œï\",\"varpi\":\"œñ\",\"varpropto\":\"‚àù\",\"varr\":\"‚Üï\",\"vArr\":\"‚áï\",\"varrho\":\"œ±\",\"varsigma\":\"œÇ\",\"varsubsetneq\":\"‚ääÔ∏Ä\",\"varsubsetneqq\":\"‚´ãÔ∏Ä\",\"varsupsetneq\":\"‚äãÔ∏Ä\",\"varsupsetneqq\":\"‚´åÔ∏Ä\",\"vartheta\":\"œë\",\"vartriangleleft\":\"‚ä≤\",\"vartriangleright\":\"‚ä≥\",\"vBar\":\"‚´®\",\"Vbar\":\"‚´´\",\"vBarv\":\"‚´©\",\"Vcy\":\"–í\",\"vcy\":\"–≤\",\"vdash\":\"‚ä¢\",\"vDash\":\"‚ä®\",\"Vdash\":\"‚ä©\",\"VDash\":\"‚ä´\",\"Vdashl\":\"‚´¶\",\"veebar\":\"‚äª\",\"vee\":\"‚à®\",\"Vee\":\"‚ãÅ\",\"veeeq\":\"‚âö\",\"vellip\":\"‚ãÆ\",\"verbar\":\"|\",\"Verbar\":\"‚Äñ\",\"vert\":\"|\",\"Vert\":\"‚Äñ\",\"VerticalBar\":\"‚à£\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"‚ùò\",\"VerticalTilde\":\"‚âÄ\",\"VeryThinSpace\":\"‚Ää\",\"Vfr\":\"ùîô\",\"vfr\":\"ùî≥\",\"vltri\":\"‚ä≤\",\"vnsub\":\"‚äÇ‚Éí\",\"vnsup\":\"‚äÉ‚Éí\",\"Vopf\":\"ùïç\",\"vopf\":\"ùïß\",\"vprop\":\"‚àù\",\"vrtri\":\"‚ä≥\",\"Vscr\":\"ùí±\",\"vscr\":\"ùìã\",\"vsubnE\":\"‚´ãÔ∏Ä\",\"vsubne\":\"‚ääÔ∏Ä\",\"vsupnE\":\"‚´åÔ∏Ä\",\"vsupne\":\"‚äãÔ∏Ä\",\"Vvdash\":\"‚ä™\",\"vzigzag\":\"‚¶ö\",\"Wcirc\":\"≈¥\",\"wcirc\":\"≈µ\",\"wedbar\":\"‚©ü\",\"wedge\":\"‚àß\",\"Wedge\":\"‚ãÄ\",\"wedgeq\":\"‚âô\",\"weierp\":\"‚Ñò\",\"Wfr\":\"ùîö\",\"wfr\":\"ùî¥\",\"Wopf\":\"ùïé\",\"wopf\":\"ùï®\",\"wp\":\"‚Ñò\",\"wr\":\"‚âÄ\",\"wreath\":\"‚âÄ\",\"Wscr\":\"ùí≤\",\"wscr\":\"ùìå\",\"xcap\":\"‚ãÇ\",\"xcirc\":\"‚óØ\",\"xcup\":\"‚ãÉ\",\"xdtri\":\"‚ñΩ\",\"Xfr\":\"ùîõ\",\"xfr\":\"ùîµ\",\"xharr\":\"‚ü∑\",\"xhArr\":\"‚ü∫\",\"Xi\":\"Œû\",\"xi\":\"Œæ\",\"xlarr\":\"‚üµ\",\"xlArr\":\"‚ü∏\",\"xmap\":\"‚üº\",\"xnis\":\"‚ãª\",\"xodot\":\"‚®Ä\",\"Xopf\":\"ùïè\",\"xopf\":\"ùï©\",\"xoplus\":\"‚®Å\",\"xotime\":\"‚®Ç\",\"xrarr\":\"‚ü∂\",\"xrArr\":\"‚üπ\",\"Xscr\":\"ùí≥\",\"xscr\":\"ùìç\",\"xsqcup\":\"‚®Ü\",\"xuplus\":\"‚®Ñ\",\"xutri\":\"‚ñ≥\",\"xvee\":\"‚ãÅ\",\"xwedge\":\"‚ãÄ\",\"Yacute\":\"√ù\",\"yacute\":\"√Ω\",\"YAcy\":\"–Ø\",\"yacy\":\"—è\",\"Ycirc\":\"≈∂\",\"ycirc\":\"≈∑\",\"Ycy\":\"–´\",\"ycy\":\"—ã\",\"yen\":\"¬•\",\"Yfr\":\"ùîú\",\"yfr\":\"ùî∂\",\"YIcy\":\"–á\",\"yicy\":\"—ó\",\"Yopf\":\"ùïê\",\"yopf\":\"ùï™\",\"Yscr\":\"ùí¥\",\"yscr\":\"ùìé\",\"YUcy\":\"–Æ\",\"yucy\":\"—é\",\"yuml\":\"√ø\",\"Yuml\":\"≈∏\",\"Zacute\":\"≈π\",\"zacute\":\"≈∫\",\"Zcaron\":\"≈Ω\",\"zcaron\":\"≈æ\",\"Zcy\":\"–ó\",\"zcy\":\"–∑\",\"Zdot\":\"≈ª\",\"zdot\":\"≈º\",\"zeetrf\":\"‚Ñ®\",\"ZeroWidthSpace\":\"‚Äã\",\"Zeta\":\"Œñ\",\"zeta\":\"Œ∂\",\"zfr\":\"ùî∑\",\"Zfr\":\"‚Ñ®\",\"ZHcy\":\"–ñ\",\"zhcy\":\"–∂\",\"zigrarr\":\"‚áù\",\"zopf\":\"ùï´\",\"Zopf\":\"‚Ñ§\",\"Zscr\":\"ùíµ\",\"zscr\":\"ùìè\",\"zwj\":\"‚Äç\",\"zwnj\":\"‚Äå\"}\n", "// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n", "module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/", "\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n", "\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n", "\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n", "'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n", "module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/", "module.exports=/[\\0-\\x1F\\x7F-\\x9F]/", "module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/", "'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n", "// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 '·∫û'.toLowerCase() === '·πæ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('·∫û'.toLowerCase() === '·πæ') {\n    str = str.replace(/·∫û/g, '√ü');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // ƒ∞, œ¥, ·∫û, ‚Ñ¶, ‚Ñ™, ‚Ñ´ - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Œò), U+03f4 (œ¥) and lowercase U+03b8 (Œ∏), U+03d1 (œë)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change œë (it's already lowercase),\n  // and .toUpperCase() doesn't change œ¥ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n", "// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n", "// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n", "// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n", "// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n", "'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n", "'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n", "// Simple typographic replacements\n//\n// (c) (C) ‚Üí ¬©\n// (tm) (TM) ‚Üí ‚Ñ¢\n// (r) (R) ‚Üí ¬Æ\n// +- ‚Üí ¬±\n// (p) (P) -> ¬ß\n// ... ‚Üí ‚Ä¶ (also ?.... ‚Üí ?.., !.... ‚Üí !..)\n// ???????? ‚Üí ???, !!!!! ‚Üí !!!, `,,` ‚Üí `,`\n// -- ‚Üí &ndash;, --- ‚Üí &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ¬Ω, ¬º, ¬æ\n// - multiplications 2 x 4 -> 2 √ó 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '¬©',\n  r: '¬Æ',\n  tm: '‚Ñ¢'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '¬±')\n          // .., ..., ....... -> ‚Ä¶\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '‚Ä¶').replace(/([?!])‚Ä¶/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n", "// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ‚Äô */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n", "// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n", "// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n", "// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n", "// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n", "// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n", "// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n", "// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n", "'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n", "// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n", "// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n", "// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n", "// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n", "// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n", "// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n", "// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n", "// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n", "// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n", "// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n", "// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n", "// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n", "// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n", "// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n", "// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n", "// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n", "// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n", "'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n", "'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|—Ä—Ñ'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|—Ä—Ñ\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '¬´¬ª‚Äû‚Äú' for Russian, '‚Äû‚Äú‚Äö‚Äò' for German,\n    // and ['¬´\\xA0', '\\xA0¬ª', '‚Äπ\\xA0', '\\xA0‚Ä∫'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* ‚Äú‚Äù‚Äò‚Äô */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '¬´¬ª‚Äû‚Äú' for Russian, '‚Äû‚Äú‚Äö‚Äò' for German,\n    // and ['¬´\\xA0', '\\xA0¬ª', '‚Äπ\\xA0', '\\xA0‚Ä∫'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* ‚Äú‚Äù‚Äò‚Äô */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n", "// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '¬´¬ª‚Äû‚Äú' for Russian, '‚Äû‚Äú‚Äö‚Äò' for German,\n    // and ['¬´\\xA0', '\\xA0¬ª', '‚Äπ\\xA0', '\\xA0‚Ä∫'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* ‚Äú‚Äù‚Äò‚Äô */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n", "// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `‚Äú‚Äù‚Äò‚Äô`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'¬´¬ª‚Äû‚Äú'` for Russian, `'‚Äû‚Äú‚Äö‚Äò'` for German, and\n *   `['¬´\\xA0', '\\xA0¬ª', '‚Äπ\\xA0', '\\xA0‚Ä∫']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n", "'use strict';\n\n\nmodule.exports = require('./lib/');\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapArray = exports.default = void 0;\n/** @module */\n/**\n * Wrap value in array if it is not an array.\n *\n * @function wrapArray\n * @param  {*} valOrArr\n * @return {Array}\n */\nconst wrapArray = valOrArr => {\n  if (valOrArr == null || valOrArr === false) return [];\n  if (valOrArr instanceof Array) return valOrArr;\n  return [valOrArr];\n};\nexports.wrapArray = wrapArray;\nvar _default = wrapArray;\nexports.default = _default;", "\"use strict\";\n\n/** @module */\n\n/**\n * Create Marpit plugin.\n *\n * Generate Marpit plugin from passed markdown-it plugin. Marpit plugin needs\n * markdown-it instance with `marpit` member.\n *\n * @example\n * import { marpitPlugin } from '@marp-team/marpit/plugin'\n *\n * export default marpitPlugin((md) => {\n *   // Compatible with markdown-it plugin\n *   md.renderer.rules.your_rule = (tokens, idx, options, env, self) => {\n *     // ...\n *   }\n *\n *   // And accessible to Marpit instance as `md.marpit`\n *   const { marpit } = md\n *\n *   marpit.customDirectives.local.yourDirective = (value) => {\n *     return { yourDirective: value }\n *   }\n * })\n *\n * @function marpitPlugin\n * @param {Function} plugin Base plugin for markdown-it.\n * @returns {Function} Generated Marpit plugin.\n */\nfunction marpitPlugin(plugin) {\n  // eslint-disable-next-line func-names\n  return function (md, ...args) {\n    if (md.marpit) return plugin.call(this, md, ...args);\n    throw new Error('Marpit plugin has detected incompatible markdown-it instance.');\n  };\n}\nObject.defineProperty(marpitPlugin, '__esModule', {\n  value: true\n});\nObject.defineProperty(marpitPlugin, 'default', {\n  value: marpitPlugin\n});\nObject.defineProperty(marpitPlugin, 'marpitPlugin', {\n  value: marpitPlugin\n});\nmodule.exports = marpitPlugin;", "var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n", "'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n", "'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n", "'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n", "'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"source-map-js\" has been externalized for browser compatibility. Cannot access \"source-map-js.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n", "'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n", "/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n", "'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n", "'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n", "'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n", "'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n", "'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n", "'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n", "'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nmodule.exports = Parser\n", "'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n", "'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n", "'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n", "'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.24'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n", "'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n", "'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': ÈáåÈù¢ postcss.plugin Ë¢´ÂºÉÁî®. ËøÅÁßªÊåáÂçó:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * InlineStyle helper class.\n *\n * This is the declarative builder of an inline style using PostCSS. The output\n * string by `toString()` is sanitized unexpected declarations.\n *\n * @module\n * @alias module:helpers/inline_style\n */\nclass InlineStyle {\n  /**\n   * Create an InlineStyle instance.\n   *\n   * @function constructor\n   * @param {Object|String|InlineStyle} [initialDecls] The initial declarations.\n   */\n  constructor(initialDecls) {\n    this.decls = {};\n    if (initialDecls) {\n      if (initialDecls instanceof InlineStyle || typeof initialDecls === 'string') {\n        const root = _postcss.default.parse(initialDecls.toString(), {\n          from: undefined\n        });\n        root.each(node => {\n          if (node.type === 'decl') this.decls[node.prop] = node.value;\n        });\n      } else {\n        this.decls = {\n          ...initialDecls\n        };\n      }\n    }\n  }\n\n  /**\n   * Delete declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n  delete(prop) {\n    delete this.decls[prop];\n    return this;\n  }\n\n  /**\n   * Set declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @param {string} value A value of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n  set(prop, value) {\n    this.decls[prop] = value;\n    return this;\n  }\n\n  /**\n   * Build a string of declarations for the inline style.\n   *\n   * The unexpected declarations will strip to prevent a style injection.\n   */\n  toString() {\n    let built = '';\n    for (const prop of Object.keys(this.decls)) {\n      let parsed;\n      try {\n        parsed = _postcss.default.parse(`${prop}:${this.decls[prop]}`, {\n          from: undefined\n        });\n      } catch (e) {\n        // A declaration that have value it cannot parse will ignore.\n      }\n      if (parsed) {\n        parsed.each(node => {\n          if (node.type !== 'decl' || node.prop !== prop) node.remove();\n        });\n        built += `${parsed.toString()};`;\n      }\n    }\n    return built;\n  }\n}\nexports.default = InlineStyle;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.wrapTokens = wrapTokens;\n/** @module */\n\n/**\n * Wrap array of tokens by specified container object.\n *\n * @param {Token} Token markdown-it's Token class.\n * @param {String} type Token type. It will be suffixed by `_open` / `_close`.\n * @param {Object} container A container object to wrap tokens, includes tag\n *     name and attributes.\n * @param {String} container.tag The name of container element.\n * @param {Object} [container.open] The object assigning to an opening token.\n * @param {Object} [container.close] The object assigning to a closing token.\n * @param {Token[]} [tokens=[]] Wrapping tokens.\n * @returns {Token[]} Wrapped tokens.\n */\nfunction wrapTokens(Token, type, container, tokens = []) {\n  const {\n    tag\n  } = container;\n\n  // Update nesting level of wrapping tokens\n  for (const t of tokens) t.level += 1;\n\n  // Create markdown-it tokens\n  const open = new Token(`${type}_open`, tag, 1);\n  const close = new Token(`${type}_close`, tag, -1);\n  Object.assign(open, {\n    ...(container.open || {})\n  });\n  Object.assign(close, {\n    ...(container.close || {})\n  });\n\n  // Assign attributes\n  for (const attr of Object.keys(container)) {\n    if (!['open', 'close', 'tag'].includes(attr) && container[attr] != null) open.attrSet(attr, container[attr]);\n  }\n  return [open, ...tokens, close];\n}\nvar _default = wrapTokens;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.advancedBackground = void 0;\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\nvar _wrap_tokens = require(\"../../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit advanced background image plugin.\n *\n * Support the advanced features for background image, by using `<figure>`\n * element(s) instead of CSS backgrounds. It works by creating the isolated\n * layer into inline SVG.\n *\n * @function advancedBackground\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _advancedBackground(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_advanced_background', state => {\n    let current;\n    const newTokens = [];\n    for (const t of state.tokens) {\n      if (t.type === 'marpit_inline_svg_content_open' && t.meta && t.meta.marpitBackground) {\n        current = t;\n        const {\n          height,\n          images,\n          open,\n          width\n        } = t.meta.marpitBackground;\n        open.attrSet('data-marpit-advanced-background', 'content');\n\n        // Aligned direction\n        const direction = t.meta.marpitBackground.direction || 'horizontal';\n\n        // Split backgrounds\n        const splitSide = t.meta.marpitBackground.split;\n        if (splitSide) {\n          open.attrSet('data-marpit-advanced-background-split', splitSide);\n          const splitBgSize = t.meta.marpitBackground.splitSize || '50%';\n          t.attrSet('width', `${100 - Number.parseFloat(splitBgSize.slice(0, -1))}%`);\n          if (splitSide === 'left') t.attrSet('x', splitBgSize);\n          const style = new _inline_style.default(open.attrGet('style'));\n          style.set('--marpit-advanced-background-split', splitBgSize);\n          open.attrSet('style', style.toString());\n        }\n\n        // Add the isolated layer for background image\n        newTokens.push(...(0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height\n        }, (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_background_section', {\n          ...open.attrs.reduce((o, [k, v]) => ({\n            ...o,\n            [k]: v\n          }), {}),\n          tag: 'section',\n          id: undefined,\n          'data-marpit-advanced-background': 'background'\n        }, (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_background_image_container', {\n          tag: 'div',\n          'data-marpit-advanced-background-container': true,\n          'data-marpit-advanced-background-direction': direction\n        }, (() => {\n          const imageTokens = [];\n\n          // Add multiple image elements\n          for (const img of images) {\n            const style = new _inline_style.default({\n              'background-image': `url(\"${img.url}\")`\n            });\n\n            // Image sizing\n            if (img.size) style.set('background-size', img.size);\n\n            // Image filter for backgrounds (Only in advanced BG)\n            if (img.filter) style.set('filter', img.filter);\n            imageTokens.push(...(0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_background_image', {\n              tag: 'figure',\n              style: style.toString()\n            }));\n          }\n          return imageTokens;\n        })()))), t);\n      } else if (current && t.type === 'marpit_inline_svg_content_close') {\n        const {\n          open,\n          height,\n          width\n        } = current.meta.marpitBackground;\n\n        // Apply styles\n        const style = new _inline_style.default();\n        if (open.meta && open.meta.marpitDirectives && open.meta.marpitDirectives.color) style.set('color', open.meta.marpitDirectives.color);\n\n        // Add the isolated layer for pseudo contents (e.g. Page number)\n        newTokens.push(t, ...(0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height,\n          'data-marpit-advanced-background': 'pseudo'\n        }, (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_advanced_pseudo_section', {\n          ...open.attrs.reduce((o, [k, v]) => ({\n            ...o,\n            [k]: v\n          }), {}),\n          tag: 'section',\n          id: undefined,\n          style: style.toString(),\n          'data-marpit-advanced-background': 'pseudo'\n        })));\n        current = undefined;\n      } else {\n        newTokens.push(t);\n      }\n    }\n    state.tokens = newTokens;\n  });\n}\nconst advancedBackground = (0, _plugin.default)(_advancedBackground);\nexports.advancedBackground = advancedBackground;\nvar _default = advancedBackground;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.backgroundImageApply = void 0;\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit background image apply plugin.\n *\n * Apply parsed meta for background image / color into directives of each page.\n *\n * When inline SVG is enabled, it will reshape meta for advanced process instead\n * of converting to directives.\n *\n * @function backgroundImageApply\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _backgroundImageApply(md) {\n  md.core.ruler.after('marpit_inline_svg', 'marpit_apply_background_image', ({\n    inlineMode,\n    tokens\n  }) => {\n    if (inlineMode) return;\n    let current = {};\n    for (const tb of tokens) {\n      if (tb.type === 'marpit_slide_open') current.open = tb;\n      if (tb.type === 'marpit_inline_svg_content_open') current.svgContent = tb;\n      if (tb.type === 'marpit_slide_close') {\n        if (current.images && current.images.length > 0) {\n          if (current.svgContent) {\n            // Reshape meta for advanced background\n            current.svgContent.meta = {\n              ...(current.svgContent.meta || {}),\n              marpitBackground: {\n                direction: current.direction,\n                height: current.svgContent.attrGet('height'),\n                images: current.images,\n                open: current.open,\n                split: current.split,\n                splitSize: current.splitSize,\n                width: current.svgContent.attrGet('width')\n              }\n            };\n          } else {\n            // Apply simple CSS background\n            const img = current.images[current.images.length - 1];\n            current.open.meta.marpitDirectives = {\n              ...(current.open.meta.marpitDirectives || {}),\n              backgroundImage: `url(\"${img.url}\")`\n            };\n            if (img.size) current.open.meta.marpitDirectives.backgroundSize = img.size;\n          }\n        }\n        current = {};\n      }\n\n      // Collect parsed inline image meta\n      if (current.open && tb.type === 'inline') for (const t of tb.children) {\n        if (t.type === 'image') {\n          const {\n            background,\n            backgroundDirection,\n            backgroundSize,\n            backgroundSplit,\n            backgroundSplitSize,\n            color,\n            filter,\n            height,\n            size,\n            url,\n            width\n          } = t.meta.marpitImage;\n          if (background && !url.match(/^\\s*$/)) {\n            if (color) {\n              // Background color\n              current.open.meta.marpitDirectives = {\n                ...(current.open.meta.marpitDirectives || {}),\n                backgroundColor: color\n              };\n            } else {\n              // Background image\n              current.images = [...(current.images || []), {\n                filter,\n                height,\n                size: (() => {\n                  const s = size || backgroundSize || undefined;\n                  return !['contain', 'cover'].includes(s) && (width || height) ? `${width || s || 'auto'} ${height || s || 'auto'}` : s;\n                })(),\n                url,\n                width\n              }];\n            }\n          }\n          if (backgroundDirection) current.direction = backgroundDirection;\n          if (backgroundSplit) current.split = backgroundSplit;\n          if (backgroundSplitSize) current.splitSize = backgroundSplitSize;\n        }\n      }\n    }\n  });\n}\nconst backgroundImageApply = (0, _plugin.default)(_backgroundImageApply);\nexports.backgroundImageApply = backgroundImageApply;\nvar _default = backgroundImageApply;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.backgroundImageParse = void 0;\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst bgSizeKeywords = {\n  auto: 'auto',\n  contain: 'contain',\n  cover: 'cover',\n  fit: 'contain'\n};\nconst splitSizeMatcher = /^(left|right)(?::((?:\\d*\\.)?\\d+%))?$/;\n\n/**\n * Marpit background image parse plugin.\n *\n * Parse Marpit's image token and mark as background image when the alternate\n * text includes `bg`. The marked images will not show as the regular image.\n *\n * Furthermore, it parses additional keywords needed for background image.\n *\n * @function backgroundImageParse\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _backgroundImageParse(md) {\n  md.inline.ruler2.after('marpit_parse_image', 'marpit_background_image', ({\n    tokens\n  }) => {\n    for (const t of tokens) {\n      if (t.type === 'image') {\n        const {\n          marpitImage\n        } = t.meta;\n        if (marpitImage.options.some(v => !v.consumed && v.content === 'bg')) {\n          marpitImage.background = true;\n          t.hidden = true;\n          for (const opt of marpitImage.options) {\n            if (opt.consumed) continue;\n            let consumed = false;\n\n            // bg keyword\n            if (opt.content === 'bg') consumed = true;\n\n            // Background size keyword\n            if (bgSizeKeywords[opt.content]) {\n              marpitImage.backgroundSize = bgSizeKeywords[opt.content];\n              consumed = true;\n            }\n\n            // Split background keyword\n            const matched = opt.content.match(splitSizeMatcher);\n            if (matched) {\n              const [, splitSide, splitSize] = matched;\n              marpitImage.backgroundSplit = splitSide;\n              marpitImage.backgroundSplitSize = splitSize;\n              consumed = true;\n            }\n\n            // Background aligned direction\n            if (opt.content === 'vertical' || opt.content === 'horizontal') {\n              marpitImage.backgroundDirection = opt.content;\n              consumed = true;\n            }\n            if (consumed) opt.consumed = true;\n          }\n        }\n      }\n    }\n  });\n}\nconst backgroundImageParse = (0, _plugin.default)(_backgroundImageParse);\nexports.backgroundImageParse = backgroundImageParse;\nvar _default = backgroundImageParse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.backgroundImage = void 0;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nvar _advanced = _interopRequireDefault(require(\"./background_image/advanced\"));\nvar _apply = _interopRequireDefault(require(\"./background_image/apply\"));\nvar _parse = _interopRequireDefault(require(\"./background_image/parse\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit background image plugin.\n *\n * Convert image token to backgrounds when the alternate text includes `bg`.\n *\n * When Marpit inline SVG mode is disabled, the image will convert to\n * `backgroundImage` and `backgroundSize` spot directive. It supports only\n * single background and resizing by using CSS.\n *\n * When inline SVG mode is enabled, the plugin enables advanced background mode.\n * In addition to the basic background implementation, it supports multiple\n * background images, filters, and split background.\n *\n * @function backgroundImage\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _backgroundImage(md) {\n  (0, _parse.default)(md);\n  (0, _apply.default)(md);\n  (0, _advanced.default)(md);\n}\nconst backgroundImage = (0, _plugin.default)(_backgroundImage);\nexports.backgroundImage = backgroundImage;\nvar _default = backgroundImage;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.collect = void 0;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit collect plugin.\n *\n * Collect parsed tokens per slide and comments except marked as used for\n * internally. These will store to lastSlideTokens and lastComments member of\n * Marpit instance. It would use in the returned object from\n * {@link Marpit#render}.\n *\n * @function collect\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _collect(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.push('marpit_collect', state => {\n    if (state.inlineMode) return;\n    marpit.lastComments = [];\n    marpit.lastSlideTokens = [];\n    let currentPage;\n    let pageIdx = -1;\n    const collectComment = token => {\n      if (currentPage >= 0 && !(token.meta && token.meta.marpitCommentParsed !== undefined)) marpit.lastComments[currentPage].push(token.content);\n    };\n    const collectable = () => currentPage >= 0 && marpit.lastSlideTokens[currentPage] !== undefined;\n    for (const token of state.tokens) {\n      if (token.meta && token.meta.marpitSlideElement === 1) {\n        pageIdx += 1;\n        currentPage = pageIdx;\n        if (marpit.lastSlideTokens[currentPage] === undefined) {\n          marpit.lastSlideTokens[currentPage] = [token];\n          marpit.lastComments[currentPage] = [];\n        }\n      } else if (token.meta && token.meta.marpitSlideElement === -1) {\n        if (collectable()) marpit.lastSlideTokens[currentPage].push(token);\n        currentPage = undefined;\n      } else {\n        if (collectable()) marpit.lastSlideTokens[currentPage].push(token);\n        if (token.type === 'marpit_comment') {\n          collectComment(token);\n        } else if (token.type === 'inline') {\n          for (const t of token.children) if (t.type === 'marpit_comment') collectComment(t);\n        }\n      }\n    }\n  });\n}\nconst collect = (0, _plugin.default)(_collect);\nexports.collect = collect;\nvar _default = collect;\nexports.default = _default;", "'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n", "// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n", "'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '‚Üí') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n", "'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n", "'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n", "// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n", "'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n", "'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n", "// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n", "// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n", "'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n", "'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n", "'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n", "// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n", "'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n", "'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn‚Äôt mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ‚áí ns-plain-safe-out\n//                             c = flow-in   ‚áí ns-plain-safe-in\n//                             c = block-key ‚áí ns-plain-safe-out\n//                             c = flow-key  ‚áí ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - ‚Äú:‚Äù - ‚Äú#‚Äù )\n//                            | ( /* An ns-char preceding */ ‚Äú#‚Äù )\n//                            | ( ‚Äú:‚Äù /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( ‚Äú?‚Äù | ‚Äú:‚Äù | ‚Äú-‚Äù ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // ‚Äú-‚Äù | ‚Äú?‚Äù | ‚Äú:‚Äù | ‚Äú,‚Äù | ‚Äú[‚Äù | ‚Äú]‚Äù | ‚Äú{‚Äù | ‚Äú}‚Äù\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | ‚Äú#‚Äù | ‚Äú&‚Äù | ‚Äú*‚Äù | ‚Äú!‚Äù | ‚Äú|‚Äù | ‚Äú=‚Äù | ‚Äú>‚Äù | ‚Äú'‚Äù | ‚Äú\"‚Äù\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | ‚Äú%‚Äù | ‚Äú@‚Äù | ‚Äú`‚Äù)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    ‚Ä¢ No ending newline => unaffected; already using strip \"-\" chomping.\n//    ‚Ä¢ Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ‚â§ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines‚Äî\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | ‚Äú-‚Äù\n      // [39] ns-uri-char     ::=  ‚Äú%‚Äù ns-hex-digit ns-hex-digit | ns-word-char | ‚Äú#‚Äù\n      //                         | ‚Äú;‚Äù | ‚Äú/‚Äù | ‚Äú?‚Äù | ‚Äú:‚Äù | ‚Äú@‚Äù | ‚Äú&‚Äù | ‚Äú=‚Äù | ‚Äú+‚Äù | ‚Äú$‚Äù | ‚Äú,‚Äù\n      //                         | ‚Äú_‚Äù | ‚Äú.‚Äù | ‚Äú!‚Äù | ‚Äú~‚Äù | ‚Äú*‚Äù | ‚Äú'‚Äù | ‚Äú(‚Äù | ‚Äú)‚Äù | ‚Äú[‚Äù | ‚Äú]‚Äù\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n", "'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locals = exports.globals = exports.default = void 0;\n/**\n * The definition of Marpit directives\n * @module\n */\n\n/**\n * @typedef {Function} Directive\n * @param {string} value Parsed value.\n * @param {Marpit} marpit Marpit instance.\n * @returns {Object} Assigning object to token meta.\n */\n\n/**\n * Global directives.\n *\n * Each global directive assigns to the whole slide deck. If you wrote a same\n * directive many times, Marpit only recognizes the last value.\n *\n * @prop {Directive} headingDivider Specify heading divider option.\n * @prop {Directive} style Specify the CSS style to apply additionally.\n * @prop {Directive} theme Specify theme of the slide deck.\n */\nconst globals = Object.assign(Object.create(null), {\n  headingDivider: value => {\n    const headings = [1, 2, 3, 4, 5, 6];\n    const toInt = v => Array.isArray(v) || Number.isNaN(v) ? v : Number.parseInt(v, 10);\n    const converted = toInt(value);\n    if (Array.isArray(converted)) {\n      const convertedArr = converted.map(toInt);\n      return {\n        headingDivider: headings.filter(v => convertedArr.includes(v))\n      };\n    }\n    if (value === 'false') return {\n      headingDivider: false\n    };\n    if (headings.includes(converted)) return {\n      headingDivider: converted\n    };\n    return {};\n  },\n  style: v => ({\n    style: v\n  }),\n  theme: (v, marpit) => marpit.themeSet.has(v) ? {\n    theme: v\n  } : {}\n});\n\n/**\n * Local directives.\n *\n * Mainly these are used to change settings each slide page. By default, a\n * local directive applies to the defined page and followed pages.\n *\n * If you want to set a local directive to single page only, you can add the\n * prefix `_` (underbar) to directive name. (Spot directives)\n *\n * @prop {Directive} backgroundColor Specify background-color style.\n * @prop {Directive} backgroundImage Specify background-image style.\n * @prop {Directive} backgroundPosition Specify background-position style. The\n *     default value while setting backgroundImage is `center`.\n * @prop {Directive} backgroundRepeat Specify background-repeat style. The\n *     default value while setting backgroundImage is `no-repeat`.\n * @prop {Directive} backgroundSize Specify background-size style. The default\n *     value while setting backgroundImage is `cover`.\n * @prop {Directive} class Specify HTML class of section element(s).\n * @prop {Directive} color Specify color style (base text color).\n * @prop {Directive} footer Specify the content of slide footer. It will insert\n *     a `<footer>` element to the last of each slide contents.\n * @prop {Directive} header Specify the content of slide header. It will insert\n *     a `<header>` element to the first of each slide contents.\n * @prop {Directive} paginate Show page number on the slide if you set `true`.\n */\nexports.globals = globals;\nconst locals = Object.assign(Object.create(null), {\n  backgroundColor: v => ({\n    backgroundColor: v\n  }),\n  backgroundImage: v => ({\n    backgroundImage: v\n  }),\n  backgroundPosition: v => ({\n    backgroundPosition: v\n  }),\n  backgroundRepeat: v => ({\n    backgroundRepeat: v\n  }),\n  backgroundSize: v => ({\n    backgroundSize: v\n  }),\n  class: v => ({\n    class: Array.isArray(v) ? v.join(' ') : v\n  }),\n  color: v => ({\n    color: v\n  }),\n  footer: v => typeof v === 'string' ? {\n    footer: v\n  } : {},\n  header: v => typeof v === 'string' ? {\n    header: v\n  } : {},\n  paginate: v => ({\n    paginate: ['hold', 'skip'].includes(v) ? v : (v || '').toLowerCase() === 'true'\n  })\n});\nexports.locals = locals;\nvar _default = [...Object.keys(globals), ...Object.keys(locals)];\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.yaml = exports.default = void 0;\nvar _jsYaml = _interopRequireWildcard(require(\"js-yaml\"));\nvar _directives = _interopRequireDefault(require(\"./directives\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/** @module */\n\nconst createPatterns = keys => {\n  const set = new Set();\n  for (const k of keys) {\n    const normalized = '_?' + k.replace(/[.*+?^=!:${}()|[\\]\\\\/]/g, '\\\\$&');\n    set.add(normalized);\n    set.add(`\"${normalized}\"`);\n    set.add(`'${normalized}'`);\n  }\n  return [...set.values()];\n};\nconst yamlSpecialChars = `[\"'{|>~&*`;\nfunction parse(text) {\n  try {\n    const obj = _jsYaml.default.load(text, {\n      schema: _jsYaml.FAILSAFE_SCHEMA\n    });\n    if (obj === null || typeof obj !== 'object') return false;\n    return obj;\n  } catch (e) {\n    return false;\n  }\n}\nfunction convertLoose(text, looseDirectives) {\n  const keyPattern = `(?:${createPatterns(looseDirectives).join('|')})`;\n  const looseMatcher = new RegExp(`^(${keyPattern}\\\\s*:)(.+)$`);\n  let normalized = '';\n  for (const line of text.split(/\\r?\\n/)) normalized += `${line.replace(looseMatcher, (original, prop, value) => {\n    const trimmed = value.trim();\n    if (trimmed.length === 0 || yamlSpecialChars.includes(trimmed[0])) return original;\n    const spaceLength = value.length - value.trimLeft().length;\n    const spaces = value.substring(0, spaceLength);\n    return `${prop}${spaces}\"${trimmed.split('\"').join('\\\\\"')}\"`;\n  })}\\n`;\n  return normalized.trim();\n}\n\n/**\n * Parse text as YAML by using js-yaml's FAILSAFE_SCHEMA.\n *\n * @function yaml\n * @param {String} text Target text.\n * @param {boolean|string[]} [looseDirectives=false] By setting `true`, it try\n *     to parse as loose YAML only in defined Marpit built-in directives. You\n *     may also extend target keys for loose parsing by passing an array of\n *     strings.\n * @returns {Object|false} Return parse result, or `false` when failed to parse.\n */\n\nconst yaml = (text, looseDirectives = false) => parse(looseDirectives ? convertLoose(text, [..._directives.default, ...(Array.isArray(looseDirectives) ? looseDirectives : [])]) : text);\nexports.yaml = yaml;\nvar _default = yaml;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.comment = void 0;\nexports.markAsParsed = markAsParsed;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nvar _yaml = require(\"./directives/yaml\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst commentMatcher = /<!--+\\s*([\\s\\S]*?)\\s*--+>/;\nconst commentMatcherOpening = /^<!--/;\nconst commentMatcherClosing = /-->/;\nconst magicCommentMatchers = [\n// Prettier\n/^prettier-ignore(-(start|end))?$/,\n// markdownlint\n/^markdownlint-((disable|enable).*|capture|restore)$/,\n// remark-lint (remark-message-control)\n/^lint (disable|enable|ignore).*$/];\nfunction markAsParsed(token, kind) {\n  token.meta = token.meta || {};\n  token.meta.marpitCommentParsed = kind;\n}\n\n/**\n * Marpit comment plugin.\n *\n * Parse HTML comment as token. Comments will strip regardless of html setting\n * provided by markdown-it.\n *\n * @function comment\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _comment(md) {\n  const parse = (token, content) => {\n    const parsed = (0, _yaml.yaml)(content, !!md.marpit.options.looseYAML);\n    token.meta = token.meta || {};\n    token.meta.marpitParsedDirectives = parsed === false ? {} : parsed;\n\n    // Mark well-known magic comments as parsed comment\n    for (const magicCommentMatcher of magicCommentMatchers) {\n      if (magicCommentMatcher.test(content.trim())) {\n        markAsParsed(token, 'well-known-magic-comment');\n        break;\n      }\n    }\n  };\n  md.block.ruler.before('html_block', 'marpit_comment', (state, startLine, endLine, silent) => {\n    // Fast fail\n    let pos = state.bMarks[startLine] + state.tShift[startLine];\n    if (state.src.charCodeAt(pos) !== 0x3c) return false;\n    let max = state.eMarks[startLine];\n    let line = state.src.slice(pos, max);\n\n    // Match to opening element\n    if (!commentMatcherOpening.test(line)) return false;\n    if (silent) return true;\n\n    // Parse ending element\n    let nextLine = startLine + 1;\n    if (!commentMatcherClosing.test(line)) {\n      while (nextLine < endLine) {\n        if (state.sCount[nextLine] < state.blkIndent) break;\n        pos = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n        line = state.src.slice(pos, max);\n        nextLine += 1;\n        if (commentMatcherClosing.test(line)) break;\n      }\n    }\n    state.line = nextLine;\n\n    // Create token\n    const token = state.push('marpit_comment', '', 0);\n    token.map = [startLine, nextLine];\n    token.markup = state.getLines(startLine, nextLine, state.blkIndent, true);\n    token.hidden = true;\n    const matchedContent = commentMatcher.exec(token.markup);\n    token.content = matchedContent ? matchedContent[1].trim() : '';\n    parse(token, token.content);\n    return true;\n  });\n  md.inline.ruler.before('html_inline', 'marpit_inline_comment', (state, silent) => {\n    const {\n      posMax,\n      src\n    } = state;\n\n    // Quick fail by checking `<` and `!`\n    if (state.pos + 2 >= posMax || src.charCodeAt(state.pos) !== 0x3c || src.charCodeAt(state.pos + 1) !== 0x21) return false;\n    const match = src.slice(state.pos).match(commentMatcher);\n    if (!match) return false;\n    if (!silent) {\n      const token = state.push('marpit_comment', '', 0);\n      token.hidden = true;\n      token.markup = src.slice(state.pos, state.pos + match[0].length);\n      token.content = match[1].trim();\n      parse(token, token.content);\n    }\n    state.pos += match[0].length;\n    return true;\n  });\n}\nconst comment = (0, _plugin.default)(_comment);\nexports.comment = comment;\nvar _default = comment;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.container = void 0;\nvar _wrap_array = require(\"../helpers/wrap_array\");\nvar _wrap_tokens = require(\"../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit container plugin.\n *\n * @function container\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _container(md) {\n  const containers = (0, _wrap_array.wrapArray)(md.marpit.options.container);\n  if (!containers) return;\n  const target = [...containers].reverse();\n  md.core.ruler.push('marpit_containers', state => {\n    if (state.inlineMode) return;\n    for (const cont of target) state.tokens = (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_containers', cont, state.tokens);\n  });\n}\nconst container = (0, _plugin.default)(_container);\nexports.container = container;\nvar _default = container;\nexports.default = _default;", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d√©j√† vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.apply = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash.kebabcase\"));\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nvar _directives = _interopRequireDefault(require(\"./directives\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Apply parsed Marpit directives to markdown-it tokens.\n *\n * @function apply\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {boolean} [opts.dataset=true] Assigns directives as HTML data\n *     attributes of each section tag.\n * @param {boolean} [opts.css=true] Assigns directives as CSS Custom Properties\n *     of each section tag.\n */\nfunction _apply(md, opts = {}) {\n  const {\n    marpit\n  } = md;\n  const dataset = opts.dataset === undefined ? true : !!opts.dataset;\n  const css = opts.css === undefined ? true : !!opts.css;\n  const {\n    global,\n    local\n  } = marpit.customDirectives;\n  const directives = [...Object.keys(global), ...Object.keys(local), ..._directives.default];\n  md.core.ruler.after('marpit_directives_parse', 'marpit_directives_apply', state => {\n    if (state.inlineMode) return;\n\n    // compute the total number of skipped pages\n    let totalSkippedSlides = 0;\n    for (const token of state.tokens) {\n      const {\n        marpitDirectives\n      } = token.meta || {};\n      if (marpitDirectives && (marpitDirectives.paginate === 'hold' || marpitDirectives.paginate === 'skip')) {\n        totalSkippedSlides++;\n      }\n    }\n\n    // keep track of slides that were skipped using one of the following\n    // directives:\n    // `paginate: skip`, `_paginate: skip`,\n    // `paginate: hold`, or `_paginate: hold\n    let currentSkippedSlides = 0;\n    for (const token of state.tokens) {\n      const {\n        marpitDirectives,\n        marpitSlide,\n        marpitSlideTotal\n      } = token.meta || {};\n      if (marpitDirectives) {\n        const style = new _inline_style.default(token.attrGet('style'));\n        for (const dir of Object.keys(marpitDirectives)) {\n          if (directives.includes(dir)) {\n            const value = marpitDirectives[dir];\n            if (value) {\n              const kebabCaseDir = (0, _lodash.default)(dir);\n              if (dataset) token.attrSet(`data-${kebabCaseDir}`, value);\n              if (css) style.set(`--${kebabCaseDir}`, value);\n            }\n          }\n        }\n\n        // Apply attribute to token\n        if (marpitDirectives.class) token.attrJoin('class', marpitDirectives.class);\n        if (marpitDirectives.color) style.set('color', marpitDirectives.color);\n        if (marpitDirectives.backgroundColor) style.set('background-color', marpitDirectives.backgroundColor).set('background-image', 'none');\n        if (marpitDirectives.backgroundImage) {\n          style.set('background-image', marpitDirectives.backgroundImage).set('background-position', 'center').set('background-repeat', 'no-repeat').set('background-size', 'cover');\n          if (marpitDirectives.backgroundPosition) style.set('background-position', marpitDirectives.backgroundPosition);\n          if (marpitDirectives.backgroundRepeat) style.set('background-repeat', marpitDirectives.backgroundRepeat);\n          if (marpitDirectives.backgroundSize) style.set('background-size', marpitDirectives.backgroundSize);\n        }\n        if (marpitDirectives.paginate) {\n          if (marpitDirectives.paginate === 'hold' || marpitDirectives.paginate === 'skip') {\n            currentSkippedSlides++;\n          }\n          if (marpitDirectives.paginate !== 'skip') {\n            token.attrSet('data-marpit-pagination', marpitSlide - currentSkippedSlides + 1);\n            token.attrSet('data-marpit-pagination-total', marpitSlideTotal - totalSkippedSlides);\n          }\n        }\n        if (marpitDirectives.header) token.meta.marpitHeader = marpitDirectives.header;\n        if (marpitDirectives.footer) token.meta.marpitFooter = marpitDirectives.footer;\n        const styleStr = style.toString();\n        if (styleStr !== '') token.attrSet('style', styleStr);\n      }\n    }\n  });\n}\nconst apply = (0, _plugin.default)(_apply);\nexports.apply = apply;\nvar _default = apply;\nexports.default = _default;", "// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, pos ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = exports.default = void 0;\nvar _markdownItFrontMatter = _interopRequireDefault(require(\"markdown-it-front-matter\"));\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nvar _comment = require(\"../comment\");\nvar directives = _interopRequireWildcard(require(\"./directives\"));\nvar _yaml = require(\"./yaml\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst isDirectiveComment = token => token.type === 'marpit_comment' && token.meta.marpitParsedDirectives;\n\n/**\n * Parse Marpit directives and store result to the slide token meta.\n *\n * Marpit comment plugin ans slide plugin requires already loaded to\n * markdown-it instance.\n *\n * @function parse\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {boolean} [opts.frontMatter=true] Switch feature to support YAML\n *     front-matter. If true, you can use Jekyll style directive setting to the\n *     first page.\n */\nfunction _parse(md, opts = {}) {\n  const {\n    marpit\n  } = md;\n  const applyBuiltinDirectives = (newProps, builtinDirectives) => {\n    let ret = {};\n    for (const prop of Object.keys(newProps)) {\n      if (builtinDirectives[prop]) {\n        ret = {\n          ...ret,\n          ...builtinDirectives[prop](newProps[prop], marpit)\n        };\n      } else {\n        ret[prop] = newProps[prop];\n      }\n    }\n    return ret;\n  };\n\n  // Front-matter support\n  const frontMatter = opts.frontMatter === undefined ? true : !!opts.frontMatter;\n  let frontMatterObject = {};\n  if (frontMatter) {\n    md.core.ruler.before('block', 'marpit_directives_front_matter', state => {\n      frontMatterObject = {};\n      if (!state.inlineMode) marpit.lastGlobalDirectives = {};\n    });\n    md.use(_markdownItFrontMatter.default, fm => {\n      frontMatterObject.text = fm;\n      const parsed = (0, _yaml.yaml)(fm, marpit.options.looseYAML ? [...Object.keys(marpit.customDirectives.global), ...Object.keys(marpit.customDirectives.local)] : false);\n      if (parsed !== false) frontMatterObject.yaml = parsed;\n    });\n  }\n\n  // Parse global directives\n  md.core.ruler.after('inline', 'marpit_directives_global_parse', state => {\n    if (state.inlineMode) return;\n    let globalDirectives = {};\n    const applyDirectives = obj => {\n      let recognized = false;\n      for (const key of Object.keys(obj)) {\n        if (directives.globals[key]) {\n          recognized = true;\n          globalDirectives = {\n            ...globalDirectives,\n            ...directives.globals[key](obj[key], marpit)\n          };\n        } else if (marpit.customDirectives.global[key]) {\n          recognized = true;\n          globalDirectives = {\n            ...globalDirectives,\n            ...applyBuiltinDirectives(marpit.customDirectives.global[key](obj[key], marpit), directives.globals)\n          };\n        }\n      }\n      return recognized;\n    };\n    if (frontMatterObject.yaml) applyDirectives(frontMatterObject.yaml);\n    for (const token of state.tokens) {\n      if (isDirectiveComment(token) && applyDirectives(token.meta.marpitParsedDirectives)) {\n        (0, _comment.markAsParsed)(token, 'directive');\n      } else if (token.type === 'inline') {\n        for (const t of token.children) {\n          if (isDirectiveComment(t) && applyDirectives(t.meta.marpitParsedDirectives)) (0, _comment.markAsParsed)(t, 'directive');\n        }\n      }\n    }\n    marpit.lastGlobalDirectives = {\n      ...globalDirectives\n    };\n  });\n\n  // Parse local directives and apply meta to slide\n  md.core.ruler.after('marpit_slide', 'marpit_directives_parse', state => {\n    if (state.inlineMode) return;\n    const slides = [];\n    const cursor = {\n      slide: undefined,\n      local: {},\n      spot: {}\n    };\n    const applyDirectives = obj => {\n      let recognized = false;\n      for (const key of Object.keys(obj)) {\n        if (directives.locals[key]) {\n          recognized = true;\n          cursor.local = {\n            ...cursor.local,\n            ...directives.locals[key](obj[key], marpit)\n          };\n        } else if (marpit.customDirectives.local[key]) {\n          recognized = true;\n          cursor.local = {\n            ...cursor.local,\n            ...applyBuiltinDirectives(marpit.customDirectives.local[key](obj[key], marpit), directives.locals)\n          };\n        }\n\n        // Spot directives\n        // (Apply local directive to only current slide by prefix \"_\")\n        if (key.startsWith('_')) {\n          const spotKey = key.slice(1);\n          if (directives.locals[spotKey]) {\n            recognized = true;\n            cursor.spot = {\n              ...cursor.spot,\n              ...directives.locals[spotKey](obj[key], marpit)\n            };\n          } else if (marpit.customDirectives.local[spotKey]) {\n            recognized = true;\n            cursor.spot = {\n              ...cursor.spot,\n              ...applyBuiltinDirectives(marpit.customDirectives.local[spotKey](obj[key], marpit), directives.locals)\n            };\n          }\n        }\n      }\n      return recognized;\n    };\n    if (frontMatterObject.yaml) applyDirectives(frontMatterObject.yaml);\n    for (const token of state.tokens) {\n      if (token.meta && token.meta.marpitSlideElement === 1) {\n        // Initialize Marpit directives meta\n        token.meta.marpitDirectives = {};\n        slides.push(token);\n        cursor.slide = token;\n      } else if (token.meta && token.meta.marpitSlideElement === -1) {\n        // Assign local and spot directives to meta\n        cursor.slide.meta.marpitDirectives = {\n          ...cursor.slide.meta.marpitDirectives,\n          ...cursor.local,\n          ...cursor.spot\n        };\n        cursor.spot = {};\n      } else if (isDirectiveComment(token) && applyDirectives(token.meta.marpitParsedDirectives)) {\n        (0, _comment.markAsParsed)(token, 'directive');\n      } else if (token.type === 'inline') {\n        for (const t of token.children) {\n          if (isDirectiveComment(t) && applyDirectives(t.meta.marpitParsedDirectives)) (0, _comment.markAsParsed)(t, 'directive');\n        }\n      }\n    }\n\n    // Assign global directives to meta\n    for (const token of slides) token.meta.marpitDirectives = {\n      ...token.meta.marpitDirectives,\n      ...marpit.lastGlobalDirectives\n    };\n  });\n}\nconst parse = (0, _plugin.default)(_parse);\nexports.parse = parse;\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fragment = exports.default = void 0;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst fragmentedListMarkups = ['*', ')'];\n\n/**\n * Marpit fragment plugin.\n *\n * @function fragment\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _fragment(md) {\n  // Fragmented list\n  md.core.ruler.after('marpit_directives_parse', 'marpit_fragment', state => {\n    if (state.inlineMode) return;\n    for (const token of state.tokens) {\n      if (token.type === 'list_item_open' && fragmentedListMarkups.includes(token.markup)) {\n        token.meta = token.meta || {};\n        token.meta.marpitFragment = true;\n      }\n    }\n  });\n\n  // Add data-marpit-fragment(s) attributes to token\n  md.core.ruler.after('marpit_fragment', 'marpit_apply_fragment', state => {\n    if (state.inlineMode) return;\n    const fragments = {\n      slide: undefined,\n      count: 0\n    };\n    for (const token of state.tokens) {\n      if (token.meta && token.meta.marpitSlideElement === 1) {\n        fragments.slide = token;\n        fragments.count = 0;\n      } else if (token.meta && token.meta.marpitSlideElement === -1) {\n        if (fragments.slide && fragments.count > 0) {\n          fragments.slide.attrSet('data-marpit-fragments', fragments.count);\n        }\n      } else if (token.meta && token.meta.marpitFragment) {\n        fragments.count += 1;\n        token.meta.marpitFragment = fragments.count;\n        token.attrSet('data-marpit-fragment', fragments.count);\n      }\n    }\n  });\n}\nconst fragment = (0, _plugin.default)(_fragment);\nexports.fragment = fragment;\nvar _default = fragment;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.headerAndFooter = exports.default = void 0;\nvar _wrap_tokens = require(\"../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit header and footer plugin.\n *\n * At each slide, add header and footer that are provided by directives.\n *\n * @function headerAndFooter\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _headerAndFooter(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_header_and_footer', state => {\n    if (state.inlineMode) return;\n    const parsedInlines = new Map();\n    const getParsed = markdown => {\n      let parsed = parsedInlines.get(markdown);\n      if (!parsed) {\n        parsed = md.parseInline(markdown, state.env);\n        delete parsed.map;\n        parsedInlines.set(markdown, parsed);\n      }\n      return parsed;\n    };\n    const createMarginalTokens = (tag, markdown) => (0, _wrap_tokens.wrapTokens)(state.Token, `marpit_${tag}`, {\n      tag,\n      close: {\n        block: true\n      }\n    }, getParsed(markdown));\n    let current;\n    const newTokens = [];\n    for (const token of state.tokens) {\n      if (token.type === 'marpit_slide_open') {\n        current = token;\n        newTokens.push(token);\n        if (current.meta && current.meta.marpitHeader) newTokens.push(...createMarginalTokens('header', current.meta.marpitHeader));\n      } else if (token.type === 'marpit_slide_close') {\n        if (current.meta && current.meta.marpitFooter) newTokens.push(...createMarginalTokens('footer', current.meta.marpitFooter));\n        newTokens.push(token);\n      } else {\n        newTokens.push(token);\n      }\n    }\n    state.tokens = newTokens;\n  });\n}\nconst headerAndFooter = (0, _plugin.default)(_headerAndFooter);\nexports.headerAndFooter = headerAndFooter;\nvar _default = headerAndFooter;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.split = split;\n/** @module */\n/**\n * Split array into multiple arrays by specified condition.\n *\n * @param {Array} arr Target array.\n * @param {splitCallback} func Callback to split array.\n * @param {boolean} [keepSplitedValue=false] Keep splited value. The split\n *     point is before the matched value.\n * @returns {Array[]} Splited array.\n */\nfunction split(arr, func, keepSplitedValue = false) {\n  const ret = [[]];\n  for (const value of arr) {\n    /**\n     * Return true at the split point.\n     *\n     * @callback splitCallback\n     * @param {*} value\n     */\n    if (func(value)) {\n      ret.push(keepSplitedValue ? [value] : []);\n    } else {\n      ret[ret.length - 1].push(value);\n    }\n  }\n  return ret;\n}\nvar _default = split;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.headingDivider = exports.default = void 0;\nvar _split = require(\"../helpers/split\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit heading divider plugin.\n *\n * Start a new slide page at before of headings by prepending hidden `<hr>`\n * elements.\n *\n * @function headingDivider\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _headingDivider(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.before('marpit_slide', 'marpit_heading_divider', state => {\n    let target = marpit.options.headingDivider;\n    if (marpit.lastGlobalDirectives && Object.prototype.hasOwnProperty.call(marpit.lastGlobalDirectives, 'headingDivider')) target = marpit.lastGlobalDirectives.headingDivider;\n    if (state.inlineMode || target === false) return;\n    if (Number.isInteger(target) && target >= 1 && target <= 6) target = [...Array(target).keys()].map(i => i + 1);\n    if (!Array.isArray(target)) return;\n    const splitTag = target.map(i => `h${i}`);\n    const splitFunc = t => t.type === 'heading_open' && splitTag.includes(t.tag);\n    const newTokens = [];\n    for (const slideTokens of (0, _split.split)(state.tokens, splitFunc, true)) {\n      const [token] = slideTokens;\n      if (token && splitFunc(token) && newTokens.some(t => !t.hidden)) {\n        const hr = new state.Token('hr', '', 0);\n        hr.hidden = true;\n        hr.map = token.map;\n        newTokens.push(hr);\n      }\n      newTokens.push(...slideTokens);\n    }\n    state.tokens = newTokens;\n  });\n}\nconst headingDivider = (0, _plugin.default)(_headingDivider);\nexports.headingDivider = headingDivider;\nvar _default = headingDivider;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.applyImage = void 0;\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit image apply plugin.\n *\n * Apply image style and color spot directive based on parsed meta.\n *\n * @function applyImage\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _applyImage(md) {\n  // Build and apply image style\n  md.inline.ruler2.push('marpit_apply_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        const {\n          filters,\n          height,\n          width\n        } = token.meta.marpitImage;\n        const style = new _inline_style.default(token.attrGet('style'));\n        if (width && !width.endsWith('%')) style.set('width', width);\n        if (height && !height.endsWith('%')) style.set('height', height);\n        if (filters) {\n          const filterStyle = [];\n          for (const fltrs of filters) filterStyle.push(`${fltrs[0]}(${fltrs[1]})`);\n          token.meta.marpitImage.filter = filterStyle.join(' ');\n          style.set('filter', token.meta.marpitImage.filter);\n        }\n        const stringified = style.toString();\n        if (stringified) token.attrSet('style', stringified);\n      }\n    }\n  });\n\n  // [DEPRECATED] Shorthand for color spot directive\n  md.core.ruler.after('marpit_inline_svg', 'marpit_apply_color', ({\n    inlineMode,\n    tokens\n  }) => {\n    if (inlineMode) return;\n    let current;\n    for (const t of tokens) {\n      if (t.type === 'marpit_slide_open') current = t;\n      if (t.type === 'marpit_slide_close') current = undefined;\n\n      // Collect parsed inline image meta\n      if (current && t.type === 'inline') {\n        for (const tc of t.children) {\n          if (tc.type === 'image') {\n            const {\n              background,\n              color\n            } = tc.meta.marpitImage;\n            if (!background && color) {\n              current.meta.marpitDirectives = {\n                ...(current.meta.marpitDirectives || {}),\n                color\n              };\n            }\n          }\n        }\n      }\n    }\n  });\n}\nconst applyImage = (0, _plugin.default)(_applyImage);\nexports.applyImage = applyImage;\nvar _default = applyImage;\nexports.default = _default;", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n", "'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n", "/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseImage = exports.default = void 0;\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst escape = target => target.replace(/[\\\\;:()]/g, matched => `\\\\${matched[0].codePointAt(0).toString(16)} `);\nconst optionMatchers = new Map();\n\n// The scale percentage for resize background\noptionMatchers.set(/^(\\d*\\.)?\\d+%$/, matches => ({\n  size: matches[0]\n}));\n\n// width and height\nconst normalizeLength = v => `${v}${/^(\\d*\\.)?\\d+$/.test(v) ? 'px' : ''}`;\noptionMatchers.set(/^w(?:idth)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  width: normalizeLength(matches[1])\n}));\noptionMatchers.set(/^h(?:eight)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  height: normalizeLength(matches[1])\n}));\n\n// CSS filters\noptionMatchers.set(/^blur(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['blur', escape(matches[1] || '10px')]]\n}));\noptionMatchers.set(/^brightness(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['brightness', escape(matches[1] || '1.5')]]\n}));\noptionMatchers.set(/^contrast(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['contrast', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^drop-shadow(?::(.+?),(.+?)(?:,(.+?))?(?:,(.+?))?)?$/, (matches, meta) => {\n  const args = [];\n  for (const arg of matches.slice(1)) {\n    if (arg) {\n      const colorFunc = arg.match(/^(rgba?|hsla?|hwb|(?:ok)?(?:lab|lch)|color)\\((.*)\\)$/);\n      args.push(colorFunc ? `${colorFunc[1]}(${escape(colorFunc[2])})` : escape(arg));\n    }\n  }\n  return {\n    filters: [...meta.filters, ['drop-shadow', args.join(' ') || '0 5px 10px rgba(0,0,0,.4)']]\n  };\n});\noptionMatchers.set(/^grayscale(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['grayscale', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^hue-rotate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['hue-rotate', escape(matches[1] || '180deg')]]\n}));\noptionMatchers.set(/^invert(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['invert', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^opacity(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['opacity', escape(matches[1] || '.5')]]\n}));\noptionMatchers.set(/^saturate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['saturate', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^sepia(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['sepia', escape(matches[1] || '1')]]\n}));\n\n/**\n * Marpit image parse plugin.\n *\n * Parse image tokens and store the result into `marpitImage` meta. It has an\n * image url and options. The alternative text is regarded as space-separated\n * options.\n *\n * @function parseImage\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _parseImage(md) {\n  const {\n    process\n  } = md.core;\n\n  // Store original URL, for the color shorthand.\n  // (Avoid a side effect from link normalization)\n  let originalURLMap;\n  let refCount = 0;\n  const finalizeTokenAttr = (token, state) => {\n    // Convert imprimitive attribute value into primitive string\n    if (token.attrs && Array.isArray(token.attrs)) {\n      token.attrs = token.attrs.map(([name, value]) => [name, value.toString()]);\n    }\n\n    // Apply finalization recursively to inline tokens\n    if (token.type === 'inline') {\n      for (const t of token.children) finalizeTokenAttr(t, state);\n    }\n\n    // Re-generate the alt text of image token to remove Marpit specific options\n    if (token.type === 'image' && token.meta && token.meta.marpitImage) {\n      let updatedAlt = '';\n      let hasConsumed = false;\n      for (const opt of token.meta.marpitImage.options) {\n        if (opt.consumed) {\n          hasConsumed = true;\n        } else {\n          updatedAlt += opt.leading + opt.content;\n        }\n      }\n      if (hasConsumed) {\n        let newTokens = [];\n        md.inline.parse(updatedAlt.trimLeft(), state.md, state.env, newTokens);\n        token.children = newTokens;\n      }\n    }\n  };\n  md.core.process = state => {\n    const {\n      normalizeLink\n    } = md;\n\n    // Prevent reset of WeakMap caused by calling core process internally\n    if (refCount === 0) originalURLMap = new WeakMap();\n    try {\n      md.normalizeLink = url => {\n        const imprimitiveUrl = new String(normalizeLink.call(md, url));\n        originalURLMap.set(imprimitiveUrl, url);\n        return imprimitiveUrl;\n      };\n      refCount += 1;\n      return process.call(md.core, state);\n    } finally {\n      refCount -= 1;\n      md.normalizeLink = normalizeLink;\n      if (refCount === 0) {\n        // Apply finalization for every tokens\n        for (const token of state.tokens) finalizeTokenAttr(token, state);\n      }\n    }\n  };\n  md.inline.ruler2.push('marpit_parse_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        // Parse alt text as options\n        const optsBase = token.content.split(/(\\s+)/);\n        let currentIdx = 0;\n        let leading = '';\n        const options = optsBase.reduce((acc, opt, i) => {\n          if (i % 2 === 0 && opt.length > 0) {\n            currentIdx += leading.length;\n            acc.push({\n              content: opt,\n              index: currentIdx,\n              leading,\n              consumed: false\n            });\n            leading = '';\n            currentIdx += opt.length;\n          } else {\n            leading += opt;\n          }\n          return acc;\n        }, []);\n        const url = token.attrGet('src');\n        const originalUrl = originalURLMap.has(url) ? originalURLMap.get(url) : url;\n        token.meta = token.meta || {};\n        token.meta.marpitImage = {\n          ...(token.meta.marpitImage || {}),\n          url: url.toString(),\n          options\n        };\n\n        // [DEPRECATED]\n        // Detect shorthand for setting color (Use value before normalization)\n        if (!!_colorString.default.get(originalUrl) || originalUrl.toLowerCase() === 'currentcolor') {\n          const replacedDirective = options.some(opt => opt.content === 'bg') ? 'backgroundColor' : 'color';\n          console.warn(`Deprecation warning: Shorthand for setting colors via Markdown image syntax is deprecated now, and will remove in next major release. Please replace to a scoped local direcitve <!-- _${replacedDirective}: \"${originalUrl}\" -->, or use the scoped style <style scoped>.`);\n          token.meta.marpitImage.color = originalUrl;\n          token.hidden = true;\n        }\n\n        // Parse keyword through matchers\n        for (const opt of options) {\n          for (const [regexp, mergeFunc] of optionMatchers) {\n            if (opt.consumed) continue;\n            const matched = opt.content.match(regexp);\n            if (matched) {\n              opt.consumed = true;\n              token.meta.marpitImage = {\n                ...token.meta.marpitImage,\n                ...mergeFunc(matched, {\n                  filters: [],\n                  ...token.meta.marpitImage\n                })\n              };\n            }\n          }\n        }\n      }\n    }\n  });\n}\nconst parseImage = (0, _plugin.default)(_parseImage);\nexports.parseImage = parseImage;\nvar _default = parseImage;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.image = exports.default = void 0;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nvar _apply = _interopRequireDefault(require(\"./image/apply\"));\nvar _parse = _interopRequireDefault(require(\"./image/parse\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit image plugin.\n *\n * @function image\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _image(md) {\n  (0, _parse.default)(md);\n  (0, _apply.default)(md);\n}\nconst image = (0, _plugin.default)(_image);\nexports.image = image;\nvar _default = image;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inlineSVG = exports.default = void 0;\nvar _split = require(\"../helpers/split\");\nvar _wrap_tokens = require(\"../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit Inline SVG plugin.\n *\n * @function inlineSVG\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _inlineSVG(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.after('marpit_directives_parse', 'marpit_inline_svg', state => {\n    if (!(marpit.inlineSVGOptions && marpit.inlineSVGOptions.enabled) || state.inlineMode) return;\n    const {\n      themeSet,\n      lastGlobalDirectives\n    } = marpit;\n    const w = themeSet.getThemeProp(lastGlobalDirectives.theme, 'widthPixel');\n    const h = themeSet.getThemeProp(lastGlobalDirectives.theme, 'heightPixel');\n    const newTokens = [];\n    for (const tokens of (0, _split.split)(state.tokens, t => t.meta && t.meta.marpitSlideElement === 1, true)) {\n      if (tokens.length > 0) {\n        for (const t of tokens) if (t.meta && t.meta.marpitSlideElement) delete t.meta.marpitSlideElement;\n        newTokens.push(...(0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_inline_svg', {\n          tag: 'svg',\n          'data-marpit-svg': '',\n          viewBox: `0 0 ${w} ${h}`,\n          open: {\n            meta: {\n              marpitSlideElement: 1\n            }\n          },\n          close: {\n            meta: {\n              marpitSlideElement: -1\n            }\n          }\n        }, (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_inline_svg_content', {\n          tag: 'foreignObject',\n          width: w,\n          height: h\n        }, tokens)));\n      }\n    }\n    state.tokens = newTokens;\n  });\n}\nconst inlineSVG = (0, _plugin.default)(_inlineSVG);\nexports.inlineSVG = inlineSVG;\nvar _default = inlineSVG;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.slide = exports.defaultAnchorCallback = exports.default = void 0;\nvar _split = require(\"../helpers/split\");\nvar _wrap_tokens = require(\"../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst defaultAnchorCallback = i => `${i + 1}`;\n\n/**\n * Marpit slide plugin.\n *\n * Split markdown-it tokens into the slides by horizontal rule. Each slides\n * will be wrapped by section element.\n *\n * @function slide\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {Object} [opts.attributes] The `<section>` element attributes by\n *     key-value pairs.\n * @param {(boolean|Marpit~AnchorCallback)} [opts.anchor=true] If true, assign\n *     the anchor with the page number starting from 1. You can customize anchor\n *     name by passing callback function.\n */\nexports.defaultAnchorCallback = defaultAnchorCallback;\nfunction _slide(md, opts = {}) {\n  const anchor = opts.anchor === undefined ? true : opts.anchor;\n  const anchorCallback = (() => {\n    if (typeof anchor === 'function') return anchor;\n    if (anchor) return defaultAnchorCallback;\n    return () => undefined;\n  })();\n  md.core.ruler.push('marpit_slide', state => {\n    if (state.inlineMode) return;\n    const splittedTokens = (0, _split.split)(state.tokens, t => t.type === 'hr' && t.level === 0, true);\n    const {\n      length: marpitSlideTotal\n    } = splittedTokens;\n    state.tokens = splittedTokens.reduce((arr, slideTokens, marpitSlide) => {\n      const firstHr = slideTokens[0] && slideTokens[0].type === 'hr' ? slideTokens[0] : undefined;\n      const mapTarget = firstHr || slideTokens.find(t => t.map);\n      return [...arr, ...(0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_slide', {\n        ...(opts.attributes || {}),\n        tag: 'section',\n        id: anchorCallback(marpitSlide),\n        open: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: 1\n          },\n          map: mapTarget ? mapTarget.map : [0, 1]\n        },\n        close: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: -1\n          }\n        }\n      }, slideTokens.slice(firstHr ? 1 : 0))];\n    }, []);\n  });\n}\nconst slide = (0, _plugin.default)(_slide);\nexports.slide = slide;\nvar _default = slide;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.slideContainer = exports.default = void 0;\nvar _split = require(\"../helpers/split\");\nvar _wrap_array = require(\"../helpers/wrap_array\");\nvar _wrap_tokens = require(\"../helpers/wrap_tokens\");\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit slide container plugin.\n *\n * @function slideContainer\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _slideContainer(md) {\n  const containers = (0, _wrap_array.wrapArray)(md.marpit.options.slideContainer);\n  if (!containers) return;\n  const target = [...containers].reverse();\n  md.core.ruler.push('marpit_slide_containers', state => {\n    if (state.inlineMode) return;\n    const newTokens = [];\n    for (const tokens of (0, _split.split)(state.tokens, t => t.meta && t.meta.marpitSlideElement === 1, true)) {\n      if (tokens.length > 0) newTokens.push(...target.reduce((slides, conts) => (0, _wrap_tokens.wrapTokens)(state.Token, 'marpit_slide_containers', conts, slides), tokens));\n    }\n    state.tokens = newTokens;\n  });\n}\nconst slideContainer = (0, _plugin.default)(_slideContainer);\nexports.slideContainer = slideContainer;\nvar _default = slideContainer;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.plugin = plugin;\n/** @module */\n\n/**\n * Generate PostCSS plugin.\n *\n * This is a glue code generator to migrate existed plugins to support\n * PostCSS 8.\n *\n * @param {string} name Plugin name.\n * @param {(Function|Object)} func Function with PostCSS plugin interface.\n * @returns {Function} A PostCSS plugin.\n */\nfunction plugin(name, func) {\n  return Object.defineProperty(function intrface(...args) {\n    const retFunc = func.apply(this, args);\n    return Object.defineProperty(typeof retFunc === 'function' ? {\n      Once: retFunc\n    } : retFunc, 'postcssPlugin', {\n      value: name\n    });\n  }, 'postcss', {\n    value: true\n  });\n}\nvar _default = plugin;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.assign = void 0;\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst uniqKeyChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\nconst uniqKeyCharsLength = uniqKeyChars.length;\nconst generateScopeAttr = uniqKey => `data-marpit-scope-${uniqKey}`;\nconst generateUniqKey = (length = 8) => {\n  let ret = '';\n  for (let i = 0; i < length; i += 1) ret += uniqKeyChars[Math.floor(Math.random() * uniqKeyCharsLength)];\n  return ret;\n};\nconst injectScopePostCSSplugin = (0, _postcss_plugin.default)('marpit-style-assign-postcss-inject-scope', (key, keyframeSet) => css => css.each(function inject(node) {\n  const {\n    type,\n    name\n  } = node;\n  if (type === 'atrule') {\n    if (name === 'keyframes' && node.params) {\n      keyframeSet.add(node.params);\n      node.params += `-${key}`;\n    } else if (name === 'media' || name === 'supports') {\n      node.each(inject);\n    }\n  } else if (type === 'rule') {\n    node.selectors = node.selectors.map(selector => {\n      const injectSelector = /^section(?![\\w-])/.test(selector) ? selector.slice(7) : ` ${selector}`;\n      return `section[${generateScopeAttr(key)}]${injectSelector}`;\n    });\n  }\n}));\nconst scopeKeyframesPostCSSPlugin = (0, _postcss_plugin.default)('marpit-style-assign-postcss-scope-keyframes', (key, keyframeSet) => css => {\n  if (keyframeSet.size === 0) return;\n  const keyframeMatcher = new RegExp(`\\\\b(${[...keyframeSet.values()].map(kf => kf.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&')).join('|')})(?!\\\\()\\\\b`);\n  css.walkDecls(/^animation(-name)?$/, decl => {\n    decl.value = decl.value.replace(keyframeMatcher, kf => `${kf}-${key}`);\n  });\n});\n\n/**\n * Marpit style assign plugin.\n *\n * Assign style global directive and parsed styles to Marpit instance's\n * `lastStyles' property.\n *\n * @function assign\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _assign(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.after('marpit_slide', 'marpit_style_assign', state => {\n    if (state.inlineMode) return;\n    const directives = marpit.lastGlobalDirectives || {};\n    marpit.lastStyles = directives.style ? [directives.style] : [];\n    let current;\n    for (const token of state.tokens) {\n      if (token.meta && token.meta.marpitSlideElement === 1) {\n        current = token;\n      } else if (token.meta && token.meta.marpitSlideElement === -1) {\n        if (current.meta && current.meta.marpitStyleScoped) {\n          const {\n            key,\n            keyframeSet,\n            styles\n          } = current.meta.marpitStyleScoped;\n\n          // Rewrite keyframes name in animation decls\n          const processor = (0, _postcss.default)([scopeKeyframesPostCSSPlugin(key, keyframeSet)]);\n          current.meta.marpitStyleScoped.styles = styles.map(style => {\n            try {\n              return processor.process(style).css;\n            } catch (e) {\n              return style;\n            }\n          });\n\n          // Assign scoped styles\n          marpit.lastStyles.push(...current.meta.marpitStyleScoped.styles);\n        }\n        current = undefined;\n      } else if (token.type === 'marpit_style') {\n        const {\n          content\n        } = token;\n\n        // Scoped style\n        const {\n          marpitStyleScoped\n        } = token.meta || {};\n        if (current && marpitStyleScoped) {\n          current.meta = current.meta || {};\n          current.meta.marpitStyleScoped = current.meta.marpitStyleScoped || {};\n          let {\n            key\n          } = current.meta.marpitStyleScoped;\n          if (!key) {\n            key = generateUniqKey();\n            current.meta.marpitStyleScoped.key = key;\n            current.attrSet(generateScopeAttr(key), '');\n          }\n          current.meta.marpitStyleScoped.styles = current.meta.marpitStyleScoped.styles || [];\n          current.meta.marpitStyleScoped.keyframeSet = current.meta.marpitStyleScoped.keyframeSet || new Set();\n          const processor = (0, _postcss.default)([injectScopePostCSSplugin(key, current.meta.marpitStyleScoped.keyframeSet)]);\n          try {\n            current.meta.marpitStyleScoped.styles.push(processor.process(content).css);\n          } catch (e) {\n            // No ops\n          }\n        } else if (content) {\n          // Global style\n          marpit.lastStyles.push(content);\n        }\n      }\n    }\n  });\n}\nconst assign = (0, _plugin.default)(_assign);\nexports.assign = assign;\nvar _default = assign;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = exports.default = void 0;\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst styleMatcher = /<style([\\s\\S]*?)>([\\s\\S]*?)<\\/style>/i;\nconst styleMatcherOpening = /^<style(?=(\\s|>|$))/i;\nconst styleMatcherClosing = /<\\/style>/i;\nconst styleMatcherScoped = /\\bscoped\\b/i;\n\n/**\n * Marpit style parse plugin.\n *\n * Parse `<style>` elements as the hidden `marpit_style` token. The parsed style\n * will use in {@link ThemeSet#pack} to append the style additionally.\n *\n * `<style>` elements will strip regardless of html setting provided by\n * markdown-it.\n *\n * @function parse\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _parse(md) {\n  /**\n   * Based on markdown-it html_block rule\n   * https://github.com/markdown-it/markdown-it/blob/master/lib/rules_block/html_block.js\n   */\n  md.block.ruler.before('html_block', 'marpit_style_parse', (state, startLine, endLine, silent) => {\n    // Fast fail\n    let pos = state.bMarks[startLine] + state.tShift[startLine];\n    if (state.src.charCodeAt(pos) !== 0x3c) return false;\n    let max = state.eMarks[startLine];\n    let line = state.src.slice(pos, max);\n\n    // Match to opening element\n    if (!styleMatcherOpening.test(line)) return false;\n    if (silent) return true;\n\n    // Parse ending element\n    let nextLine = startLine + 1;\n    if (!styleMatcherClosing.test(line)) {\n      while (nextLine < endLine) {\n        if (state.sCount[nextLine] < state.blkIndent) break;\n        pos = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n        line = state.src.slice(pos, max);\n        nextLine += 1;\n        if (styleMatcherClosing.test(line)) break;\n      }\n    }\n    state.line = nextLine;\n\n    // Create token\n    const token = state.push('marpit_style', '', 0);\n    token.map = [startLine, nextLine];\n    token.markup = state.getLines(startLine, nextLine, state.blkIndent, true);\n    token.meta = {};\n    token.hidden = true;\n    const matchedContent = styleMatcher.exec(token.markup);\n    if (matchedContent) {\n      const [, attrStr, contentStr] = matchedContent;\n      token.content = contentStr.trim();\n      token.meta.marpitStyleScoped = styleMatcherScoped.test(attrStr.trim());\n    }\n    return true;\n  });\n}\nconst parse = (0, _plugin.default)(_parse);\nexports.parse = parse;\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sweep = exports.default = void 0;\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit sweep plugin.\n *\n * Hide blank paragraphs. For better support of the background image syntax and\n * directives through HTML comment, Marpit will sweep paragraphs included only\n * whitespace by setting `hidden: true`.\n *\n * It also sweep the inline token marked as hidden forcely. Please notice that\n * plugins executed after this cannot handle hidden inline tokens.\n *\n * @function sweep\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction _sweep(md) {\n  md.core.ruler.after('inline', 'marpit_sweep', state => {\n    if (state.inlineMode) return;\n    for (const token of state.tokens) {\n      if (token.type === 'html_block' && token.content.match(/^\\s*$/) || token.type === 'inline' && token.children.filter(t => !(t.hidden || t.type === 'softbreak')).every(t => t.type === 'text' && t.content.match(/^\\s*$/))) token.hidden = true;\n    }\n  });\n  md.core.ruler.push('marpit_sweep_paragraph', state => {\n    if (state.inlineMode) return;\n    const current = {\n      open: [],\n      tokens: {}\n    };\n    for (const token of state.tokens) {\n      if (token.type === 'inline' && token.hidden) {\n        // markdown-it's \"inline\" type is not following a `hidden` flag. Marpit\n        // changes the token type to unique name to hide token forcely.\n        token.type = 'marpit_hidden_inline';\n      } else if (token.type === 'paragraph_open') {\n        current.open.push(token);\n        current.tokens[token] = [];\n      } else if (token.type === 'paragraph_close') {\n        const openToken = current.open.pop();\n        if (current.tokens[openToken].every(t => t.hidden)) {\n          openToken.hidden = true;\n          token.hidden = true;\n        }\n      } else {\n        const len = current.open.length;\n        if (len > 0) current.tokens[current.open[len - 1]].push(token);\n      }\n    }\n  });\n}\nconst sweep = (0, _plugin.default)(_sweep);\nexports.sweep = sweep;\nvar _default = sweep;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.advancedBackground = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS advanced background plugin.\n *\n * Append style to suport the advanced background.\n *\n * @function advancedBackground\n */\nconst advancedBackground = (0, _postcss_plugin.default)('marpit-postcss-advanced-background', () => css => {\n  css.last.after(`\nsection[data-marpit-advanced-background=\"background\"] {\n  columns: initial !important;\n  display: block !important;\n  padding: 0 !important;\n}\n\nsection[data-marpit-advanced-background=\"background\"]::before,\nsection[data-marpit-advanced-background=\"background\"]::after,\nsection[data-marpit-advanced-background=\"content\"]::before,\nsection[data-marpit-advanced-background=\"content\"]::after {\n  display: none !important;\n}\n\nsection[data-marpit-advanced-background=\"background\"] > div[data-marpit-advanced-background-container] {\n  all: initial;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n}\n\nsection[data-marpit-advanced-background=\"background\"] > div[data-marpit-advanced-background-container][data-marpit-advanced-background-direction=\"vertical\"] {\n  flex-direction: column;\n}\n\nsection[data-marpit-advanced-background=\"background\"][data-marpit-advanced-background-split] > div[data-marpit-advanced-background-container] {\n  width: var(--marpit-advanced-background-split, 50%);\n}\n\nsection[data-marpit-advanced-background=\"background\"][data-marpit-advanced-background-split=\"right\"] > div[data-marpit-advanced-background-container] {\n  margin-left: calc(100% - var(--marpit-advanced-background-split, 50%));\n}\n\nsection[data-marpit-advanced-background=\"background\"] > div[data-marpit-advanced-background-container] > figure {\n  all: initial;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  flex: auto;\n  margin: 0;\n}\n\nsection[data-marpit-advanced-background=\"content\"],\nsection[data-marpit-advanced-background=\"pseudo\"] {\n  background: transparent !important;\n}\n\nsection[data-marpit-advanced-background=\"pseudo\"],\n:marpit-container > svg[data-marpit-svg] > foreignObject[data-marpit-advanced-background=\"pseudo\"] {\n  pointer-events: none !important;\n}\n\nsection[data-marpit-advanced-background-split] {\n  width: 100%;\n  height: 100%;\n}\n`.trim());\n});\nexports.advancedBackground = advancedBackground;\nvar _default = advancedBackground;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importHoisting = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS import hoisting plugin.\n *\n * Hoist `@charset` and `@import` at-rule to the beginning of CSS. Marpit is\n * manipulating CSS with many PostCSS plugins, so sometimes a few at-rules\n * cannot keep specification.\n *\n * This plugin takes care of hoisting for invalid at-rules.\n *\n * @function importHoisting\n */\nconst importHoisting = (0, _postcss_plugin.default)('marpit-postcss-import-hoisting', () => css => {\n  const hoisted = {\n    charset: undefined,\n    imports: []\n  };\n  css.walkAtRules(rule => {\n    if (rule.name === 'charset') {\n      rule.remove();\n      if (!hoisted.charset) hoisted.charset = rule;\n    } else if (rule.name === 'import') {\n      hoisted.imports.push(rule.remove());\n    }\n  });\n  const {\n    first\n  } = css\n\n  // Hoist at-rules\n  ;\n  [hoisted.charset, ...hoisted.imports].filter(r => r).forEach((rule, idx) => {\n    // Strip whitespace from the beginning of first at-rule\n    const prependRule = idx === 0 ? rule.clone({\n      raws: {\n        before: undefined\n      }\n    }) : rule;\n    first.before(prependRule);\n  });\n});\nexports.importHoisting = importHoisting;\nvar _default = importHoisting;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importParse = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint consistent-return: 0 */\n/** @module */\n\n/**\n * @typedef {object} ImportMeta\n * @prop {AtRule} node The at-rule node parsed by PostCSS.\n * @prop {string} value The specified value.\n */\n\n/**\n * Marpit PostCSS import parse plugin.\n *\n * Parse `@import` and `@import-theme` rules that specify a plain string.\n *\n * The `@import` rule for Marpit theme follows CSS spec. It must precede all\n * other statements. (excepted `@charset`)\n *\n * When you are using CSS preprocessors like Sass, `@import` would resolve path\n * in compiling and would be lost definition. So you can use `@import-theme`\n * rule alternatively.\n *\n * A specification of `@import-theme` has a bit different from `@import`. You\n * can place `@import-theme` rule at any in the CSS root, and the content of\n * imported theme will always append to the beginning of CSS.\n *\n * @function importParse\n */\nconst importParse = (0, _postcss_plugin.default)('marpit-postcss-import-parse', () => (css, {\n  result\n}) => {\n  const imports = {\n    import: [],\n    importTheme: []\n  };\n  let allowImport = true;\n  css.walk(node => {\n    if (node.type === 'atrule') {\n      const push = target => {\n        const [quote] = node.params;\n        if (quote !== '\"' && quote !== \"'\") return;\n        const splitedValue = node.params.slice(1).split(quote);\n        let value = '';\n        splitedValue.every(v => {\n          if (v.endsWith('\\\\')) {\n            value = `${value}${v.slice(0, -1)}${quote}`;\n            return true;\n          }\n          value = `${value}${v}`;\n          return false;\n        });\n        node.marpitImportParse = value;\n        target.push({\n          node,\n          value\n        });\n      };\n      if (allowImport) {\n        if (node.name === 'import') {\n          push(imports.import);\n        } else if (node.name !== 'charset') {\n          allowImport = false;\n        }\n      }\n      if (node.name === 'import-theme' && node.parent.type === 'root') {\n        push(imports.importTheme);\n      }\n    } else if (node.type !== 'comment') {\n      allowImport = false;\n    }\n  });\n  result.marpitImport = [...imports.importTheme, ...imports.import];\n});\nexports.importParse = importParse;\nvar _default = importParse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importReplace = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nvar _parse = _interopRequireDefault(require(\"./parse\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS import replace plugin.\n *\n * Replace parsed `@import` / `@import-theme` rules.\n *\n * Please see {@link module:postcss/import/parse} about the specification of\n * each syntax.\n *\n * @function importReplace\n * @param {ThemeSet} themeSet ThemeSet instance.\n */\nconst importReplace = (themeSet, importedThemes = []) => (0, _postcss_plugin.default)('marpit-postcss-import-replace', () => ({\n  plugins: [(0, _parse.default)(), (0, _postcss_plugin.default)('marpit-postcss-import-replace-processor', () => (css, {\n    postcss\n  }) => {\n    const prepends = [];\n    css.walk(node => {\n      const name = node.marpitImportParse;\n      if (name) {\n        const theme = themeSet.get(name);\n        if (theme) {\n          if (importedThemes.includes(name)) throw new Error(`Circular \"${name}\" theme import is detected.`);\n          const processed = postcss([importReplace(themeSet, [...importedThemes, name])]).process(theme.css);\n          if (node.name === 'import') {\n            node.replaceWith(processed.root);\n          } else {\n            node.remove();\n            prepends.unshift(processed.root);\n          }\n        }\n      }\n    });\n    for (const root of prepends) css.first.before(root);\n  })()]\n}));\nexports.importReplace = importReplace;\nvar _default = importReplace;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importSuppress = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nvar _parse = _interopRequireDefault(require(\"./parse\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS import suppress plugin.\n *\n * Comment out `@import` / `@import-theme` rules that have imported theme.\n *\n * This plugin is useful to prevent the inline style's rolled-up theme import by\n * unexpected order.\n *\n * @function importSuppress\n * @param {ThemeSet} themeSet ThemeSet instance.\n */\nconst importSuppress = (0, _postcss_plugin.default)('marpit-postcss-import-suppress', themeSet => ({\n  plugins: [(0, _parse.default)(), (0, _postcss_plugin.default)('marpit-postcss-import-suppress', () => css => {\n    css.walk(node => {\n      if (node.marpitImportParse && themeSet.has(node.marpitImportParse)) node.replaceWith(`${node.raw('before')}/* ${node.toString()}; */`);\n    });\n  })()]\n}));\nexports.importSuppress = importSuppress;\nvar _default = importSuppress;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pagination = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS pagination plugin.\n *\n * Marpit uses `section::after` to show the pagination on each slide. It defines\n * in the scaffold theme.\n *\n * This plugin will comment out a `content` declaration defined in any\n * `section::after` of the root, to prevent override the defined attribute for\n * paginating.\n *\n * @function pagination\n */\nconst pagination = (0, _postcss_plugin.default)('marpit-postcss-pagination', () => css => {\n  css.walkRules(rule => {\n    if (rule.selectors.some(selector => /^section(?![\\w-])[^\\s>+~]*::?after$/.test(selector.replace(/\\[.*?\\]/g, '')))) rule.walkDecls('content', decl => {\n      if (!decl.value.includes('attr(data-marpit-pagination)')) decl.replaceWith(`${decl.raw('before')}/* ${decl.toString()}; */`);\n    });\n  });\n});\nexports.pagination = pagination;\nvar _default = pagination;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printable = exports.postprocess = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst marpitPrintContainerStyle = `\nhtml, body {\n  background-color: #fff;\n  margin: 0;\n  page-break-inside: avoid;\n  break-inside: avoid-page;\n}\n`.trim();\n\n/**\n * Marpit PostCSS printable plugin.\n *\n * Make printable slide deck as PDF.\n *\n * @param {Object} opts\n * @param {string} opts.width\n * @param {string} opts.height\n * @function printable\n */\nconst printable = (0, _postcss_plugin.default)('marpit-postcss-printable', opts => css => {\n  css.walkAtRules('media', rule => {\n    if (rule.params === 'marpit-print') rule.remove();\n  });\n  css.first.before(`\n@page {\n  size: ${opts.width} ${opts.height};\n  margin: 0;\n}\n\n@media marpit-print {\n  section {\n    page-break-before: always;\n    break-before: page;\n  }\n\n  section, section * {\n    -webkit-print-color-adjust: exact !important;\n    animation-delay: 0s !important;\n    animation-duration: 0s !important;\n    color-adjust: exact !important;\n    transition: none !important;\n  }\n\n  :marpit-container > svg[data-marpit-svg] {\n    display: block;\n    height: 100vh;\n    width: 100vw;\n  }\n}\n`.trim());\n});\n\n/**\n * The post-process PostCSS plugin of Marpit printable plugin.\n *\n * @function postprocess\n */\nexports.printable = printable;\nconst postprocess = (0, _postcss_plugin.default)('marpit-postcss-printable-postprocess', () => css => css.walkAtRules('media', rule => {\n  if (rule.params !== 'marpit-print') return;\n  rule.params = 'print';\n  rule.first.before(marpitPrintContainerStyle);\n}));\nexports.postprocess = postprocess;\nvar _default = printable;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pseudoSelectorPrepend = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS pseudo selector prepending plugin.\n *\n * Prepend `:marpit-container > :marpit-slide` pseudo selector to each selector\n * of Marpit theme CSS for modulized styling.\n *\n * @function pseudoSelectorPrepend\n */\nconst pseudoSelectorPrepend = (0, _postcss_plugin.default)('marpit-postcss-pseudo-selector-prepend', () => css => css.walkRules(rule => {\n  const {\n    type,\n    name\n  } = rule.parent || {};\n  if (type === 'atrule' && name === 'keyframes') return;\n  rule.selectors = rule.selectors.map(selector => {\n    if (/^section(?![\\w-])/.test(selector)) return `:marpit-container > :marpit-slide${selector.slice(7)}`;\n    if (selector.startsWith(':marpit-container')) return selector;\n    return `:marpit-container > :marpit-slide ${selector}`;\n  });\n}));\nexports.pseudoSelectorPrepend = pseudoSelectorPrepend;\nvar _default = pseudoSelectorPrepend;\nexports.default = _default;", "/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { ‚Ä¶ }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it‚Äôs not a printable ASCII character‚Ä¶\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It‚Äôs a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It‚Äôs an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they‚Äôre redundant. Note that this is only possible if the escape\n\t// sequence isn‚Äôt preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It‚Äôs not safe to remove the space, so don‚Äôt.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pseudoSelectorReplace = exports.default = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nvar _wrap_array = require(\"../../helpers/wrap_array\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst buildSelector = elms => elms.map(e => {\n  const classes = new Set((e.class || '').split(/\\s+/).filter(c => c));\n  let element = [e.tag, ...classes].map(c => (0, _cssesc.default)(c, {\n    isIdentifier: true\n  })).join('.');\n  if (e.id) element += `#${(0, _cssesc.default)(e.id, {\n    isIdentifier: true\n  })}`;\n  return element;\n}).join(' > ');\n\n/**\n * Marpit PostCSS pseudo selector replace plugin.\n *\n * Replace `:marpit-container` and `:marpit-slide` pseudo selector into\n * container element(s).\n *\n * @function pseudoSelectorReplace\n * @param {Element|Element[]} [elements] Container elements\n * @param {Element|Element[]} [slideElements={ tag: 'section' }] Slide elements\n */\nconst pseudoSelectorReplace = (0, _postcss_plugin.default)('marpit-postcss-pseudo-selector-replace', (elements, slideElements = {\n  tag: 'section'\n}) => {\n  const container = buildSelector([...(0, _wrap_array.wrapArray)(elements)]);\n  const section = buildSelector([...(0, _wrap_array.wrapArray)(slideElements)]);\n  return css => css.walkRules(rule => {\n    rule.selectors = rule.selectors.map(selector => selector.replace(/:marpit-container(?![\\w-])/g, container).replace(/:marpit-slide(?![\\w-])/g, section).replace(/^\\s*>\\s*/, ''));\n  });\n});\nexports.pseudoSelectorReplace = pseudoSelectorReplace;\nvar _default = pseudoSelectorReplace;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rootFontSizeCustomProp = exports.rootFontSize = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst rootFontSizeCustomProp = '--marpit-root-font-size';\n\n/**\n * Marpit PostCSS root font size plugin.\n *\n * Inject CSS variable based on the root slide container `section` for correct\n * calculation of `rem` unit in the context of Marpit.\n *\n * @function rootFontSize\n */\nexports.rootFontSizeCustomProp = rootFontSizeCustomProp;\nconst rootFontSize = (0, _postcss_plugin.default)('marpit-postcss-root-font-size', () => (css, postcss) => css.walkRules(rule => {\n  const injectSelector = new Set();\n  for (const selector of rule.selectors) {\n    // Detect whether the selector is targeted to section\n    const parentSelectors = selector.split(/(\\s+|\\s*[>~+]\\s*)/);\n    const targetSelector = parentSelectors.pop();\n    const delimiterMatched = targetSelector.match(/[.:#[]/);\n    const target = delimiterMatched ? targetSelector.slice(0, delimiterMatched.index) : targetSelector;\n    if (target === 'section' || target.endsWith('*') || target === '') {\n      // Generate selector for injection\n      injectSelector.add([...parentSelectors, target === 'section' ? 'section' : ':marpit-container > :marpit-slide section',\n      // Universal selector is targeted to the children `section` of root `section`\n      delimiterMatched ? targetSelector.slice(delimiterMatched.index) : ''].join(''));\n    }\n  }\n  if (injectSelector.size === 0) return;\n\n  // Inject CSS variable\n  const injectRule = postcss.rule({\n    selectors: [...injectSelector.values()]\n  });\n  rule.walkDecls('font-size', decl => {\n    injectRule.append(decl.clone({\n      prop: rootFontSizeCustomProp\n    }));\n  });\n  if (injectRule.nodes.length > 0) rule.parent.insertAfter(rule, injectRule);\n}));\nexports.rootFontSize = rootFontSize;\nvar _default = rootFontSize;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rootIncreasingSpecificity = exports.pseudoClass = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst pseudoClass = ':marpit-root';\nexports.pseudoClass = pseudoClass;\nconst matcher = new RegExp(`\\\\b(?:section)?${pseudoClass}\\\\b`, 'g');\n\n/**\n * Marpit PostCSS root increasing specificity plugin.\n *\n * Replace specific pseudo-class selector to `:where(section):not([\\20 root])`,\n * to increase specificity. `:marpit-root` is always added to `section` selector\n * by root replace plugin so `:where(section):not([\\20 root])` must always match\n * too (HTML does not allow U+0020 SPACE in the attribute name.).\n *\n * @function rootIncreasingSpecificity\n */\nconst rootIncreasingSpecificity = (0, _postcss_plugin.default)('marpit-postcss-root-increasing-specificity', () => css => css.walkRules(rule => {\n  rule.selectors = rule.selectors.map(selector => selector.replace(matcher, ':where(section):not([\\\\20 root])'));\n}));\nexports.rootIncreasingSpecificity = rootIncreasingSpecificity;\nvar _default = rootIncreasingSpecificity;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rem = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nvar _font_size = require(\"./font_size\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst skipParsingMatcher = /(\"[^\"]*\"|'[^']*'|(?:attr|url|var)\\([^)]*\\))/g;\n\n/**\n * Marpit PostCSS rem plugin.\n *\n * Replace `rem` unit to calculated value from CSS variable.\n *\n * @function rem\n */\nconst rem = (0, _postcss_plugin.default)('marpit-postcss-rem', () => css => css.walkDecls(decl => {\n  decl.value = decl.value.split(skipParsingMatcher).map((v, i) => {\n    if (i % 2) return v;\n    return v.replace(/(\\d*\\.?\\d+)rem\\b/g, (_, num) => `calc(var(${_font_size.rootFontSizeCustomProp}, 1rem) * ${num})`);\n  }).join('');\n}));\nexports.rem = rem;\nvar _default = rem;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rootReplace = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS root replace plugin.\n *\n * Replace `:root` pseudo-class selector into `section`. It can add custom\n * pseudo class through `pseudoClass` option to make distinguishable from\n * `section` selector.\n *\n * @function rootReplace\n */\nconst rootReplace = (0, _postcss_plugin.default)('marpit-postcss-root-replace', ({\n  pseudoClass\n} = {}) => css => css.walkRules(rule => {\n  // Replace `:root` pseudo-class selectors into `section`\n  rule.selectors = rule.selectors.map(selector => selector.replace(/(^|[\\s>+~(])(?:section)?:root\\b/g, (_, s) => `${s}section${pseudoClass || ''}`));\n}));\nexports.rootReplace = rootReplace;\nvar _default = rootReplace;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.svgBackdrop = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst backdropMatcher = /(?:\\b|^)::backdrop$/;\n\n/**\n * Marpit PostCSS SVG backdrop plugin.\n *\n * Retarget `::backdrop` and `section::backdrop` selector to\n * `@media screen { :marpit-container > svg[data-marpit-svg] { .. } }`. It means\n * `::backdrop` targets the SVG container in inline SVG mode.\n *\n * It's useful for setting style of the letterbox and pillarbox in the SVG\n * scaled slide.\n *\n * ```css\n * ::backdrop {\n *   background-color: #448;\n * }\n * ```\n *\n * The original definition will remain to support an original usage of\n * `::backdrop`.\n *\n * The important differences from an original `::backdrop` are following:\n *\n * - In original spec, `::backdrop` creates a separated layer from the target\n *   element, but Marpit's `::backdrop` does not. The slide elements still\n *   become the child of `::backdrop` so setting some properties that are\n *   inherited may make broken slide rendering.\n * - Even if the browser is not fullscreen, `::backdrop` will match to SVG\n *   container whenever matched to `@media screen` media query.\n *\n * If concerned to conflict with the style provided by the app, consider to\n * disable the selector support by `inlineSVG: { backdropSelector: false }`.\n *\n * @see https://developer.mozilla.org/docs/Web/CSS/::backdrop\n * @function svgBackdrop\n */\nconst svgBackdrop = (0, _postcss_plugin.default)('marpit-postcss-svg-backdrop', () => (css, postcss) => {\n  css.walkRules(rule => {\n    const injectSelectors = new Set();\n    for (const selector of rule.selectors) {\n      // Detect pseudo-element (must appear after the simple selectors)\n      if (!selector.match(backdropMatcher)) continue;\n\n      // Detect whether the selector is targeted to section\n      const delimiterMatched = selector.match(/[.:#[]/); // must match\n      const target = selector.slice(0, delimiterMatched.index);\n      if (target === 'section' || target === '') {\n        const delimiter = selector.slice(delimiterMatched.index, -10);\n        injectSelectors.add(`:marpit-container > svg[data-marpit-svg]${delimiter}`);\n      }\n    }\n    if (injectSelectors.size > 0 && rule.nodes.length > 0) {\n      rule.parent.insertAfter(rule, postcss.atRule({\n        name: 'media',\n        params: 'screen',\n        nodes: [postcss.rule({\n          selectors: [...injectSelectors.values()],\n          nodes: rule.nodes\n        })]\n      }));\n    }\n  });\n});\nexports.svgBackdrop = svgBackdrop;\nvar _default = svgBackdrop;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.meta = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS meta plugin.\n *\n * Parse CSS comment written in the format of `@key value`.\n *\n * @function meta\n * @param {Object} [opts]\n * @param {Object} [opts.metaType] An object for defined types for metadata.\n */\nconst meta = (0, _postcss_plugin.default)('marpit-postcss-meta', (opts = {}) => (css, {\n  result\n}) => {\n  const metaType = opts.metaType || {};\n  result.marpitMeta = result.marpitMeta || {};\n  css.walkComments(comment => {\n    comment.text.slice(0).replace(/^[*!\\s]*@([\\w-]+)\\s+(.+)$/gim, (_, metaName, value) => {\n      if (metaType[metaName] === Array) {\n        // Array meta\n        result.marpitMeta[metaName] = [...(result.marpitMeta[metaName] || []), value];\n      } else {\n        // String meta (default)\n        result.marpitMeta[metaName] = value;\n      }\n    });\n  });\n});\nexports.meta = meta;\nvar _default = meta;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sectionSize = exports.default = void 0;\nvar _postcss_plugin = _interopRequireDefault(require(\"../helpers/postcss_plugin\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\n/**\n * Marpit PostCSS section size plugin.\n *\n * Parse width and height declartaion on `section` selector.\n *\n * @function sectionSize\n */\nconst sectionSize = (0, _postcss_plugin.default)('marpit-postcss-section-size', ({\n  preferedPseudoClass\n} = {}) => {\n  const rootSectionMatcher = new RegExp(`^section${preferedPseudoClass ? `(${preferedPseudoClass})?` : ''}$`);\n  return (css, {\n    result\n  }) => {\n    const originalSize = result.marpitSectionSize || {};\n    const detectedSize = {};\n    const preferedSize = {};\n    let matched;\n    css.walkRules(rule => {\n      if (rule.selectors.some(s => {\n        matched = s.match(rootSectionMatcher);\n        return !!matched;\n      })) {\n        rule.walkDecls(/^(width|height)$/, decl => {\n          const {\n            prop\n          } = decl;\n          const value = decl.value.trim();\n          if (matched[1]) {\n            preferedSize[prop] = value;\n          } else {\n            detectedSize[prop] = value;\n          }\n        });\n      }\n    });\n    const width = preferedSize.width || detectedSize.width || originalSize.width;\n    const height = preferedSize.height || detectedSize.height || originalSize.height;\n    result.marpitSectionSize = {\n      ...originalSize\n    };\n    if (width) result.marpitSectionSize.width = width;\n    if (height) result.marpitSectionSize.height = height;\n  };\n});\nexports.sectionSize = sectionSize;\nvar _default = sectionSize;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// This symbol is for internal to skip name validation when creating theme.\nvar _default = Symbol('skipThemeValidation');\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\nvar _parse = _interopRequireDefault(require(\"./postcss/import/parse\"));\nvar _meta = _interopRequireDefault(require(\"./postcss/meta\"));\nvar _increasing_specificity = require(\"./postcss/root/increasing_specificity\");\nvar _replace = _interopRequireDefault(require(\"./postcss/root/replace\"));\nvar _section_size = _interopRequireDefault(require(\"./postcss/section_size\"));\nvar _symbol = _interopRequireDefault(require(\"./theme/symbol\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst absoluteUnits = {\n  cm: v => v * 960 / 25.4,\n  in: v => v * 96,\n  mm: v => v * 96 / 25.4,\n  pc: v => v * 16,\n  pt: v => v * 4 / 3,\n  px: v => v\n};\nconst convertToPixel = value => {\n  if (typeof value !== 'string') return undefined;\n  const matched = value.match(/^(-?[.0-9]+)([a-z]+)$/i);\n  if (!matched) return undefined;\n  const [, num, unit] = matched;\n  const parsed = Number.parseFloat(num);\n  if (Number.isNaN(parsed)) return undefined;\n  const conv = absoluteUnits[unit];\n  return conv ? conv(parsed) : undefined;\n};\nconst memoizeProp = name => `${name}Memoized`;\nconst reservedMetaType = {\n  theme: String\n};\n\n/**\n * Marpit theme class.\n */\nclass Theme {\n  /**\n   * Create a Theme instance.\n   *\n   * You should use {@link Theme.fromCSS} unless there is some particular\n   * reason.\n   *\n   * @param {string} name The name of theme.\n   * @param {string} css The content of CSS.\n   * @hideconstructor\n   */\n  constructor(name, css) {\n    /**\n     * The name of theme.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * The content of theme CSS.\n     * @type {string}\n     */\n    this.css = css;\n\n    /**\n     * Parsed metadata from CSS comments.\n     * @type {Object}\n     */\n    this.meta = Object.freeze({});\n\n    /**\n     * Parsed `@import` rules.\n     * @type {module:postcss/import/parse~ImportMeta[]}\n     */\n    this.importRules = [];\n\n    /**\n     * Slide width. It requires the absolute unit supported in CSS.\n     * @type {string}\n     */\n    this.width = undefined;\n\n    /**\n     * Slide height. It requires the absolute unit supported in CSS.\n     * @type {string}\n     */\n    this.height = undefined;\n    this.memoizeInit('width');\n    this.memoizeInit('height');\n  }\n\n  /**\n   * Create a Theme instance from Marpit theme CSS.\n   *\n   * @alias Theme.fromCSS\n   * @param {string} cssString The string of Marpit theme CSS. It requires\n   *     `@theme` meta comment.\n   * @param {Object} [opts]\n   * @param {Object} [opts.metaType] An object for defined types for metadata.\n   */\n  static fromCSS(cssString, opts = {}) {\n    const metaType = {\n      ...(opts.metaType || {}),\n      ...reservedMetaType\n    };\n    const {\n      css,\n      result\n    } = (0, _postcss.default)([(0, _meta.default)({\n      metaType\n    }), (0, _replace.default)({\n      pseudoClass: _increasing_specificity.pseudoClass\n    }), (0, _section_size.default)({\n      preferedPseudoClass: _increasing_specificity.pseudoClass\n    }), _parse.default]).process(cssString);\n    if (!opts[_symbol.default] && !result.marpitMeta.theme) throw new Error('Marpit theme CSS requires @theme meta.');\n    const theme = new Theme(result.marpitMeta.theme, css);\n    theme.importRules = [...result.marpitImport];\n    theme.meta = Object.freeze({\n      ...result.marpitMeta\n    });\n    Object.assign(theme, {\n      ...result.marpitSectionSize\n    });\n    return Object.freeze(theme);\n  }\n\n  /**\n   * The converted width into pixel.\n   *\n   * @alias Theme#widthPixel\n   * @type {number}\n   * @readonly\n   */\n  get widthPixel() {\n    return this.memoize('width', convertToPixel);\n  }\n\n  /**\n   * The converted height into pixel.\n   *\n   * @alias Theme#heightPixel\n   * @type {number}\n   * @readonly\n   */\n  get heightPixel() {\n    return this.memoize('height', convertToPixel);\n  }\n\n  /** @private */\n  memoize(prop, func) {\n    if (this[memoizeProp(prop)].has(this[prop])) return this[memoizeProp(prop)].get(this[prop]);\n    const converted = func(this[prop]);\n    this[memoizeProp(prop)].set(this[prop], converted);\n    return converted;\n  }\n\n  /** @private */\n  memoizeInit(prop) {\n    if (!this[memoizeProp(prop)]) Object.defineProperty(this, memoizeProp(prop), {\n      value: new Map()\n    });\n  }\n}\nvar _default = Theme;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scaffoldTheme = exports.default = void 0;\nvar _theme = _interopRequireDefault(require(\"../theme\"));\nvar _symbol = _interopRequireDefault(require(\"./symbol\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** @module */\n\nconst css = `\nsection {\n  width: 1280px;\n  height: 720px;\n\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n\n  scroll-snap-align: center center;\n}\n\nsection::after {\n  bottom: 0;\n  content: attr(data-marpit-pagination);\n  padding: inherit;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n}\n\nsection:not([data-marpit-pagination])::after {\n  display: none;\n}\n\n/* Normalization */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\nvideo::-webkit-media-controls {\n  will-change: transform;\n}\n`.trim();\n\n/**\n * The scaffold theme. It includes these features:\n *\n * - Define the default slide size.\n * - Set default style for `<section>`.\n * - Normalize `<h1>` heading style.\n * - Apply workaround for glitched video control on Chromium (https://github.com/marp-team/marpit/issues/205)\n *\n * @type {Theme}\n */\nconst scaffoldTheme = _theme.default.fromCSS(css, {\n  [_symbol.default]: true\n});\nexports.scaffoldTheme = scaffoldTheme;\nvar _default = scaffoldTheme;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\nvar _postcss_plugin = _interopRequireDefault(require(\"./helpers/postcss_plugin\"));\nvar _advanced_background = _interopRequireDefault(require(\"./postcss/advanced_background\"));\nvar _hoisting = _interopRequireDefault(require(\"./postcss/import/hoisting\"));\nvar _replace = _interopRequireDefault(require(\"./postcss/import/replace\"));\nvar _suppress = _interopRequireDefault(require(\"./postcss/import/suppress\"));\nvar _pagination = _interopRequireDefault(require(\"./postcss/pagination\"));\nvar _printable = _interopRequireWildcard(require(\"./postcss/printable\"));\nvar _prepend = _interopRequireDefault(require(\"./postcss/pseudo_selector/prepend\"));\nvar _replace2 = _interopRequireDefault(require(\"./postcss/pseudo_selector/replace\"));\nvar _font_size = _interopRequireDefault(require(\"./postcss/root/font_size\"));\nvar _increasing_specificity = _interopRequireWildcard(require(\"./postcss/root/increasing_specificity\"));\nvar _rem = _interopRequireDefault(require(\"./postcss/root/rem\"));\nvar _replace3 = _interopRequireDefault(require(\"./postcss/root/replace\"));\nvar _svg_backdrop = _interopRequireDefault(require(\"./postcss/svg_backdrop\"));\nvar _theme = _interopRequireDefault(require(\"./theme\"));\nvar _scaffold = _interopRequireDefault(require(\"./theme/scaffold\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Marpit theme set class.\n */\nclass ThemeSet {\n  /**\n   * Create a ThemeSet instance.\n   */\n  constructor() {\n    /**\n     * An instance of default theme.\n     *\n     * While running {@link ThemeSet#pack}, ThemeSet will use this theme when\n     * the definition of theme directive or the theme with specified name is not\n     * found.\n     *\n     * By default, Marpit does not provide default theme (`undefined`).\n     *\n     * @type {Theme|undefined}\n     */\n    this.default = undefined;\n\n    /**\n     * The default type settings for theme metadata added by\n     * {@link ThemeSet#add}.\n     *\n     * A key of object is the name of metadata and a value is the type which of\n     * `String` and `Array`. You have to set `Array` if the theme allows\n     * multi-time definitions in same meta key.\n     *\n     * ```css\n     * /**\n     *  * @theme example\n     *  * @foo Single value\n     *  * @foo allows only one string\n     *  * @bar Multiple value 1\n     *  * @bar Multiple value 2\n     *  * @bar Multiple value 3\n     *  * ...\n     * ```\n     *\n     * ```js\n     * const themeSet = new ThemeSet()\n     *\n     * themeSet.metaType = {\n     *   foo: String,\n     *   bar: Array,\n     * }\n     *\n     * themeSet.add(css)\n     *\n     * console.log(themeSet.getThemeMeta('example', 'foo'))\n     * // => 'allows only one string'\n     *\n     * console.log(themeSet.getThemeMeta('example', 'bar'))\n     * // => ['Multiple value 1', 'Multiple value 2', 'Multiple value 3']\n     * ```\n     *\n     * @type {Object}\n     */\n    this.metaType = {};\n    Object.defineProperty(this, 'themeMap', {\n      value: new Map()\n    });\n  }\n\n  /**\n   * Return the number of themes.\n   *\n   * @type {number}\n   * @readonly\n   */\n  get size() {\n    return this.themeMap.size;\n  }\n\n  /**\n   * Add theme CSS from string.\n   *\n   * @param {string} css The theme CSS string.\n   * @returns {Theme} A created {@link Theme} instance.\n   * @throws Will throw an error if the theme name is not specified by `@theme`\n   *     metadata.\n   */\n  add(css) {\n    const theme = _theme.default.fromCSS(css, {\n      metaType: this.metaType\n    });\n    this.addTheme(theme);\n    return theme;\n  }\n\n  /**\n   * Add theme instance.\n   *\n   * @param {Theme} theme The theme instance.\n   * @throws Will throw an error if the theme name is not specified.\n   */\n  addTheme(theme) {\n    if (!(theme instanceof _theme.default)) throw new Error('ThemeSet can add only an instance of Theme.');\n    if (typeof theme.name !== 'string') throw new Error('An instance of Theme requires name.');\n    this.themeMap.set(theme.name, theme);\n  }\n\n  /**\n   * Removes all themes from a {@link themeSet} object.\n   */\n  clear() {\n    return this.themeMap.clear();\n  }\n\n  /**\n   * Remove a specific named theme from a {@link themeSet} object.\n   *\n   * @param {string} name The theme name to delete.\n   * @returns {boolean} Returns `true` if a theme in current {@link ThemeSet}\n   *     existed and has been removed, or `false` if the theme does not exist.\n   */\n  delete(name) {\n    return this.themeMap.delete(name);\n  }\n\n  /**\n   * Returns a specific named theme.\n   *\n   * @param {string} name The theme name to get.\n   * @param {boolean} [fallback=false] If true, return instance's default theme\n   *     or scaffold theme when specified theme cannot find.\n   * @returns {Theme|undefined} Returns specified or fallbacked theme, or\n   *     `undefined` if `fallback` is false and the specified theme has not\n   *     existed.\n   */\n  get(name, fallback = false) {\n    const theme = this.themeMap.get(name);\n    return fallback ? theme || this.default || _scaffold.default : theme;\n  }\n\n  /**\n   * Returns value(s) of specified metadata from a theme. It considers `@import`\n   * and `@import-theme` rules in getting meta value. On the other hand, the\n   * default theme specified by the instance is not considered.\n   *\n   * To support metadata with array type, it will merge into a flatten array\n   * when the all of got valid values that includes imported themes are array.\n   *\n   * @param {string|Theme} theme The theme name or instance.\n   * @param {string} meta The meta name to get.\n   * @returns {string|string[]|undefined}\n   */\n  getThemeMeta(theme, meta) {\n    const themeInstance = theme instanceof _theme.default ? theme : this.get(theme);\n    const metas = themeInstance ? this.resolveImport(themeInstance).map(t => t.meta[meta]).filter(m => m) : [];\n\n    // Flatten in order of definitions when the all of valid values are array\n    if (metas.length > 0 && metas.every(m => Array.isArray(m))) {\n      const mergedArray = [];\n      for (const m of metas) mergedArray.unshift(...m);\n      return mergedArray;\n    }\n    return metas[0];\n  }\n\n  /**\n   * Returns the value of specified property name from a theme. It considers\n   * `@import` and `@import-theme` rules in getting value.\n   *\n   * It will fallback the reference object into the instance's default theme or\n   * scaffold theme when the specified theme is `undefined`.\n   *\n   * @param {string|Theme} theme The theme name or instance.\n   * @param {string} prop The property name to get.\n   * @returns {*}\n   */\n  getThemeProp(theme, prop) {\n    const themeInstance = theme instanceof _theme.default ? theme : this.get(theme);\n    const props = themeInstance ? this.resolveImport(themeInstance).map(t => t[prop]) : [];\n    return [...props, this.default && this.default[prop], _scaffold.default[prop]].find(t => t);\n  }\n\n  /**\n   * Returns a boolean indicating whether a specific named theme exists or not.\n   *\n   * @param {string} name The theme name.\n   * @returns {boolean} Returns `true` if a specific named theme exists,\n   *     otherwise `false`.\n   */\n  has(name) {\n    return this.themeMap.has(name);\n  }\n\n  /**\n   * Convert registered theme CSS into usable in the rendered markdown by\n   * {@link Marpit#render}.\n   *\n   * **This method is designed for internal use by {@link Marpit} class.** Use\n   * {@link Marpit#render} instead unless there is some particular reason.\n   *\n   * @param {string} name The theme name. It will use the instance's default\n   *     theme or scaffold theme when a specific named theme does not exist.\n   * @param {Object} [opts] The option object passed by {@link Marpit#render}.\n   * @param {string} [opts.after] A CSS string to append into after theme.\n   * @param {string} [opts.before] A CSS string to prepend into before theme.\n   * @param {Element[]} [opts.containers] Container elements wrapping whole\n   *     slide deck.\n   * @param {boolean} [opts.printable] Make style printable to PDF.\n   * @param {Marpit~InlineSVGOptions} [opts.inlineSVG] Apply a hierarchy of\n   *     inline SVG to CSS selector by setting `true`. _(Experimental)_\n   * @return {string} The converted CSS string.\n   */\n  pack(name, opts = {}) {\n    const slideElements = [{\n      tag: 'section'\n    }];\n    const theme = this.get(name, true);\n    const inlineSVGOpts = opts.inlineSVG || {};\n    if (inlineSVGOpts.enabled) {\n      slideElements.unshift({\n        tag: 'svg'\n      }, {\n        tag: 'foreignObject'\n      });\n    }\n    const additionalCSS = css => {\n      if (!css) return undefined;\n      try {\n        return (0, _postcss.default)([(0, _suppress.default)(this)]).process(css).css;\n      } catch (e) {\n        return undefined;\n      }\n    };\n    const after = additionalCSS(opts.after);\n    const before = additionalCSS(opts.before);\n    const packer = (0, _postcss.default)([before && (0, _postcss_plugin.default)('marpit-pack-before', () => css => css.first.before(before)), after && (0, _postcss_plugin.default)('marpit-pack-after', () => css => {\n      css.last.after(after);\n    }), _hoisting.default, (0, _replace.default)(this), opts.printable && (0, _printable.default)({\n      width: this.getThemeProp(theme, 'width'),\n      height: this.getThemeProp(theme, 'height')\n    }), theme !== _scaffold.default && (0, _postcss_plugin.default)('marpit-pack-scaffold', () => css => css.first.before(_scaffold.default.css)), inlineSVGOpts.enabled && _advanced_background.default, inlineSVGOpts.enabled && inlineSVGOpts.backdropSelector && _svg_backdrop.default, _pagination.default, (0, _replace3.default)({\n      pseudoClass: _increasing_specificity.pseudoClass\n    }), _font_size.default, _prepend.default, (0, _replace2.default)(opts.containers, slideElements), _increasing_specificity.default, opts.printable && _printable.postprocess, _rem.default, _hoisting.default].filter(p => p));\n    return packer.process(theme.css).css;\n  }\n\n  /**\n   * Returns a `Iterator` object that contains registered themes to current\n   * instance.\n   *\n   * @returns {Iterator.<Theme>}\n   */\n  themes() {\n    return this.themeMap.values();\n  }\n\n  /**\n   * Resolves `@import` and `@import-theme` and returns an array of using theme\n   * instances.\n   *\n   * @private\n   * @param {Theme} theme Theme instance\n   * @returns {Theme[]}\n   */\n  resolveImport(theme, importedThemes = []) {\n    const {\n      name\n    } = theme;\n    if (importedThemes.includes(name)) throw new Error(`Circular \"${name}\" theme import is detected.`);\n    const resolvedThemes = [theme];\n    theme.importRules.forEach(m => {\n      const importTheme = this.get(m.value);\n      if (importTheme) resolvedThemes.push(...this.resolveImport(importTheme, [...importedThemes, name].filter(n => n)));\n    });\n    return resolvedThemes.filter(v => v);\n  }\n}\nvar _default = ThemeSet;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _markdownIt = _interopRequireDefault(require(\"markdown-it\"));\nvar _element = require(\"./element\");\nvar _wrap_array = require(\"./helpers/wrap_array\");\nvar _background_image = _interopRequireDefault(require(\"./markdown/background_image\"));\nvar _collect = _interopRequireDefault(require(\"./markdown/collect\"));\nvar _comment = _interopRequireDefault(require(\"./markdown/comment\"));\nvar _container = _interopRequireDefault(require(\"./markdown/container\"));\nvar _apply = _interopRequireDefault(require(\"./markdown/directives/apply\"));\nvar _parse = _interopRequireDefault(require(\"./markdown/directives/parse\"));\nvar _fragment = _interopRequireDefault(require(\"./markdown/fragment\"));\nvar _header_and_footer = _interopRequireDefault(require(\"./markdown/header_and_footer\"));\nvar _heading_divider = _interopRequireDefault(require(\"./markdown/heading_divider\"));\nvar _image = _interopRequireDefault(require(\"./markdown/image\"));\nvar _inline_svg = _interopRequireDefault(require(\"./markdown/inline_svg\"));\nvar _slide = _interopRequireWildcard(require(\"./markdown/slide\"));\nvar _slide_container = _interopRequireDefault(require(\"./markdown/slide_container\"));\nvar _assign = _interopRequireDefault(require(\"./markdown/style/assign\"));\nvar _parse2 = _interopRequireDefault(require(\"./markdown/style/parse\"));\nvar _sweep = _interopRequireDefault(require(\"./markdown/sweep\"));\nvar _theme_set = _interopRequireDefault(require(\"./theme_set\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nconst defaultOptions = {\n  anchor: true,\n  container: _element.marpitContainer,\n  headingDivider: false,\n  looseYAML: false,\n  markdown: undefined,\n  printable: true,\n  slideContainer: false,\n  inlineSVG: false\n};\nconst defaultInlineSVGOptions = {\n  enabled: true,\n  backdropSelector: true\n};\n\n/**\n * Parse Marpit Markdown and render to the slide HTML/CSS.\n */\nvar _markdown = /*#__PURE__*/new WeakMap();\nclass Marpit {\n  /**\n   * @typedef {Object} Marpit~InlineSVGOptions\n   * @property {boolean} [enabled=true] Whether inline SVG mode is enabled.\n   * @property {boolean} [backdropSelector=true] Whether `::backdrop` selector\n   *     support is enabled. If enabled, the `::backdrop` CSS selector will\n   *     match to the SVG container element.\n   */\n\n  /**\n   * Convert slide page index into anchor string.\n   *\n   * @callback Marpit~AnchorCallback\n   * @param {number} index Slide page index, beginning from zero.\n   * @returns {string} The text of anchor for id attribute, without prefix `#`.\n   */\n  /**\n   * Create a Marpit instance.\n   *\n   * @param {Object} [opts]\n   * @param {boolean|Marpit~AnchorCallback} [opts.anchor=true] Set the page\n   *     number as anchor of each slides (`id` attribute). You can customize the\n   *     anchor text by defining a custom callback function.\n   * @param {false|Element|Element[]}\n   *     [opts.container={@link module:element.marpitContainer}] Container\n   *     element(s) wrapping whole slide deck.\n   * @param {false|number|number[]} [opts.headingDivider=false] Start a new\n   *     slide page at before of headings. it would apply to headings whose\n   *     larger than or equal to the specified level if a number is given, or\n   *     ONLY specified levels if a number array.\n   * @param {boolean} [opts.looseYAML=false] Allow loose YAML parsing in\n   *     built-in directives, and custom directives defined in current instance.\n   * @param {MarkdownIt|string|Object|Array} [opts.markdown] An instance of\n   *     markdown-it or its constructor option(s) for wrapping. Marpit will\n   *     create its instance based on CommonMark when omitted.\n   * @param {boolean} [opts.printable=true] Make style printable to PDF.\n   * @param {false|Element|Element[]} [opts.slideContainer] Container element(s)\n   *     wrapping each slide sections.\n   * @param {boolean|Marpit~InlineSVGOptions} [opts.inlineSVG=false] Wrap each\n   *     slide sections by inline SVG. _(Experimental)_\n   */\n  constructor(opts = {}) {\n    _classPrivateFieldInitSpec(this, _markdown, {\n      writable: true,\n      value: undefined\n    });\n    /**\n     * The current options for this instance.\n     *\n     * This property is read-only and marked as immutable. You cannot change the\n     * value of options after creating instance.\n     *\n     * @member {Object} options\n     * @memberOf Marpit#\n     * @readonly\n     */\n    Object.defineProperty(this, 'options', {\n      enumerable: true,\n      value: Object.freeze({\n        ...defaultOptions,\n        ...opts\n      })\n    });\n\n    /**\n     * Definitions of the custom directive.\n     *\n     * It has the assignable `global` and `local` object. They have consisted of\n     * the directive name as a key, and parser function as a value. The parser\n     * should return the validated object for updating meta of markdown-it\n     * token.\n     *\n     * @member {Object} customDirectives\n     * @memberOf Marpit#\n     * @readonly\n     */\n    Object.defineProperty(this, 'customDirectives', {\n      value: Object.seal({\n        global: Object.create(null),\n        local: Object.create(null)\n      })\n    });\n\n    /**\n     * @type {ThemeSet}\n     */\n    this.themeSet = new _theme_set.default();\n    this.applyMarkdownItPlugins((() => {\n      // Use CommonMark based instance by default\n      if (!this.options.markdown) return new _markdownIt.default('commonmark');\n\n      // Detect markdown-it features\n      if (typeof this.options.markdown === 'object' && typeof this.options.markdown.parse === 'function' && typeof this.options.markdown.renderer === 'object') return this.options.markdown;\n\n      // Create instance with passed argument(s)\n      return new _markdownIt.default(...(0, _wrap_array.wrapArray)(this.options.markdown));\n    })());\n  }\n\n  /**\n   * @type {MarkdownIt}\n   */\n  get markdown() {\n    return _classPrivateFieldGet(this, _markdown);\n  }\n  set markdown(md) {\n    if (_classPrivateFieldGet(this, _markdown) && _classPrivateFieldGet(this, _markdown).marpit) delete _classPrivateFieldGet(this, _markdown).marpit;\n    _classPrivateFieldSet(this, _markdown, md);\n    if (md) {\n      Object.defineProperty(md, 'marpit', {\n        configurable: true,\n        value: this\n      });\n    }\n  }\n\n  /** @private */\n  applyMarkdownItPlugins(md) {\n    this.markdown = md;\n    const slideAnchorCallback = (...args) => {\n      const {\n        anchor\n      } = this.options;\n      if (typeof anchor === 'function') return anchor(...args);\n      if (anchor) return (0, _slide.defaultAnchorCallback)(...args);\n      return undefined;\n    };\n    md.use(_comment.default).use(_parse2.default).use(_slide.default, {\n      anchor: slideAnchorCallback\n    }).use(_parse.default).use(_apply.default).use(_header_and_footer.default).use(_heading_divider.default).use(_slide_container.default).use(_container.default).use(_inline_svg.default).use(_image.default).use(_background_image.default).use(_sweep.default).use(_assign.default).use(_fragment.default).use(_collect.default);\n  }\n\n  /**\n   * @typedef {Object} Marpit~RenderResult\n   * @property {string|string[]} html Rendered HTML.\n   * @property {string} css Rendered CSS.\n   * @property {string[][]} comments Parsed HTML comments per slide pages,\n   *     excepted YAML for directives. It would be useful for presenter notes.\n   */\n\n  /**\n   * Render Markdown into HTML and CSS string.\n   *\n   * @param {string} markdown A Markdown string.\n   * @param {Object} [env={}] Environment object for passing to markdown-it.\n   * @param {boolean} [env.htmlAsArray=false] Output rendered HTML as array per\n   *     slide.\n   * @returns {Marpit~RenderResult} An object of rendering result.\n   */\n  render(markdown, env = {}) {\n    return {\n      html: this.renderMarkdown(markdown, env),\n      css: this.renderStyle(this.lastGlobalDirectives.theme),\n      comments: this.lastComments\n    };\n  }\n\n  /**\n   * Render Markdown by using `markdownIt#render`.\n   *\n   * This method is for internal. You can override this method if you have to\n   * render with customized way.\n   *\n   * @private\n   * @param {string} markdown A Markdown string.\n   * @param {Object} [env] Environment object for passing to markdown-it.\n   * @param {boolean} [env.htmlAsArray=false] Output rendered HTML as array per\n   *     slide.\n   * @returns {string|string[]} The result string(s) of rendering Markdown.\n   */\n  renderMarkdown(markdown, env = {}) {\n    const tokens = this.markdown.parse(markdown, env);\n    if (env.htmlAsArray) {\n      return this.lastSlideTokens.map(slideTokens => this.markdown.renderer.render(slideTokens, this.markdown.options, env));\n    }\n    return this.markdown.renderer.render(tokens, this.markdown.options, env);\n  }\n\n  /**\n   * Render style by using `themeSet#pack`.\n   *\n   * This method is for internal.\n   *\n   * @private\n   * @param {string|undefined} theme Theme name.\n   * @returns {string} The result string of rendering style.\n   */\n  renderStyle(theme) {\n    return this.themeSet.pack(theme, this.themeSetPackOptions());\n  }\n\n  /** @private */\n  themeSetPackOptions() {\n    return {\n      after: this.lastStyles ? this.lastStyles.join('\\n') : undefined,\n      containers: [...(0, _wrap_array.wrapArray)(this.options.container), ...(0, _wrap_array.wrapArray)(this.options.slideContainer)],\n      inlineSVG: this.inlineSVGOptions,\n      printable: this.options.printable\n    };\n  }\n\n  /**\n   * @private\n   * @returns {Marpit~InlineSVGOptions} Options for inline SVG.\n   */\n  get inlineSVGOptions() {\n    if (typeof this.options.inlineSVG === 'object') {\n      return {\n        ...defaultInlineSVGOptions,\n        ...this.options.inlineSVG\n      };\n    }\n    return {\n      ...defaultInlineSVGOptions,\n      enabled: !!this.options.inlineSVG\n    };\n  }\n\n  /**\n   * Load the specified markdown-it plugin with given parameters.\n   *\n   * @param {Function} plugin markdown-it plugin.\n   * @param {...*} params Params to pass into plugin.\n   * @returns {Marpit} The called {@link Marpit} instance for chainable.\n   */\n  use(plugin, ...params) {\n    plugin.call(this.markdown, this.markdown, ...params);\n    return this;\n  }\n}\nvar _default = Marpit;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Element\", {\n  enumerable: true,\n  get: function () {\n    return _element.default;\n  }\n});\nObject.defineProperty(exports, \"Marpit\", {\n  enumerable: true,\n  get: function () {\n    return _marpit.default;\n  }\n});\nObject.defineProperty(exports, \"Theme\", {\n  enumerable: true,\n  get: function () {\n    return _theme.default;\n  }\n});\nObject.defineProperty(exports, \"ThemeSet\", {\n  enumerable: true,\n  get: function () {\n    return _theme_set.default;\n  }\n});\nexports.default = void 0;\nvar _element = _interopRequireDefault(require(\"./element\"));\nvar _marpit = _interopRequireDefault(require(\"./marpit\"));\nvar _theme = _interopRequireDefault(require(\"./theme\"));\nvar _theme_set = _interopRequireDefault(require(\"./theme_set\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar _default = _marpit.default;\nexports.default = _default;"],
  "mappings": "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",
  "names": ["require_entities", "encode", "decode", "require_regex", "require_regex", "require_regex", "require_regex", "self", "require_linkify", "self", "punycode", "self", "error", "map", "map", "map", "require_list", "require_parse", "error", "map", "self", "map", "error", "require_parse", "map", "map", "require_default", "map", "string", "nodeInterop", "require_comment", "require_container", "Symbol", "require_apply", "global", "require_parse", "nodeInterop", "require_apply", "swizzle", "require_parse", "process", "require_image", "require_parse", "require_parse", "merge", "cssesc", "require_replace", "require_replace", "delimiter", "nodeInterop", "nodeInterop", "require_lib"]
}
